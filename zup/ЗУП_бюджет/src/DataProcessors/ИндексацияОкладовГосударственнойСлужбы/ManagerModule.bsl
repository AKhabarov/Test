#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции	

Функция СоздатьДокументыИндексации(ПараметрыИндексации) Экспорт
	ДокументыИндексаторы = Новый Массив();
	
	ПерезаписываемыеРегистраторы = ПараметрыИндексации.Регистраторы;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьИндексациюШтатногоРасписания") Тогда
	
		ИндексаторШР = СоздатьДокументИндексацииШР(ПараметрыИндексации, ПерезаписываемыеРегистраторы["ИндексацияШтатногоРасписания"]);
		ДокументыИндексаторы.Добавить(ИндексаторШР);
		
	КонецЕсли;
	
	ИндексаторЗаработка = СоздатьДокументИндексацииЗаработка(ПараметрыИндексации, ПерезаписываемыеРегистраторы["ИндексацияЗаработка"]);
	ДокументыИндексаторы.Добавить(ИндексаторЗаработка);
	
	ИзменятьОкладыЗванийЧинов = (ПараметрыИндексации.ВидИндексацииГосударственныхСлужащих = Перечисления.ВидыИндексируемогоДенежногоСодержания.ОкладыДенежногоСодержания
	ИЛИ ПараметрыИндексации.ВидИндексацииГосударственныхСлужащих = Перечисления.ВидыИндексируемогоДенежногоСодержания.ОкладыПоЗванию);
	
	Если ИзменятьОкладыЗванийЧинов Тогда
		Если ПараметрыИндексации.ИндексацияВоеннослужащих Тогда 
			ИндексаторЗванияЧина = СоздатьДокументУтверждениеОкладовЗаВоинскиеСпециальныеЗвания(ПараметрыИндексации, ПерезаписываемыеРегистраторы["УтверждениеОкладовЗаВоинскиеСпециальныеЗвания"]);	
		Иначе
			ИндексаторЗванияЧина = СоздатьДокументУтверждениеОкладовНадбавокЗаКлассныеЧины(ПараметрыИндексации, ПерезаписываемыеРегистраторы["УтверждениеОкладовНадбавокЗаКлассныеЧины"]);	
		КонецЕсли;
		
		Если ИндексаторЗванияЧина <> Неопределено Тогда
			ДокументыИндексаторы.Добавить(ИндексаторЗванияЧина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДокументыИндексаторы;
	
КонецФункции

Функция СтруктураПараметровИндексации() Экспорт
	
	ПараметрыСозданияДокументовИндексации = Новый Структура;
	ПараметрыСозданияДокументовИндексации.Вставить("КоэффициентИндексации");
	ПараметрыСозданияДокументовИндексации.Вставить("Дата");
	ПараметрыСозданияДокументовИндексации.Вставить("ДатаИндексации");
	ПараметрыСозданияДокументовИндексации.Вставить("ДатаВступленияВСилу");
	ПараметрыСозданияДокументовИндексации.Вставить("МесяцИндексации");
	ПараметрыСозданияДокументовИндексации.Вставить("Организация");
	ПараметрыСозданияДокументовИндексации.Вставить("ВидИндексацииГосударственныхСлужащих");
	ПараметрыСозданияДокументовИндексации.Вставить("ИндексацияВоеннослужащих");
	ПараметрыСозданияДокументовИндексации.Вставить("Регистраторы");
	
	Возврат ПараметрыСозданияДокументовИндексации;
	
КонецФункции

Функция	СоздатьДокументИндексацииШР(ПараметрыИндексации, Регистратор = Неопределено)
	
	Если Регистратор = Неопределено Тогда
		ДокументИндексации = Документы.ИндексацияШтатногоРасписания.СоздатьДокумент();
	Иначе
		ДокументИндексации = Регистратор.ПолучитьОбъект();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументИндексации,ПараметрыИндексации);
	
	ГосударственнаяСлужба.ЗаполнитьИндексируемыеПоУмолчаниюПоказатели(ДокументИндексации.ИндексируемыеПоказатели, ДокументИндексации.ВидИндексацииГосударственныхСлужащих, ДокументИндексации.ИндексацияВоеннослужащих, Ложь);
	
	ДокументИндексации.ЗаполнитьДокумент();
	ДокументИндексации.Записать(РежимЗаписиДокумента.Запись);	
	
	Возврат ДокументИндексации.Ссылка;
	
КонецФункции

Функция	СоздатьДокументИндексацииЗаработка(ПараметрыИндексации, Регистратор = Неопределено)
	
	Если Регистратор = Неопределено Тогда
		ДокументИндексации = Документы.ИндексацияЗаработка.СоздатьДокумент();
	Иначе
		ДокументИндексации = Регистратор.ПолучитьОбъект();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументИндексации,ПараметрыИндексации);
	
	ГосударственнаяСлужба.ЗаполнитьИндексируемыеПоУмолчаниюПоказатели(ДокументИндексации.Показатели, ДокументИндексации.ВидИндексацииГосударственныхСлужащих, ДокументИндексации.ИндексацияВоеннослужащих);
	
	ДокументИндексации.ЗаполнитьДокумент(ДокументИндексации.МесяцИндексации);
	ДокументИндексации.Записать(РежимЗаписиДокумента.Запись);	
	
	Возврат ДокументИндексации.Ссылка;
	
КонецФункции

Функция СоздатьДокументУтверждениеОкладовЗаВоинскиеСпециальныеЗвания(ПараметрыИндексации, Регистратор = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КоэффициентИндексации",	ПараметрыИндексации.КоэффициентИндексации);
	Запрос.УстановитьПараметр("РегистраторНеЗадан",		Регистратор = Неопределено);
	Запрос.УстановитьПараметр("Регистратор",			Регистратор);
	Запрос.УстановитьПараметр("ДатаИндексации",			ПараметрыИндексации.ДатаИндексации);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОкладыПоВоинскимСпециальнымЗваниямСрезПоследних.ВоинскоеСпециальноеЗвание КАК ВоинскоеСпециальноеЗвание,
	               |	ОкладыПоВоинскимСпециальнымЗваниямСрезПоследних.Размер * &КоэффициентИндексации КАК Размер
	               |ИЗ
	               |	РегистрСведений.ОкладыПоВоинскимСпециальнымЗваниям.СрезПоследних(
	               |			&ДатаИндексации,
	               |			&РегистраторНеЗадан
	               |				ИЛИ Регистратор <> &Регистратор) КАК ОкладыПоВоинскимСпециальнымЗваниямСрезПоследних";
				   
	НовыеОклады = Запрос.Выполнить().Выгрузить();
	Если НовыеОклады.Количество()> 0 Тогда
		
		Если Регистратор = Неопределено Тогда
			ДокументИндексации = Документы.УтверждениеОкладовЗаВоинскиеСпециальныеЗвания.СоздатьДокумент();
		Иначе
			ДокументИндексации = Регистратор.ПолучитьОбъект();
		КонецЕсли;
		
		
		ЗаполнитьЗначенияСвойств(ДокументИндексации,ПараметрыИндексации);
		
		ДокументИндексации.Оклады.Загрузить(НовыеОклады);
		
		ДокументИндексации.Записать(РежимЗаписиДокумента.Запись);	
		
		Возврат ДокументИндексации.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


Функция СоздатьДокументУтверждениеОкладовНадбавокЗаКлассныеЧины(ПараметрыИндексации, Регистратор = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КоэффициентИндексации",	ПараметрыИндексации.КоэффициентИндексации);
	Запрос.УстановитьПараметр("РегистраторНеЗадан",		Регистратор = Неопределено);
	Запрос.УстановитьПараметр("Регистратор",			Регистратор);
	Запрос.УстановитьПараметр("ДатаИндексации",			ПараметрыИндексации.ДатаИндексации);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОкладыНадбавкиПоКласснымЧинамРангамСрезПоследних.КлассныйЧинРанг КАК КлассныйЧинРанг,
	               |	ОкладыНадбавкиПоКласснымЧинамРангамСрезПоследних.Размер * &КоэффициентИндексации КАК Размер
	               |ИЗ
	               |	РегистрСведений.ОкладыНадбавкиПоКласснымЧинамРангам.СрезПоследних(
	               |			&ДатаИндексации,
	               |			&РегистраторНеЗадан
	               |				ИЛИ Регистратор <> &Регистратор) КАК ОкладыНадбавкиПоКласснымЧинамРангамСрезПоследних";
				   
	НовыеОклады = Запрос.Выполнить().Выгрузить();
	Если НовыеОклады.Количество()> 0 Тогда
		
		Если Регистратор = Неопределено Тогда
			ДокументИндексации = Документы.УтверждениеОкладовНадбавокЗаКлассныеЧины.СоздатьДокумент();
		Иначе
			ДокументИндексации = Регистратор.ПолучитьОбъект();
		КонецЕсли;
		
		
		ЗаполнитьЗначенияСвойств(ДокументИндексации,ПараметрыИндексации);
		
		ДокументИндексации.ОкладыНадбавки.Загрузить(НовыеОклады);
		
		ДокументИндексации.Записать(РежимЗаписиДокумента.Запись);	
		
		Возврат ДокументИндексации.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли