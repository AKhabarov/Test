#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура СоздатьВТХарактеристикиОбъектовПоМедРегистру(МенеджерВременныхТаблиц, Объекты = Неопределено, ИмяВТ = "ВТХарактеристикиОбъектовПоМедРегистру") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СоздатьВТХарактеристикиОбъектовПоМедРегиструПоУмолчанию(МенеджерВременныхТаблиц, Объекты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиОбъектовПоМедРегистру.Объект КАК Объект,
	|	ХарактеристикиОбъектовПоМедРегистру.Классификатор КАК Классификатор,
	|	ХарактеристикиОбъектовПоМедРегистру.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ #ВТХарактеристикиОбъектовПоМедРегистру
	|ИЗ
	|	РегистрСведений.ХарактеристикиОбъектовПоМедРегистру КАК ХарактеристикиОбъектовПоМедРегистру
	|ГДЕ
	|	&ОтборПоОбъектам
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ХарактеристикиОбъектовПоМедРегистру.Объект,
	|	ХарактеристикиОбъектовПоМедРегистру.Классификатор,
	|	ХарактеристикиОбъектовПоМедРегистру.Характеристика
	|ИЗ
	|	ВТХарактеристикиОбъектовПоМедРегиструПоУмолчанию КАК ХарактеристикиОбъектовПоМедРегистру";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТХарактеристикиОбъектовПоМедРегистру", ИмяВТ);
	Если ЗначениеЗаполнено(Объекты) Тогда
		Запрос.УстановитьПараметр("Объекты", Объекты);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОбъектам", "Объект В (&Объекты)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОбъектам", "Истина");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПустаяТаблицаХарактеристикиОбъектовПоМедРегистру() Экспорт
	
	ХарактеристикиОбъектов = Новый ТаблицаЗначений;
			  
	ХарактеристикиОбъектов.Колонки.Добавить("ТипОбъектаМетаданных");
	ХарактеристикиОбъектов.Колонки.Добавить("Классификатор", Новый ОписаниеТипов("СправочникСсылка.КлассификаторыМедРегистра"));
	ХарактеристикиОбъектов.Колонки.Добавить("НаименованиеКлассификатора", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));
	ХарактеристикиОбъектов.Колонки.Добавить("ПредставлениеХарактеристики", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150)));
	ХарактеристикиОбъектов.Колонки.Добавить("КодКлассификатора", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	ХарактеристикиОбъектов.Колонки.Добавить("ЭлементыСопоставимы", Новый ОписаниеТипов("Булево"));
	
	Возврат ХарактеристикиОбъектов;
	
КонецФункции

// Возвращает таблицу, описывающую характеристики объекта метаданных по классификаторам МедРегистра.
//
Функция ХарактеристикиОбъектаМетаданныхДляРегистра(Знач ТипОбъектаМетаданных, ТолькоСопоставимые = Ложь) Экспорт
	
	ПолнаяТаблицаХарактеристик = ХарактеристикиОбъектовМетаданныхДляМедРегистра(); 
	
	СтруктураОтбора = Новый Структура("ТипОбъектаМетаданных", ТипОбъектаМетаданных);
	
	Если ТолькоСопоставимые Тогда
		СтруктураОтбора.Вставить("ЭлементыСопоставимы", Истина);
	КонецЕсли;
		
	Возврат ПолнаяТаблицаХарактеристик.Скопировать(СтруктураОтбора);
	
КонецФункции
	
// Возвращает таблицу, описывающую характеристики объектов метаданных по классификаторам МедРегистра.
//
Функция ХарактеристикиОбъектовМетаданныхДляМедРегистра() Экспорт 
	
	ХарактеристикиОбъектов = ПустаяТаблицаХарактеристикиОбъектовПоМедРегистру();
	
	СвойстваКлассификаторов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	КлассификаторыМедРегистра.Код КАК КодКлассификатора,
	|	КлассификаторыМедРегистра.Наименование КАК НаименованиеКлассификатора,
	|	КлассификаторыМедРегистра.Ссылка КАК Классификатор,
	|	КлассификаторыМедРегистра.ИмяПредопределенныхДанных КАК Имя
	|ИЗ
	|	Справочник.КлассификаторыМедРегистра КАК КлассификаторыМедРегистра";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураСвойств = Новый Структура("Классификатор, КодКлассификатора, НаименованиеКлассификатора");
		ЗаполнитьЗначенияСвойств(СтруктураСвойств, Выборка);
		
		СвойстваКлассификаторов.Вставить(Выборка.Имя, СтруктураСвойств);
		
	КонецЦикла;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfAbsenceType"));
	НоваяСтрока.ПредставлениеХарактеристики = "Отпуск или командировка";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.СостоянияСотрудника");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfAcademicDegree"));
	НоваяСтрока.ПредставлениеХарактеристики = "Ученая степень";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.УченыеСтепени");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfDocumentType"));
	НоваяСтрока.ПредставлениеХарактеристики = "Вид документа";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ВидыДокументовФизическихЛиц");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfEducationInstitution"));
	НоваяСтрока.ПредставлениеХарактеристики = "Учебное заведение";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.УчебныеЗаведения");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfEducationType"));
	НоваяСтрока.ПредставлениеХарактеристики = "Вид образования";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ВидыОбразованияФизическихЛиц");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfLevel"));
	НоваяСтрока.ПредставлениеХарактеристики = "Уровень ЛПУ";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.Организации");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfMarriage"));
	НоваяСтрока.ПредставлениеХарактеристики = "Семейное положение";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.СостояниеВБраке");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfMilitary"));
	НоваяСтрока.ПредставлениеХарактеристики = "Отношение к воинской обязанности";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.ОтношениеКВоинскойОбязанности");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfNomenclature"));
	НоваяСтрока.ПредставлениеХарактеристики = "Вид медицинской деятельности";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.Организации");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfNomination"));
	НоваяСтрока.ПредставлениеХарактеристики = "Звание или награда";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.Награды");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfPost"));
	НоваяСтрока.ПредставлениеХарактеристики = "Типовая должность";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.Должности");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfPostGraduationEducationType"));
	НоваяСтрока.ПредставлениеХарактеристики = "Вид послевузовского образования";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ВидыОбразованияФизическихЛиц");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeOut"));
	НоваяСтрока.ПредставлениеХарактеристики = "Тип окончания записи";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ОснованияУвольнения");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfCertificateSpeciality"));
	НоваяСтрока.ПредставлениеХарактеристики = "Специальность сертификации";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfSkipPaymentReason"));
	НоваяСтрока.ПредставлениеХарактеристики = "Невыплата";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.СостоянияСотрудника");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfSpeciality"));
	НоваяСтрока.ПредставлениеХарактеристики = "Специальность";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfSubdivision"));
	НоваяСтрока.ПредставлениеХарактеристики = "Типовое подразделение";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ПодразделенияОрганизаций");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfTerritory"));
	НоваяСтрока.ПредставлениеХарактеристики = "Субъект РФ";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.Организации");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfMedicalCare"));
	НоваяСтрока.ПредставлениеХарактеристики = "Вид медицинской помощи";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ПодразделенияОрганизаций");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfMedicalCondition"));
	НоваяСтрока.ПредставлениеХарактеристики = "Условие оказания медицинской помощи";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ПодразделенияОрганизаций");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfPositionType"));
	НоваяСтрока.ПредставлениеХарактеристики = "Вид занятости";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.ВидыЗанятости");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeIn"));
	НоваяСтрока.ПредставлениеХарактеристики = "Тип начала записи";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.ВидыКадровыхСобытий");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeOut"));
	НоваяСтрока.ПредставлениеХарактеристики = "Тип окончания записи";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.ВидыКадровыхСобытий");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRegime"));
	НоваяСтрока.ПредставлениеХарактеристики = "Режим работы";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.ВидыЗанятости");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfPosition"));
	НоваяСтрока.ПредставлениеХарактеристики = "Категория должности";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.Должности");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfTerritory"));
	НоваяСтрока.ПредставлениеХарактеристики = "Субъект РФ целевого набора";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ОбразованиеФизическихЛиц");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeMoveInOrg"));
	НоваяСтрока.ПредставлениеХарактеристики = "Движение кадров внутри организации (начало)";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.СостоянияСотрудника");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
																	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeMoveOutOrg"));
	НоваяСтрока.ПредставлениеХарактеристики = "Движение кадров внутри организации (Окончание)";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.СостоянияСотрудника");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeOutDel"));
	НоваяСтрока.ПредставлениеХарактеристики = "Основание увольнения";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.ОснованияУвольнения");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;

	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfRecordTypeInAdd"));
	НоваяСтрока.ПредставлениеХарактеристики = "Тип начала записи дополнительно";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("ПеречислениеСсылка.ВидыКадровыхСобытий");
	НоваяСтрока.ЭлементыСопоставимы 		= Ложь;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfCountry"));
	НоваяСтрока.ПредставлениеХарактеристики = "Страна (тип начала записи)";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.СтраныМира");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;
	
	НоваяСтрока = ХарактеристикиОбъектов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СвойстваКлассификаторов.Получить("ArrayOfQualificationCategory"));
	НоваяСтрока.ПредставлениеХарактеристики = "Категория";
	НоваяСтрока.ТипОбъектаМетаданных 		= Тип("СправочникСсылка.РазрядыКатегорииДолжностей");
	НоваяСтрока.ЭлементыСопоставимы 		= Истина;	
	
	
	ХарактеристикиОбъектов.Сортировать("НаименованиеКлассификатора Возр");
	
	Возврат ХарактеристикиОбъектов;
	
КонецФункции	

// Сопоставляет элементы классификаторов МедРегистра со значениями/элементами объекта метаданных.
//
Процедура УстановитьХарактеристикиЗначенийОбъектаМетаданных(СвойстваОбъекта, ТаблицаХарактеристик = Неопределено) Экспорт
	
	Если ТаблицаХарактеристик = Неопределено Тогда
		СтрокаТипОбъекта	 = СвойстваОбъекта.ТипОбъекта;
		ТаблицаХарактеристик = ХарактеристикиОбъектаМетаданныхДляРегистра(Тип(СтрокаТипОбъекта), Истина);
	КонецЕсли;
	
	Если ТаблицаХарактеристик.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Для каждого Характеристика Из ТаблицаХарактеристик Цикл
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ 
			|
			|";
			
		КонецЕсли;
			
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторыМедРегистра.ArrayOfYesNo) КАК Классификатор,
		|	СписокОбъектов.Наименование КАК Наименование,
		|	СписокОбъектов.Ссылка КАК Ссылка
		|ИЗ
		|	&ПолноеИмяТаблицы КАК СписокОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХарактеристикиОбъектовПоМедРегистру КАК КлассификацияОбъектов
		|		ПО СписокОбъектов.Ссылка = КлассификацияОбъектов.Объект
		|			И (КлассификацияОбъектов.Классификатор = ЗНАЧЕНИЕ(Справочник.КлассификаторыМедРегистра.ArrayOfYesNo))
		|ГДЕ
		|	ЕСТЬNULL(КлассификацияОбъектов.Характеристика, ЗНАЧЕНИЕ(Справочник.ЭлементыКлассификаторовМедРегистра.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ЭлементыКлассификаторовМедРегистра.ПустаяСсылка)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ArrayOfYesNo", Характеристика.КодКлассификатора);

	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолноеИмяТаблицы", СвойстваОбъекта.ПолноеИмя);
	
	Если Не СвойстваОбъекта.ЭтоСправочник Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокОбъектов.Наименование КАК Наименование,", "");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПустаяСтрока", "");
	
	ТаблицаОбъектов = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаОбъектов.Количество() > 0 Тогда
		
		Если Не СвойстваОбъекта.ЭтоСправочник Тогда
			
			ТаблицаОбъектов.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(150));
			
			ИмяПеречисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СвойстваОбъекта.ПолноеИмя, ".")[1];
			ОбъектМетаданных = ТаблицаОбъектов[0].Ссылка.Метаданные();
			
			Для Каждого ТекущийОбъект Из ТаблицаОбъектов Цикл
				
				ИндексЗначения = Перечисления[ИмяПеречисления].Индекс(ТекущийОбъект.Ссылка);
				ТекущийОбъект.Наименование = ОбъектМетаданных.ЗначенияПеречисления[ИндексЗначения].Синоним;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТаблицаОбъектов", ТаблицаОбъектов);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаОбъектов.Классификатор,
		|	ТаблицаОбъектов.Наименование,
		|	ТаблицаОбъектов.Ссылка
		|ПОМЕСТИТЬ ВТОбъекты
		|ИЗ
		|	&ТаблицаОбъектов КАК ТаблицаОбъектов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Объекты.Ссылка КАК Объект,
		|	Объекты.Классификатор,
		|	МАКСИМУМ(ЭлементыКлассификатора.Ссылка) КАК Характеристика
		|ИЗ
		|	ВТОбъекты КАК Объекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭлементыКлассификаторовМедРегистра КАК ЭлементыКлассификатора
		|		ПО Объекты.Наименование = ЭлементыКлассификатора.Наименование
		|			И Объекты.Классификатор = ЭлементыКлассификатора.Владелец
		|
		|СГРУППИРОВАТЬ ПО
		|	Объекты.Ссылка,
		|	Объекты.Классификатор
		|ИТОГИ ПО
		|	Объект";
		
		ВыборкаОбъектов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОбъектов.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ХарактеристикиОбъектовПоМедРегистру.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(ВыборкаОбъектов.Объект);
			
			Выборка = ВыборкаОбъектов.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Сопоставляет элементы определенных классификаторов МедРегистра со значениями/элементами объектов метаданных.
//
Процедура УстановитьХарактеристикиОбъектовПоКодамКлассификаторов(КодыКлассификаторов) Экспорт
	
	ТаблицаХарактеристик = ПустаяТаблицаХарактеристикиОбъектовПоМедРегистру();
	
	ПолнаяТаблицаХарактеристик = ХарактеристикиОбъектовМетаданныхДляМедРегистра();
	
	Для каждого КодКлассификатора Из КодыКлассификаторов Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПолнаяТаблицаХарактеристик.Скопировать(Новый Структура("КодКлассификатора, ЭлементыСопоставимы", КодКлассификатора, Истина)), ТаблицаХарактеристик); 
	КонецЦикла;	
	
	МассивОбъектовМетаданных = ТаблицаХарактеристик.ВыгрузитьКолонку("ТипОбъектаМетаданных");	
	МассивОбъектовМетаданных = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивОбъектовМетаданных);
	
	Для каждого ОбъектМетаданных Из МассивОбъектовМетаданных Цикл 
		
		СвойстваОбъекта = Медицина.СвойстваОбъектаМетаданных(ОбъектМетаданных);
		ТекущиеХарактеристики = ТаблицаХарактеристик.Скопировать(Новый Структура("ТипОбъектаМетаданных", ОбъектМетаданных));
		
		УстановитьХарактеристикиЗначенийОбъектаМетаданных(СвойстваОбъекта, ТекущиеХарактеристики);
		
	КонецЦикла;
	
КонецПроцедуры
	
// Возвращает таблицу со всеми характеристиками объекта и заполненными значениями.
//
// Параметры:
//   Объект - СправочникСсылка/ПеречислениеСсылка.
// 
// Возвращаемое значение:
//   ТаблицаЗначений - таблица значений с колонками:
//     * Объект - СправочникСсылка/ПеречислениеСсылка
//     * Классификатор - СправочникСсылка.КлассификаторыМедРегистра 
//     * Характеристика - СправочникСсылка.ЭлементыКлассификаторовМедРегистра.
//
Функция ЗаполненныеХарактеристикиОбъектаМетаданных(Объект) Экспорт

	ТаблицаХарактеристик = ХарактеристикиОбъектаМетаданныхДляРегистра(ТипЗнч(Объект));
	
	// Выберем все возможные классификаторы характеризующие данный объект и уже введенные значения.
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	&ЭлементСправочника КАК Объект,
	|	КлассификаторыМедРегистра.Ссылка КАК Классификатор,
	|	ЕСТЬNULL(ХарактеристикиОбъектовПоМедРегистру.Характеристика, ЗНАЧЕНИЕ(Справочник.ЭлементыКлассификаторовМедРегистра.ПустаяСсылка)) КАК Характеристика
	|ИЗ
	|	Справочник.КлассификаторыМедРегистра КАК КлассификаторыМедРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХарактеристикиОбъектовПоМедРегистру КАК ХарактеристикиОбъектовПоМедРегистру
	|		ПО (ХарактеристикиОбъектовПоМедРегистру.Объект = &ЭлементСправочника)
	|			И КлассификаторыМедРегистра.Ссылка = ХарактеристикиОбъектовПоМедРегистру.Классификатор
	|ГДЕ
	|	КлассификаторыМедРегистра.Ссылка В(&Классификаторы)";
				   
	Запрос.УстановитьПараметр("Классификаторы", 	ТаблицаХарактеристик.ВыгрузитьКолонку("Классификатор"));
	Запрос.УстановитьПараметр("ЭлементСправочника", Объект);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Процедура СоздатьВТХарактеристикиОбъектовПоМедРегиструПоУмолчанию(МенеджерВременныхТаблиц, Объекты = Неопределено) 

	КодыЭлементовОбъектов = КодыЭлементовКлассификаторовДляОбъектовПоУмолчанию();
	
	// Отбор характеристик заказанных объектов
	//
	Если ЗначениеЗаполнено(Объекты) Тогда
		УдаляемыеСтроки = Новый Массив;
		Для Каждого КодЭлементаОбъекта Из КодыЭлементовОбъектов Цикл
			Если Объекты.Найти(КодЭлементаОбъекта.Объект) = Неопределено Тогда
				УдаляемыеСтроки.Добавить(КодЭлементаОбъекта);
			КонецЕсли	
		КонецЦикла;
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			КодыЭлементовОбъектов.Удалить(УдаляемаяСтрока)
		КонецЦикла;	
	КонецЕсли;	
	
	// Получение характеристик по кодам
	//
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КодыЭлементовОбъектов", КодыЭлементовОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТКодыЭлементов.Объект,
	|	ВТКодыЭлементов.Классификатор,
	|	ВТКодыЭлементов.КодЭлемента
	|ПОМЕСТИТЬ ВТКодыЭлементов
	|ИЗ
	|	&КодыЭлементовОбъектов КАК ВТКодыЭлементов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КодыЭлементов.Объект КАК Объект,
	|	КодыЭлементов.Классификатор КАК Классификатор,
	|	ЭлементыКлассификаторовМедРегистра.Ссылка КАК Характеристика
	|ПОМЕСТИТЬ ВТХарактеристикиОбъектовПоМедРегиструПоУмолчанию
	|ИЗ
	|	ВТКодыЭлементов КАК КодыЭлементов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭлементыКлассификаторовМедРегистра КАК ЭлементыКлассификаторовМедРегистра
	|		ПО КодыЭлементов.Классификатор = ЭлементыКлассификаторовМедРегистра.Владелец
	|			И КодыЭлементов.КодЭлемента = ЭлементыКлассификаторовМедРегистра.Код";
				   
	Запрос.Выполнить();
	
КонецПроцедуры

Функция КодыЭлементовКлассификаторовДляОбъектовПоУмолчанию() 

	МетаданныеРегистра = Метаданные.РегистрыСведений.ХарактеристикиОбъектовПоМедРегистру;
	КодыЭлементовКлассификаторов = Новый ТаблицаЗначений;
	КодыЭлементовКлассификаторов.Колонки.Добавить("Объект",			МетаданныеРегистра.Измерения.Объект.Тип);
	КодыЭлементовКлассификаторов.Колонки.Добавить("Классификатор",	МетаданныеРегистра.Измерения.Классификатор.Тип);
	КодыЭлементовКлассификаторов.Колонки.Добавить("КодЭлемента",		Метаданные.Справочники.ЭлементыКлассификаторовМедРегистра.СтандартныеРеквизиты.Код.Тип);

	// Перечисления:
	
	// ВидыЗанятости
	//
	Классификатор = Справочники.КлассификаторыМедРегистра.ArrayOfPositionType;
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "1";

	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыЗанятости.ВнутреннееСовместительство;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "3";

	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыЗанятости.Совместительство;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "4";

	Классификатор = Справочники.КлассификаторыМедРегистра.ArrayOfRegime;
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "1";

	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыЗанятости.ВнутреннееСовместительство;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "1";

	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыЗанятости.Совместительство;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "1";

	// ВидыКадровыхСобытий
	//
	Классификатор = Справочники.КлассификаторыМедРегистра.ArrayOfRecordTypeIn;
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыКадровыхСобытий.Прием;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "9";

	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыКадровыхСобытий.Перемещение;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "8";
	
	Классификатор = Справочники.КлассификаторыМедРегистра.ArrayOfRecordTypeOut;
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыКадровыхСобытий.Перемещение;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "12";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ВидыКадровыхСобытий.Увольнение;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "3";
	
	// ОтношениеКВоинскойОбязанности
	//
	Классификатор = Справочники.КлассификаторыМедРегистра.ArrayOfMilitary;
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ОтношениеКВоинскойОбязанности.НеВоеннообязанный;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "3";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ОтношениеКВоинскойОбязанности.Призывник;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "4";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Перечисления.ОтношениеКВоинскойОбязанности.Военнообязанный;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "1";
	
	// Справочники:
	
	// СостояниеВБраке
	//
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СостояниеВБраке.Ссылка КАК Объект,
	               |	СостояниеВБраке.Код КАК КодЭлемента,
	               |	ЗНАЧЕНИЕ(Справочник.КлассификаторыМедРегистра.ArrayOfMarriage) КАК Классификатор
	               |ИЗ
	               |	Справочник.СостояниеВБраке КАК СостояниеВБраке
	               |ГДЕ
	               |	СостояниеВБраке.Код В (""1"", ""2"", ""3"", ""4"", ""5"", ""6"")";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(КодыЭлементовКлассификаторов.Добавить(), Выборка);
	КонецЦикла;
	
	// ВидыДокументовФизическихЛиц
	//
	Классификатор = Справочники.КлассификаторыМедРегистра.ArrayOfDocumentType;
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ЗагранпаспортРФ;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "15";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ВоенныйБилетОфицераЗапаса;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "18";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ВоенныйБилет;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "7";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ДипломатическийПаспорт;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "8";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ПаспортСССР;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "1";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.УдостоверениеОфицера;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "4";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ЗагранпаспортСССР;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "2";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ПаспортМоряка;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "17";

	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "14";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.ПаспортМинморфлота;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "6";
	
	НоваяСтрока = КодыЭлементовКлассификаторов.Добавить();
	НоваяСтрока.Объект = Справочники.ВидыДокументовФизическихЛиц.СвидетельствоОРождении;
	НоваяСтрока.Классификатор = Классификатор;
	НоваяСтрока.КодЭлемента = "3";
	
	Возврат КодыЭлементовКлассификаторов;
	
КонецФункции

Процедура ОбновитьПодключаемыеХарактеристики(ИспользоватьПодключаемыеХарактеристики = Истина, ТаблицаХарактеристик = Неопределено, Объекты = Неопределено, ПараметрыОтложенногоОбновления = Неопределено) Экспорт
	
	ИмяПланаВидовХарактеристик = Справочники.Должности.ИмяПланаВидовПодключаемыхХарактеристикЗарплатаКадры();
	
	Если ИспользоватьПодключаемыеХарактеристики = Истина И ТаблицаХарактеристик = Неопределено Тогда
		
		ХарактеристикиДолжности = ХарактеристикиОбъектаМетаданныхДляРегистра(Тип("СправочникСсылка.Должности"));
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ХарактеристикиОбъектов", ХарактеристикиДолжности);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПредставленияХарактеристик.Классификатор,
		|	ПредставленияХарактеристик.ПредставлениеХарактеристики
		|ПОМЕСТИТЬ ВТПредставленияХарактеристик
		|ИЗ
		|	&ХарактеристикиОбъектов КАК ПредставленияХарактеристик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХарактеристикиОбъектовПоМедРегистру.Объект,
		|	ВТПредставленияХарактеристик.ПредставлениеХарактеристики КАК Свойство,
		|	ХарактеристикиОбъектовПоМедРегистру.Характеристика КАК Значение
		|ИЗ
		|	РегистрСведений.ХарактеристикиОбъектовПоМедРегистру КАК ХарактеристикиОбъектовПоМедРегистру
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредставленияХарактеристик КАК ВТПредставленияХарактеристик
		|		ПО ХарактеристикиОбъектовПоМедРегистру.Классификатор = ВТПредставленияХарактеристик.Классификатор
		|ГДЕ
		|	ХарактеристикиОбъектовПоМедРегистру.Объект ССЫЛКА Справочник.Должности";

		ТаблицаХарактеристик = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	ПодключаемыеХарактеристикиЗарплатаКадры.ОбновитьНаборыПодключаемыхХарактеристикОпределяемымиЗначениями("ФРМР", ИмяПланаВидовХарактеристик, ИспользоватьПодключаемыеХарактеристики, ТаблицаХарактеристик, Объекты, ПараметрыОтложенногоОбновления);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли	