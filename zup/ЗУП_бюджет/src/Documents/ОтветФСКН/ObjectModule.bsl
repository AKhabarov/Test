#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И ЭтотОбъект.Метаданные().Реквизиты.ДокументОснование.Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ЗаполнитьПоОснованию(ДанныеЗаполнения);
	КонецЕсли
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СотрудникиДокумента=Сотрудники.ВыгрузитьКолонку("Сотрудник");
	ПроверитьСотрудников(Отказ);
	
	Если НЕ Отказ Тогда
		
		Для Каждого СтрокаСотрудника Из Сотрудники Цикл
			
			Движение = Движения.СостоянияЗапросовВФСКН.Добавить();
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Сотрудник = СтрокаСотрудника.Сотрудник;
			Движение.Состояние = СтрокаСотрудника.Состояние;
			
		КонецЦикла;
		
		Движения.СостоянияЗапросовВФСКН.Записывать = Истина;
			
	КонецЕсли;	
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаОтвета, "Объект.ДатаОтвета", Отказ, НСтр("ru='Дата ответа'"), , , Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "Сотрудник"));
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотрудникам(ЭтотОбъект, Организация, МассивПараметров, ДатаОтвета);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоОснованию(Основание)
	
	ДокументОснование	= Основание;
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Организация");	
	
	ПолучитьСообщенияПользователю(Истина);
	
	Если МожноЗаполнитьПоЗапросуВФСКН() Тогда
		ЗаполнитьПоЗапросуВФСКН();
	КонецЕсли;	
	
	Сообщения = ПолучитьСообщенияПользователю(Истина); 
	Если Сообщения.Количество() > 0 Тогда 
		СообщениеОбОшибке = "";
		Для Каждого Сообщение Из Сообщения Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + Сообщение.Текст + Символы.ПС
		КонецЦикла;	
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;	
	
КонецПроцедуры

Функция МожноЗаполнитьПоЗапросуВФСКН() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Ложь
	КонецЕсли;	
	
	МожноЗаполнитьПоЗапросуВФСКН = Истина;
	
	ДанныеЗапросаВФСКН = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Проведен, Организация");
	
	Если ДанныеЗапросаВФСКН.Организация <> Организация Тогда
		МожноЗаполнитьПоЗапросуВФСКН = Ложь;
		СообщениеОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 относится к другой организации (%2)'"), 
			ДокументОснование, 
			ДанныеЗапросаВФСКН.Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование");
	КонецЕсли;	
	
	Если НЕ ДанныеЗапросаВФСКН.Проведен Тогда
		МожноЗаполнитьПоЗапросуВФСКН = Ложь;
		СообщениеОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Запрос в ФСКН не проведен'"), 
			ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование");
	КонецЕсли;	
	
	Возврат МожноЗаполнитьПоЗапросуВФСКН
	
КонецФункции

Процедура ЗаполнитьПоЗапросуВФСКН() Экспорт
	
	// Очищаем текущие строки документа.
	Сотрудники.Очистить();
	
	ДатаЗначения = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());

	// Получаем сотрудников запроса в ФСКН, по которым нет ответа.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияЗапросовВФСКН.Сотрудник
	|ИЗ
	|	РегистрСведений.СостоянияЗапросовВФСКН КАК СостоянияЗапросовВФСКН
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗапросовВФСКН.СрезПоследних(&Дата, Регистратор <> &Регистратор) КАК СостоянияЗапросовВФСКНСрезПоследних
	|		ПО СостоянияЗапросовВФСКН.Сотрудник = СостоянияЗапросовВФСКНСрезПоследних.Сотрудник
	|ГДЕ
	|	СостоянияЗапросовВФСКН.Регистратор = &ДокументОснование
	|	И СостоянияЗапросовВФСКНСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Рассматривается)";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ДатаЗначения);

	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СообщениеОбОшибке = НСтр("ru='По всем сотрудникам запроса в ФСКН уже введены ответы'"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование");
		Возврат
	КонецЕсли;
	
	ОрганФСКН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ОрганФСКН");	
	
	// Заполняем по сотрудникам без ответов.
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = Сотрудники.Добавить();
		СтрокаТЧ.Сотрудник = Выборка.Сотрудник;
		СтрокаТЧ.Состояние = Перечисления.СостоянияСогласования.Согласовано;
	КонецЦикла
	
КонецПроцедуры	

Процедура ПроверитьСотрудников(Отказ) 
	
	Ошибки = Неопределено;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтветФСКН.Сотрудник.Представление КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА СотрудникиДокументаОснования.Сотрудник ЕСТЬ NULL 
		|			ТОГДА 1
		|		КОГДА СостоянияЗапросовВФСКНСрезПоследних.Состояние <> ЗНАЧЕНИЕ(перечисление.СостоянияСогласования.Рассматривается)
		|			ТОГДА 2
		|		КОГДА СостоянияЗапросовВФСКНСрезПоследних.Период = НАЧАЛОПЕРИОДА(&Дата,ДЕНЬ)
		|			ТОГДА 3
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексОшибки,
		|	ОтветФСКН.НомерСтроки
		|ПОМЕСТИТЬ ВТСотрудникиСИндексомОшибки
		|ИЗ
		|	Документ.ОтветФСКН.Сотрудники КАК ОтветФСКН
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗапросовВФСКН.СрезПоследних(, Регистратор = &ДокументОснование) КАК СотрудникиДокументаОснования
		|		ПО ОтветФСКН.Сотрудник = СотрудникиДокументаОснования.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗапросовВФСКН.СрезПоследних(&Дата, Регистратор <> &Ссылка) КАК СостоянияЗапросовВФСКНСрезПоследних
		|		ПО ОтветФСКН.Сотрудник = СостоянияЗапросовВФСКНСрезПоследних.Сотрудник
		|ГДЕ
		|	ОтветФСКН.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиСИндексомОшибки.Сотрудник,
		|	СотрудникиСИндексомОшибки.ИндексОшибки,
		|	СотрудникиСИндексомОшибки.НомерСтроки
		|ИЗ
		|	ВТСотрудникиСИндексомОшибки КАК СотрудникиСИндексомОшибки
		|ГДЕ
		|	СотрудникиСИндексомОшибки.ИндексОшибки <> 0"; 

		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Дата", Дата);

		РезультатЗапроса=Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда 
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.ИндексОшибки = 1 Тогда
					
					СообщениеОбОшибке = 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='В запросе в ФСКН нет сотрудника %1'"), 
						Выборка.Сотрудник);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование", , Отказ);
					
				ИначеЕсли Выборка.ИндексОшибки = 2 Тогда
					
					СообщениеОбОшибке = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='На сотрудника %1 уже введен ответ ФСКН другим документом'"), 
						Выборка.Сотрудник);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Объект.Сотрудники[%1].%2", Выборка.НомерСтроки-1, "Сотрудник"), , Отказ);
 																						 			
				ИначеЕсли Выборка.ИндексОшибки = 3 Тогда
					
					СообщениеОбОшибке = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='По сотруднику %1 уже есть запись на %2'"), 
						Выборка.Сотрудник, Формат(Дата,"ДФ=dd.MM.yyyy"));
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Объект.Сотрудники[%1].%2", Выборка.НомерСтроки-1, "Сотрудник"), , Отказ);
 																						 			
				КонецЕсли;
							
			КонецЦикла;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


