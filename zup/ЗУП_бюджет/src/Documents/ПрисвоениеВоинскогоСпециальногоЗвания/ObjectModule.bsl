#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗарплатаКадрыРасширенный.ОбработкаЗаполненияМногофункциональногоДокумента(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Проведение документа
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ЗарплатаКадрыРасширенный.ИнициализироватьОтложеннуюРегистрациюВторичныхДанныхПоДвижениямДокумента(Движения);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, Ссылка);
	
	Для Каждого НаборЗаписей Из Движения Цикл
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
	КонецЦикла;
	
	ВоинскиеСпециальныеЗвания.СформироватьДвиженияВоинскихСпециальныхЗванийФизическихЛиц(Движения, ДанныеДляПроведения.ВоинскиеСпециальныеЗванияФизическихЛиц);
	
	Если НачисленияУтверждены Тогда
		
		СтруктураПлановыхНачислений = Новый Структура;
		СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
		СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателейНачислений);
		
		РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений);
		
	КонецЕсли;
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаПрисвоения, "Объект.ДатаПрисвоения", Отказ, НСтр("ru='Дата присвоения'"), , , Ложь);
	
	ЗарплатаКадрыРасширенный.ПроверитьУтверждениеДокумента(ЭтотОбъект, Отказ);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетовПриОтменеПроведения(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ПередЗаписьюМногофункциональногоДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотруднику(ЭтотОбъект, Организация, Сотрудник, ДатаПрисвоения);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если НачисленияУтверждены Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Начисления.Ссылка.ДатаПрисвоения КАК ДатаСобытия,
			|	Начисления.Ссылка.Сотрудник КАК Сотрудник,
			|	Начисления.Начисление КАК Начисление,
			|	Начисления.Ссылка.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Начисления.Ссылка.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	Начисления.ДокументОснование КАК ДокументОснование,
			|	ИСТИНА КАК Используется,
			|	Начисления.Размер КАК Размер
			|ИЗ
			|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания.Начисления КАК Начисления
			|ГДЕ
			|	Начисления.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПрисвоениеВоинскогоСпециальногоЗванияНачисления.ДокументОснование,
			|	НачисленияПоказатели.Показатель
			|ПОМЕСТИТЬ ВТПоказателиНачисленийДокумента
			|ИЗ
			|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания.Начисления КАК ПрисвоениеВоинскогоСпециальногоЗванияНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления.Показатели КАК НачисленияПоказатели
			|		ПО ПрисвоениеВоинскогоСпециальногоЗванияНачисления.Начисление = НачисленияПоказатели.Ссылка
			|			И (ПрисвоениеВоинскогоСпециальногоЗванияНачисления.Ссылка = &Ссылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПрисвоениеВоинскогоСпециальногоЗвания.ДатаПрисвоения КАК ДатаСобытия,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.Организация КАК Организация,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.Сотрудник КАК Сотрудник,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.Показатель КАК Показатель,
			|	ПоказателиНачисленийДокумента.ДокументОснование КАК ДокументОснование,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.ЗначениеПоказателя КАК Значение
			|ИЗ
			|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания КАК ПрисвоениеВоинскогоСпециальногоЗвания
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНачисленийДокумента КАК ПоказателиНачисленийДокумента
			|		ПО ПрисвоениеВоинскогоСпециальногоЗвания.Показатель = ПоказателиНачисленийДокумента.Показатель
			|			И (ПрисвоениеВоинскогоСпециальногоЗвания.Ссылка = &Ссылка)
			|			И (ПрисвоениеВоинскогоСпециальногоЗвания.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка))
			|ГДЕ
			|	ПрисвоениеВоинскогоСпециальногоЗвания.Ссылка = &Ссылка
			|	И ПрисвоениеВоинскогоСпециальногоЗвания.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПрисвоениеВоинскогоСпециальногоЗвания.ДатаПрисвоения КАК ДатаСобытия,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.Сотрудник КАК Сотрудник,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ПрисвоениеВоинскогоСпециальногоЗвания.СовокупнаяТарифнаяСтавка КАК Значение,
			|	ВЫБОР
			|		КОГДА ПрисвоениеВоинскогоСпециальногоЗвания.СовокупнаяТарифнаяСтавка = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.ПустаяСсылка)
			|		ИНАЧЕ ПрисвоениеВоинскогоСпециальногоЗвания.ВидТарифнойСтавки
			|	КОНЕЦ КАК ВидТарифнойСтавки,
			|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
			|ИЗ
			|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания КАК ПрисвоениеВоинскогоСпециальногоЗвания
			|ГДЕ
			|	ПрисвоениеВоинскогоСпециальногоЗвания.Ссылка = &Ссылка";
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ПлановыеНачисления = РезультатыЗапроса[0].Выгрузить();
		ДанныеДляПроведения.Вставить("ПлановыеНачисления", ПлановыеНачисления);
		
		ЗначенияПоказателей = РезультатыЗапроса[2].Выгрузить();
		ДанныеДляПроведения.Вставить("ЗначенияПоказателейНачислений", ЗначенияПоказателей);
		
		ДанныеСовокупныхТарифныхСтавок = РезультатыЗапроса[3].Выгрузить();
		ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", ДанныеСовокупныхТарифныхСтавок);
		
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПрисвоениеВоинскогоСпециальногоЗвания.ДатаПрисвоения КАК ДатаПрисвоения,
		|	ПрисвоениеВоинскогоСпециальногоЗвания.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПрисвоениеВоинскогоСпециальногоЗвания.ВоинскоеСпециальноеЗвание КАК ВоинскоеСпециальноеЗвание,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания КАК ПрисвоениеВоинскогоСпециальногоЗвания
		|ГДЕ
		|	ПрисвоениеВоинскогоСпециальногоЗвания.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрисвоениеВоинскогоСпециальногоЗвания.ДатаПрисвоения КАК ДатаСобытия,
		|	ПрисвоениеВоинскогоСпециальногоЗвания.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания КАК ПрисвоениеВоинскогоСпециальногоЗвания
		|ГДЕ
		|	ПрисвоениеВоинскогоСпециальногоЗвания.Ссылка = &Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВоинскиеСпециальныеЗванияФизическихЛиц = РезультатыЗапроса[0].Выгрузить();
	ДанныеДляПроведения.Вставить("ВоинскиеСпециальныеЗванияФизическихЛиц", ВоинскиеСпециальныеЗванияФизическихЛиц);
	
	СотрудникиДаты = РезультатыЗапроса[1].Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура СоздатьВТДанныеДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Организация,
		|	ТаблицаДокумента.Сотрудник,
		|	ТаблицаДокумента.ДатаПрисвоения КАК ПериодДействия,
		|	ТаблицаДокумента.Ссылка КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ПрисвоениеВоинскогоСпециальногоЗвания КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор";
		
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли