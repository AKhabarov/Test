
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц", 
			"Объект.Организация", "Объект.Ответственный", "Объект.Месяц");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Объект.Действие) Тогда
			Объект.Действие = ПредопределенноеЗначение("Перечисление.ДействияСоСпискомПолучателейГрантов.Утвердить");
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_СписокПолучателейГранта", ПараметрыЗаписи, Объект.Ссылка);
	
	ЗаполнитьВторичныеДанныеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда
		
		Сообщения = ПолучитьСообщенияПользователю(Ложь);
		
		Для каждого Сообщение Из Сообщения Цикл
			
			Если СтрНайти(Сообщение.Поле, "Месяц") Тогда
				Сообщение.Поле = "";
				Сообщение.ПутьКДанным = "МесяцНачалаСтрокой";
			КонецЕсли;
			
		КонецЦикла;
		
		Отказ = Истина;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Объект");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ЗаполнитьПолучателейГранта();
	
КонецПроцедуры

&НаКлиенте
Процедура ГрантПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ЗаполнитьПолучателейГранта();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	УстановитьСтраницуДействия(ЭтотОбъект);
	ЗаполнитьПолучателейГранта();
	
КонецПроцедуры

#Область МесяцНачала

&НаКлиенте
Процедура МесяцНачалаПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область МесяцИзменения

&НаКлиенте
Процедура МесяцИзмененияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой", Модифицированность);
	
	ПриИзмененииМесяцаИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой");
	
	ПриИзмененииМесяцаИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой", Направление, Модифицированность);
	
	ПриИзмененииМесяцаИзменения();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцИзмененияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыПолучатели

&НаКлиенте
Процедура ПолучателиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаПодбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПослеУдаления(Элемент)
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыУточненныеПолучатели

&НаКлиенте
Процедура УточненныеПолучателиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПриАктивизацииСтрокиПолучателей(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УточненныеПолучателиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Если ТекущиеДанные.ДействующийПолучатель Тогда
		
		Если ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Исключить") Тогда
			ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.ПустаяСсылка");
		Иначе
			ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Исключить");
		КонецЕсли;
		
		УстановитьКомментарийДействияСПолучателем(ТекущиеДанные);
		УстановитьТекущуюСтраницуКоманднойПанели(ТекущиеДанные);
		
	Иначе
		Объект.Получатели.Удалить(Объект.Получатели.Индекс(ТекущиеДанные));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура УточненныеПолучателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		ТекущиеДанные.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Утвердить");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточненныеПолучателиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьКомментарийДействияСПолучателем(ТекущиеДанные);
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	Отборы = Новый Структура("ПоказыватьДоговорниковГПХ", Истина);
	
	ПараметрыОткрытия.Вставить("Отбор", Отборы);
	
	КадровыйУчетКлиент.ВыбратьСотрудниковРаботающихВПериодеПоПараметрамОткрытияФормыСписка(
		Элементы.Получатели,
		Объект.Организация,
		,
		Объект.Месяц,
		КонецМесяца(Объект.Месяц),
		Истина,
		АдресСпискаПодобранныхСотрудников(),
		ПараметрыОткрытия);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтотОбъект);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтотОбъект, "Объект.Месяц", "МесяцНачалаСтрокой");
	
	УстановитьСтраницуДействия(ЭтотОбъект);
	
	ЗаполнитьВторичныеДанныеФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуДействия(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.Объект.Действие = ПредопределенноеЗначение("Перечисление.ДействияСоСпискомПолучателейГрантов.Утвердить") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДействиеСтраницы", "ТекущаяСтраница", Элементы.УтвердитьСтраница);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДействиеСтраницы", "ТекущаяСтраница", Элементы.ИзменитьСтраница);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораНаСервере(Сотрудники)
	
	Для каждого Сотрудник Из Сотрудники Цикл
		
		СтрокаТаблицы = Объект.Получатели.Добавить();
		СтрокаТаблицы.Сотрудник = Сотрудник;
		
	КонецЦикла;
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПолучателейГранта()
	
	Если ЗначениеЗаполнено(Объект.Организация) 
		И ЗначениеЗаполнено(Объект.Грант) 
		И ЗначениеЗаполнено(Объект.Месяц) 
		И Объект.Действие = ПредопределенноеЗначение("Перечисление.ДействияСоСпискомПолучателейГрантов.Изменить") Тогда
		
		ЗаполнитьПолучателейГрантаНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейГрантаНаСервере()
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ИзмеренияДаты.Колонки.Добавить("Грант", Новый ОписаниеТипов("СправочникСсылка.Гранты"));
	
	НоваяСтрока = ИзмеренияДаты.Добавить();
	НоваяСтрока.Период = Объект.Месяц;
	НоваяСтрока.Грант = Объект.Грант;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "<>", Объект.Ссылка);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ПолучателиГрантов",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты),
		ПараметрыПостроения);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПолучателиГрантов.Сотрудник
	|ИЗ
	|	ВТПолучателиГрантовСрезПоследних КАК ПолучателиГрантов
	|ГДЕ
	|	ПолучателиГрантов.ЯвляетсяПолучателем");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Получатели.Добавить();
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		НоваяСтрока.ДействующийПолучатель = Истина;
		
	КонецЦикла;
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаИзменения()
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	ЗаполнитьПолучателейГранта();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКомментарийДействияСПолучателем(СтрокаПолучателя)
	
	Если СтрокаПолучателя.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Исключить") Тогда
		СтрокаПолучателя.Комментарий = НСтр("ru = 'Получатель исключен'");
	ИначеЕсли СтрокаПолучателя.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Утвердить") Тогда
		СтрокаПолучателя.Комментарий = НСтр("ru = 'Новый получатель'");
	Иначе
		СтрокаПолучателя.Комментарий = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьВторичныеДанныеФормы(Форма)
	
	Если Форма.Объект.Действие = ПредопределенноеЗначение("Перечисление.ДействияСоСпискомПолучателейГрантов.Утвердить") Тогда
		Возврат
	КонецЕсли;
		
	Для каждого СтрокаПолучателя Из Форма.Объект.Получатели Цикл
		
		Если СтрокаПолучателя.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Исключить") 
			Или СтрокаПолучателя.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.ПустаяСсылка") Тогда
			
			СтрокаПолучателя.ДействующийПолучатель = Истина;
			
		КонецЕсли;
			
		УстановитьКомментарийДействияСПолучателем(СтрокаПолучателя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииСтрокиПолучателей(СтрокаПолучателя)
	
	Если СтрокаПолучателя.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Утвердить") 
		ИЛИ Не СтрокаПолучателя.ДействующийПолучатель Тогда
		Элементы.УточненныеПолучателиСотрудник.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.УточненныеПолучателиСотрудник.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УстановитьТекущуюСтраницуКоманднойПанели(СтрокаПолучателя);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтраницуКоманднойПанели(СтрокаПолучателя)
	
	Если СтрокаПолучателя.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПолучателямиГрантов.Исключить") Тогда
		ТекущаяСтраница = Элементы.СтраницаУтвердитьОставить;
	Иначе
		
		Если СтрокаПолучателя.ДействующийПолучатель Тогда
			ТекущаяСтраница = Элементы.СтраницаУтвердитьИсключить;
		Иначе
			ТекущаяСтраница = Элементы.СтраницаУтвердитьУдалить;
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.СтраницыКоманднойПанели.ТекущаяСтраница = ТекущаяСтраница;
	
КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхСотрудников()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Получатели.Выгрузить(,"Сотрудник").ВыгрузитьКолонку("Сотрудник"), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НовыеСтроки);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Получатели.Действие");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ДействияСПолучателямиГрантов.Утвердить;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УточненныеПолучателиСотрудник.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УточненныеПолучателиКомментарий.Имя);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.УдаленныеСтроки);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Получатели.Действие");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ДействияСПолучателямиГрантов.Исключить;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УточненныеПолучателиСотрудник.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УточненныеПолучателиКомментарий.Имя);
	
КонецПроцедуры

#Область КлючевыеРеквизитыЗаполненияФормы

&НаСервере
// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("Объект.Получатели");
	Массив.Добавить("Объект.ФизическиеЛица");
	
	Возврат Массив;
	
КонецФункции

&НаСервере
// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",			Нстр("ru = 'организации'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Грант",					Нстр("ru = 'гранта'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Действие",				Нстр("ru = 'действия'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "МесяцИзменения",		Нстр("ru = 'месяца изменения'")));
	
	Возврат Массив;
	
КонецФункции

#КонецОбласти

#КонецОбласти