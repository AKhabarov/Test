#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СотрудникиДокумента = Сотрудники.ВыгрузитьКолонку("Сотрудник");
	ПроверитьСотрудников(Отказ);
	
	Если НЕ Отказ Тогда

	Для Каждого Строка Из Сотрудники Цикл
		
		Движение = Движения.ДопускиСотрудников.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ВидДопуска = Справочники.ВидыДопусков.ДопускКНаркотическимВеществам;
		Движение.СтатусДопуска = Перечисления.СтатусыДопусков.Действителен;
		
	КонецЦикла;
	
	Движения.ДопускиСотрудников.Записывать = Истина;
	
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И ЭтотОбъект.Метаданные().Реквизиты.ДокументОснование.Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ЗаполнитьПоОснованию(ДанныеЗаполнения);
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров для ограничения регистрации объекта при обмене
// Вызывается ПередЗаписью объекта.
//
// Возвращаемое значение:
//	ОграниченияРегистрации - Структура - Описание см. ОбменДаннымиЗарплатаКадры.ОграниченияРегистрации.
//
Функция ОграниченияРегистрации() Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("Сотрудники", "Сотрудник"));
	
	Возврат ОбменДаннымиЗарплатаКадры.ОграниченияРегистрацииПоОрганизацииИСотрудникам(ЭтотОбъект, Организация, МассивПараметров, Дата);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоОснованию(Основание)
	
	ДокументОснование = Основание;
	Организация	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Организация");
	
	ПолучитьСообщенияПользователю(Истина);
	
	Если МожноЗаполнитьПоОтветуФСКН() Тогда
		ЗаполнитьПоОтветуФСКН();
	КонецЕсли;	
	
	Сообщения = ПолучитьСообщенияПользователю(Истина); 
	Если Сообщения.Количество() > 0 Тогда 
		СообщениеОбОшибке = "";
		Для Каждого Сообщение Из Сообщения Цикл
			СообщениеОбОшибке = СообщениеОбОшибке + Сообщение.Текст + Символы.ПС
		КонецЦикла;	
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;	
	
КонецПроцедуры

Функция МожноЗаполнитьПоОтветуФСКН() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Ложь
	КонецЕсли;	
	
	МожноЗаполнитьПоОтветуФСКН = Истина;
	
	ДанныеОтветаФСКН = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Проведен, Организация");
	
	Если ДанныеОтветаФСКН.Организация <> Организация Тогда
		МожноЗаполнитьПоОтветуФСКН = Ложь;
		СообщениеОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 относится к другой организации (%2)'"), 
			ДокументОснование, 
			ДанныеОтветаФСКН.Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование");
	КонецЕсли;	
	
	Если НЕ ДанныеОтветаФСКН.Проведен Тогда
		МожноЗаполнитьПоОтветуФСКН = Ложь;
		СообщениеОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Ответ ФСКН не проведен'"), 
			ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование");
	КонецЕсли;	
	
	Возврат МожноЗаполнитьПоОтветуФСКН
	
КонецФункции

Процедура ЗаполнитьПоОтветуФСКН() Экспорт
	
	// Очищаем текущие строки документа.
	Сотрудники.Очистить();
	
	// Получаем сотрудников ответа ФСКН, по которым ответ положительный.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияЗапросовВФСКН.Сотрудник,
	|	СостоянияЗапросовВФСКН.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо 
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	РегистрСведений.СостоянияЗапросовВФСКН КАК СостоянияЗапросовВФСКН
	|ГДЕ
	|	СостоянияЗапросовВФСКН.Регистратор = &ДокументОснование
	|	И СостоянияЗапросовВФСКН.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Согласовано)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Сотрудник
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента";

	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СообщениеОбОшибке = НСтр("ru='В документе нет сотрудника с положительным ответом ФСКН'"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование");
		Возврат
	КонецЕсли;
	
	// Параметры для получения требуемых в документе справок.
	ВидыСправок=Новый Массив;
	ВидыСправок.Добавить(Справочники.ВидыСправок.НаркологическийДиспансер);
	ВидыСправок.Добавить(Справочники.ВидыСправок.ПсихоневрологическийДиспансер);
	ДатаЗначения=?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	// Создание временной таблицы справок физических лиц.
	Справочники.СправкиФизическихЛиц.СоздатьВТСправкиФизическихЛицНаДату(
		Запрос.МенеджерВременныхТаблиц, ВидыСправок , ДатаЗначения);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Сотрудник,
	|	СправкиПсихоневрологическийДиспансера.Ссылка КАК СправкаПсихоневрологическогоДиспансера,
	|	СправкиНаркологическийДиспансер.Ссылка КАК СправкаНаркологическогоДиспансера
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСправкиФизическихЛиц КАК СправкиПсихоневрологическийДиспансера
	|		ПО ДанныеДокумента.Сотрудник.ФизическоеЛицо = СправкиПсихоневрологическийДиспансера.Владелец
	|			И (ЗНАЧЕНИЕ(Справочник.ВидыСправок.ПсихоневрологическийДиспансер) = СправкиПсихоневрологическийДиспансера.ВидСправки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСправкиФизическихЛиц КАК СправкиНаркологическийДиспансер
	|		ПО ДанныеДокумента.Сотрудник.ФизическоеЛицо = СправкиНаркологическийДиспансер.Владелец
	|			И (ЗНАЧЕНИЕ(Справочник.ВидыСправок.НаркологическийДиспансер) = СправкиНаркологическийДиспансер.ВидСправки)";
	
	// Заполняем по сотрудникам 
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// В случае ошибки пользователя, при создании двух одинаковых,по виду справки и по началу ее действия, справок,
		// строки сотрудника могут задваиваться.
		Если Сотрудники.Найти(Выборка.Сотрудник,"Сотрудник") = Неопределено Тогда
			СтрокаТЧ = Сотрудники.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,Выборка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

Процедура ПроверитьСотрудников(Отказ) 
	
	Ошибки = Неопределено;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Допуск.Сотрудник.Представление КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА СотрудникиДокументаОснования.Сотрудник ЕСТЬ NULL 
		|			ТОГДА 1
		|		КОГДА СостоянияЗапросовВФСКНСрезПоследних.Состояние = ЗНАЧЕНИЕ(перечисление.СостоянияСогласования.Отклонено)
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексОшибки,
		|	Допуск.НомерСтроки
		|ПОМЕСТИТЬ ВТСотрудникиСИндексомОшибки
		|ИЗ
		|	Документ.ДопускКНаркотическимВеществам.Сотрудники КАК Допуск
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗапросовВФСКН.СрезПоследних(, Регистратор = &ДокументОснование) КАК СотрудникиДокументаОснования
		|		ПО Допуск.Сотрудник = СотрудникиДокументаОснования.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗапросовВФСКН.СрезПоследних(&Дата, ) КАК СостоянияЗапросовВФСКНСрезПоследних
		|		ПО Допуск.Сотрудник = СостоянияЗапросовВФСКНСрезПоследних.Сотрудник
		|ГДЕ
		|	Допуск.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиСИндексомОшибки.Сотрудник,
		|	СотрудникиСИндексомОшибки.ИндексОшибки,
		|	СотрудникиСИндексомОшибки.НомерСтроки
		|ИЗ
		|	ВТСотрудникиСИндексомОшибки КАК СотрудникиСИндексомОшибки
		|ГДЕ
		|	СотрудникиСИндексомОшибки.ИндексОшибки <> 0"; 

		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Дата", Дата);

		РезультатЗапроса=Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда 
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.ИндексОшибки = 1 Тогда
					
					СообщениеОбОшибке = 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='В ответе ФСКН нет сотрудника %1'"), 
							Выборка.Сотрудник);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, ЭтотОбъект, "ДокументОснование", , Отказ);
					
				ИначеЕсли Выборка.ИндексОшибки = 2 Тогда
					
					СообщениеОбОшибке = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='%1 имеет отрицательный ответ органа ФСКН в документе основания'"), 
						Выборка.Сотрудник);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , 
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Объект.Сотрудники[%1].%2", Выборка.НомерСтроки-1, "Сотрудник"), , Отказ);
 																						 			
				КонецЕсли;
							
			КонецЦикла;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли



