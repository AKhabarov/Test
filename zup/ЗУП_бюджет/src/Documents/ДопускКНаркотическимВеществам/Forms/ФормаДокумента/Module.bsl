#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Создается новый документ.
		ЗначенияДляЗаполнения = Новый Структура();
		ЗначенияДляЗаполнения.Вставить("Организация",				"Объект.Организация");
		ЗначенияДляЗаполнения.Вставить("Ответственный",				"Объект.Ответственный");
		ЗначенияДляЗаполнения.Вставить("Руководитель",				"Объект.Руководитель");
		ЗначенияДляЗаполнения.Вставить("ДолжностьРуководителя",		"Объект.ДолжностьРуководителя");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	ОбменДаннымиЗарплатаКадры.ПриЧтенииНаСервереДокумента(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ДопускКНаркотическимВеществам", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма); 
	ОрганизацияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
    ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);		
	ДокументОснованиеПриИзмененииНаСервере();
	Если Объект.Сотрудники.Количество() > 0 Тогда
		ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры
	  
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СотрудникиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПослеУдаления(Элемент)
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры
  
&НаКлиенте 
Процедура СотрудникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
			
	Для Каждого Сотрудник Из ВыбранноеЗначение Цикл
		Если Объект.Сотрудники.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник)).Количество() = 0 Тогда
			СтрокаТаблицы = Объект.Сотрудники.Добавить();
			СтрокаТаблицы.Сотрудник = Сотрудник;
		КонецЕсли;	
	КонецЦикла;	
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСотрудникАвтоПодбор(Элемент,
	Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СписокВозврата = Новый СписокЗначений; 
	СписокСотрудниковОпределен = ЗначениеЗаполнено(Объект.ДокументОснование);
	
	Если Не ПустаяСтрока(Текст) И СписокСотрудниковОпределен Тогда
		
		МассивВозможныхСотрудников = СписокСотрудников();
		
		Для Каждого ЭлементМассива Из МассивВозможныхСотрудников Цикл
			Если ВРег(Текст) = ВРег(Лев(ЭлементМассива.Наименование, СтрДлина(Текст))) Тогда
				СписокВозврата.Добавить(ЭлементМассива, ЭлементМассива.Наименование);
			КонецЕсли;
		КонецЦикла;
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СписокВозврата;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокСотрудниковОпределен = ЗначениеЗаполнено(Объект.ДокументОснование);
	
	Если СписокСотрудниковОпределен Тогда
		СписокРазрешенныхСотрудников.ЗагрузитьЗначения(СписокСотрудников());	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСправкаПсихоневрологическогоДиспансераСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	СоздатьСправку(Элемент, ПредопределенноеЗначение("Справочник.ВидыСправок.ПсихоневрологическийДиспансер"));
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСправкаНаркологическогоДиспансераСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	СоздатьСправку(Элемент, ПредопределенноеЗначение("Справочник.ВидыСправок.НаркологическийДиспансер"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подбор(Команда)
	
	СтруктураОтбора = Новый Структура;
	СписокСотрудниковОпределен = ЗначениеЗаполнено(Объект.ДокументОснование);
	
	Если СписокСотрудниковОпределен Тогда
		СтруктураОтбора.Вставить("Ссылка", СписокСотрудников());	
	КонецЕсли;
	
	КадровыйУчетКлиент.ВыбратьСотрудниковРаботающихНаДатуПоПараметрамОткрытияФормыСписка(
		Элементы.Сотрудники, 
		Объект.Организация,
		,
		Объект.Дата,
		,
		АдресСпискаПодобранныхСотрудников(),
		СтруктураОтбора);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	УстановитьСвязьПараметровВыбора(ЭтаФорма);	
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	
	ОрганизацияВыбрана	= ЗначениеЗаполнено(Форма.Объект.Организация);
	ДокументОснованиеВыбран	= ЗначениеЗаполнено(Форма.Объект.ДокументОснование);

	Форма.Элементы.ДокументОснование.Доступность	= ОрганизацияВыбрана;
	Форма.Элементы.Сотрудники.Доступность	= ДокументОснованиеВыбран;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвязьПараметровВыбора(Форма);
	
	МассивСвязейПараметровВыбора = Новый Массив();
	МассивСвязейПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.ДатаПримененияОтбора", "Объект.Дата", РежимИзмененияСвязанногоЗначения.НеИзменять));
	МассивСвязейПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.ТекущаяОрганизация", "Объект.Организация", РежимИзмененияСвязанногоЗначения.НеИзменять));
	Если ЗначениеЗаполнено(Форма.Объект.ДокументОснование) Тогда
		МассивСвязейПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Ссылка", "СписокРазрешенныхСотрудников", РежимИзмененияСвязанногоЗначения.НеИзменять));
	КонецЕсли;
	Форма.Элементы.СотрудникиСотрудник.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязейПараметровВыбора);

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	КадровыйУчетФормы.ЗаполнитьОтветственныхЛицПоОрганизации(ЭтаФорма);
	УстановитьСвязьПараметровВыбора(ЭтаФорма);	
	УстановитьДоступностьЭлементов(ЭтаФорма);

КонецПроцедуры  

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	УстановитьСвязьПараметровВыбора(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ТекущийОбъект  = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.МожноЗаполнитьПоОтветуФСКН() Тогда
		ТекущийОбъект.ЗаполнитьПоОтветуФСКН();
		ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект")
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхСотрудников()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Сотрудники.Выгрузить(,"Сотрудник").ВыгрузитьКолонку("Сотрудник"), УникальныйИдентификатор);

КонецФункции

&НаСервере
Функция СписокСотрудников()
	
	СписокСотрудников = Новый Массив;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтветФСКНСотрудники.Сотрудник
		|ИЗ
		|	Документ.ОтветФСКН.Сотрудники КАК ОтветФСКНСотрудники
		|ГДЕ
		|	ОтветФСКНСотрудники.Ссылка = &ДокументОснование
		|	И ОтветФСКНСотрудники.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСогласования.Согласовано)";

	Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выгрузить();
		СписокСотрудников = Выборка.ВыгрузитьКолонку("Сотрудник");
	КонецЕсли;

	Возврат СписокСотрудников;
	
КонецФункции

&НаКлиенте
Процедура СоздатьСправку(Элемент, ВидСправки)
	
	ДанныеТекущейСтроки = Элементы.Сотрудники.ТекущиеДанные;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ВидСправки", ВидСправки);
	ЗначенияЗаполнения.Вставить("Сотрудник", ДанныеТекущейСтроки.Сотрудник);
	ЗначенияЗаполнения.Вставить("ДатаС", Объект.Дата);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);

	ОткрытьФорму("Справочник.СправкиФизическихЛиц.ФормаОбъекта", ПараметрыФормы, Элемент);	
	
КонецПроцедуры

#КонецОбласти

#Область КлючевыеРеквизитыЗаполненияФормы

// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("Объект.Сотрудники");
	Возврат Массив
	
КонецФункции 

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",	Нстр("ru = 'организации'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ДокументОснование",		Нстр("ru = 'ответа ФСКН'")));

	Возврат Массив
	
КонецФункции

#КонецОбласти
