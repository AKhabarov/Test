#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Проводит документ по учетам. Если в параметре ВидыУчетов передано Неопределено, то документ проводится по всем учетам.
// Процедура вызывается из обработки проведения и может вызываться из вне.
// 
// Параметры:
//  ДокументСсылка	- ДокументСсылка.ОтпускПоУходуЗаРебенкомВоеннослужащего - Ссылка на документ
//  РежимПроведения - РежимПроведенияДокумента - Режим проведения документа (оперативный, неоперативный)
//  Отказ 			- Булево - Признак отказа от выполнения проведения
//  ВидыУчетов 		- Строка - Список видов учета, по которым необходимо провести документ. Если параметр пустой или Неопределено, то документ проведется по всем учетам
//  Движения 		- Коллекция движений документа - Передается только при вызове из обработки проведения документа
//  Объект			- ДокументОбъект.ОтпускПоУходуЗаРебенкомВоеннослужащего - Передается только при вызове из обработки проведения документа
//  ДополнительныеПараметры - Структура - Дополнительные параметры, необходимые для проведения документа.
//
Процедура ПровестиПоУчетам(ДокументСсылка, РежимПроведения, Отказ, ВидыУчетов = Неопределено, Движения = Неопределено, Объект = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	СтруктураВидовУчета = ПроведениеРасширенныйСервер.СтруктураВидовУчета();
	ПроведениеРасширенныйСервер.ПодготовитьНаборыЗаписейКРегистрацииДвиженийПоВидамУчета(РежимПроведения, ДокументСсылка, СтруктураВидовУчета, ВидыУчетов, Движения, Объект, Отказ);
	
	Если Объект <> Неопределено И ВидыУчетов = Неопределено Тогда
		ЗарплатаКадрыРасширенный.ИнициализироватьОтложеннуюРегистрациюВторичныхДанныхПоДвижениямДокумента(Движения);
	КонецЕсли;
	
	РеквизитыДляПроведения = РеквизитыДляПроведения(ДокументСсылка);
	ДанныеДляПроведения = ДанныеДляПроведения(ДокументСсылка, СтруктураВидовУчета);

	ПроведениеСервер.ОтключитьПроверкуДатыЗапретаИзменения(Движения, ЗначениеЗаполнено(РеквизитыДляПроведения.ИсправленныйДокумент));
	
	ИсправлениеДокументовЗарплатаКадры.ПриПроведенииИсправления(ДокументСсылка, Движения, РежимПроведения, Отказ, РеквизитыДляПроведения, СтруктураВидовУчета, Объект);
	
	Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда		
		// Регистрация состояния.
		ПараметрыСостояния = СостоянияСотрудников.ПараметрыСостоянияФизическогоЛица();
		ПараметрыСостояния.ДокументСсылка = РеквизитыДляПроведения.Ссылка;
		ПараметрыСостояния.Организация = РеквизитыДляПроведения.Организация;
		ПараметрыСостояния.Начало = РеквизитыДляПроведения.ДатаНачала; 
		ПараметрыСостояния.ОкончаниеПредположительно = РеквизитыДляПроведения.ДатаОкончания; 
		// Подбираем состояние.
		ПараметрыСостояния.Состояние = Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком;
		Если Не РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
			ПараметрыСостояния.Состояние = Перечисления.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком;
		КонецЕсли;
		СостоянияСотрудников.ЗарегистрироватьСостояниеФизическогоЛица(Движения, РеквизитыДляПроведения.ФизическоеЛицо, ПараметрыСостояния);
		
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная") Тогда
			Возврат;
		КонецЕсли;
		
		// Подготовка к регистрации перерасчетов
		ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
		СоздатьВТДанныеДокументов(
			РеквизитыДляПроведения.Ссылка, РеквизитыДляПроведения.ФизическоеЛицо, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляРегистрацииПерерасчетов);
		ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(РеквизитыДляПроведения.Ссылка, ДанныеДляРегистрацииПерерасчетов, РеквизитыДляПроведения.Организация);
		ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, РеквизитыДляПроведения.Ссылка);
	КонецЕсли;
	
		Если РеквизитыДляПроведения.РассчитатьЗарплату Тогда 
			Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда
				РасчетЗарплатыРасширенный.СформироватьДвиженияНачислений(Движения, Отказ, РеквизитыДляПроведения.Организация, КонецМесяца(РеквизитыДляПроведения.ПериодРегистрации), ДанныеДляПроведения.Начисления, ДанныеДляПроведения.ПоказателиНачислений, Истина);
				РасчетЗарплатыРасширенный.СформироватьДвиженияРаспределенияПоТерриториямУсловиямТруда(Движения, Отказ, РеквизитыДляПроведения.Ссылка, РеквизитыДляПроведения.РаспределениеПоТерриториямУсловиямТруда);
				РасчетЗарплатыРасширенный.СформироватьДвиженияУдержаний(
					Движения, Отказ, РеквизитыДляПроведения.Организация, КонецМесяца(РеквизитыДляПроведения.ПериодРегистрации), ДанныеДляПроведения.Удержания, ДанныеДляПроведения.ПоказателиУдержаний);
				ИсполнительныеЛисты.СформироватьУдержанияПоИсполнительнымДокументам(Движения, ДанныеДляПроведения.УдержанияПоИсполнительнымДокументам);
				РасчетЗарплатыРасширенный.СформироватьДвиженияУдержанийДоПределаПоСотрудникам(
					Движения, Отказ, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.УдержанияДоПределаПоСотрудникам);
				РасчетЗарплатыРасширенный.СформироватьЗадолженностьПоУдержаниямФизическихЛиц(Движения, ДанныеДляПроведения.ЗадолженностьПоУдержаниям);
				УчетНачисленнойЗарплаты.ЗарегистрироватьНачисленияУдержания(
					Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.НачисленияПоСотрудникам, ДанныеДляПроведения.УдержанияПоСотрудникам, Неопределено, Неопределено, РеквизитыДляПроведения.ПорядокВыплаты);
				УчетНачисленнойЗарплаты.ЗарегистрироватьОтработанноеВремя(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.ОтработанноеВремяПоСотрудникам, РеквизитыДляПроведения.ПорядокВыплаты, Истина);
				
				
#Область РегистрацияДоходовВУчетеНДФЛ

				// - Регистрация бухучета начислений и удержаний, выполняется до вызова регистрации доходов в учете НДФЛ.
				ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(
							Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации,
							ДанныеДляПроведения.НачисленияПоСотрудникам, ДанныеДляПроведения.УдержанияПоСотрудникам, Неопределено,
							Истина);
							
				// - Регистрация бухучета займов.
				ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(
						Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации,
						Неопределено, ДанныеДляПроведения.УдержанияЗаймов, Неопределено,
						Истина);
						
				// - Регистрация материальной выгоды в учете НДФЛ.
				ДатаОперацииПоНалогам = РеквизитыДляПроведения.ДатаНачала - 1;
				УчетНДФЛ.СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, РеквизитыДляПроведения.Организация, ДатаОперацииПоНалогам, ДанныеДляПроведения.МатериальнаяВыгода, Ложь, , ДокументСсылка);		
				
				// НДФЛ
				УчетНДФЛРасширенный.ЗарегистрироватьДоходыИСуммыНДФЛПоВременнойТаблицеНачислений(
					РеквизитыДляПроведения.Ссылка, Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.Дата, РеквизитыДляПроведения.ПериодРегистрации, РеквизитыДляПроведения.ПорядокВыплаты, РеквизитыДляПроведения.ДатаНачала - 1, ДанныеДляПроведения, Истина);
				// КорректировкиВыплаты
				РасчетЗарплатыРасширенный.СформироватьДвиженияКорректировкиВыплатыПоВременнойТаблицеНачислений(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, РеквизитыДляПроведения.ПорядокВыплаты, ДанныеДляПроведения, Истина);
				// - Регистрация начислений в доходах для страховых взносов.
				УчетСтраховыхВзносов.СформироватьСведенияОДоходахСтраховыеВзносы(
					Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.МенеджерВременныхТаблиц, Ложь, Истина, РеквизитыДляПроведения.Ссылка);
				УчетСтраховыхВзносов.СформироватьИсчисленныеВзносы(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.СтраховыеВзносы);
				УчетСтраховыхВзносов.СформироватьСтраховыеВзносыПоФизическимЛицам(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, РеквизитыДляПроведения.Ссылка, ДанныеДляПроведения.СтраховыеВзносы);
				
#КонецОбласти
						
				// Займы
				// - взаиморасчеты по займам
				ЗаймыСотрудникам.ЗарегистрироватьВзаиморасчетыПоЗаймам(Движения, ДанныеДляПроведения.ВзаиморасчетыПоЗаймам, Отказ);
				// - Регистрация займов в учете заработной платы.
				УчетНачисленнойЗарплатыРасширенный.ЗарегистрироватьПогашениеЗаймов(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.УдержанияЗаймов, РеквизитыДляПроведения.ПорядокВыплаты);
				// - Регистрация материальной выгоды в учете НДФЛ.
				УчетНДФЛ.СформироватьНалогиВычеты(Движения, Отказ, РеквизитыДляПроведения.Организация, ДатаОперацииПоНалогам, ДанныеДляПроведения.НалогНаМатериальнуюВыгоду);
				УчетНачисленнойЗарплаты.ПодготовитьДанныеНДФЛКРегистрации(ДанныеДляПроведения.НалогНаМатериальнуюВыгоду, РеквизитыДляПроведения.Организация, ДатаОперацииПоНалогам);
				УчетНачисленнойЗарплаты.ЗарегистрироватьНДФЛ(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.НалогНаМатериальнуюВыгоду, ДанныеДляПроведения.МенеджерВременныхТаблиц, РеквизитыДляПроведения.ПорядокВыплаты);
				
				// - Регистрация бухучета НДФЛ
				ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(
							Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации,
							Неопределено, Неопределено, ДанныеДляПроведения.НДФЛПоСотрудникам, 
							Истина);
							
				// - Регистрация бухучета займов.
				ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(
						Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации,
						Неопределено, Неопределено, ДанныеДляПроведения.НалогНаМатериальнуюВыгоду,
						Истина);
				
			КонецЕсли;
		КонецЕсли;
		Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда
			УчетПособийСоциальногоСтрахованияРасширенный.СформироватьДвиженияУсловийОплатыОтпускаПоУходуЗаРебенком(Движения, ДанныеДляПроведения.УсловияОплатыОтпускаПоУходуЗаРебенком);
			СтруктураПлановыхНачислений = Новый Структура;
			СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
			СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателей);
			Если ДанныеДляПроведения.ПрименениеДополнительныхПоказателей <> Неопределено Тогда
				СтруктураПлановыхНачислений.Вставить("ПрименениеДополнительныхПоказателей", ДанныеДляПроведения.ПрименениеДополнительныхПоказателей);
			КонецЕсли;
			РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(РеквизитыДляПроведения.Ссылка, Движения, СтруктураПлановыхНачислений);
			РасчетЗарплатыРасширенный.СформироватьДвиженияПорядкаПересчетаТарифныхСтавок(Движения, ДанныеДляПроведения.ПорядокПересчетаТарифнойСтавки);
			Если РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
				РасчетЗарплатыРасширенный.СформироватьДвиженияПримененияПлановыхНачислений(Движения, ДанныеДляПроведения.ПрименениеНачислений);
			КонецЕсли;
		КонецЕсли;
	
	Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда
		// Регистрация перерасчетов
		Если ЕстьПерерасчеты Тогда
			ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДанныеДляРегистрацииПерерасчетов, РеквизитыДляПроведения.Организация);
		КонецЕсли; 
		ПерерасчетЗарплаты.УдалениеПерерасчетовПоДополнительнымПараметрам(РеквизитыДляПроведения.Ссылка, ДополнительныеПараметры);
		КадровыйУчетРасширенный.ЗарегистрироватьВРеестреОтпусков(Движения, ДанныеДляПроведения.ДанныеРеестраОтпусков, Отказ);
	КонецЕсли;
	
	ПроведениеРасширенныйСервер.ЗаписьДвиженийПоУчетам(Движения, СтруктураВидовУчета);
		
КонецПроцедуры

// Сторнирует документ по учетам. Используется подсистемой исправления документов.
//
// Параметры:
//  Движения				 - КоллекцияДвижений, Структура	 - Коллекция движений исправляющего документа в которую будут добавлены сторно стоки.
//  Регистратор				 - ДокументСсылка				 - Документ регистратор исправления (документ исправление).
//  ИсправленныйДокумент	 - ДокументСсылка				 - Исправленный документ движения которого будут сторнированы.
//  СтруктураВидовУчета		 - Структура					 - Виды учета, по которым будет выполнено сторнирование исправленного документа.
//  					Состав полей см. в ПроведениеРасширенныйСервер.СтруктураВидовУчета().
//  ДополнительныеПараметры	 - Структура					 - Структура со свойствами:
//  					* ИсправлениеВТекущемПериоде - Булево - Истина когда исправление выполняется в периоде регистрации исправленного документа.
//						* ОтменаДокумента - Булево - Истина когда исправление вызвано документом СторнированиеНачислений.
//  					* ПериодРегистрации	- Дата - Период регистрации документа регистратора исправления.
// 
// Возвращаемое значение:
//  Булево - "Истина" если сторнирование выполнено этой функцией, "Ложь" если специальной процедуры не предусмотрено.
//
Функция СторнироватьПоУчетам(Движения, Регистратор, ИсправленныйДокумент, СтруктураВидовУчета, ДополнительныеПараметры) Экспорт
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ОтпускПоУходуЗаРебенкомВоеннослужащего;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическоеЛицоВШапке(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДобавитьКомандыСозданияДокументов(КомандыСозданияДокументов, ДополнительныеПараметры) Экспорт
	
	ЗарплатаКадрыРасширенный.ДобавитьВКоллекциюКомандуСозданияДокументаПоМетаданнымДокумента(
		КомандыСозданияДокументов, Метаданные.Документы.ОтпускПоУходуЗаРебенкомВоеннослужащего);
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расчет среднего заработка
	РасчетДенежногоДовольствия.ДобавитьКомандуПечатиРасчетаСреднегоДенежногоДовольствия(КомандыПечати, "Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего");
	
	Для каждого Команда Из КомандыПечати Цикл
	  	Команда.ПроверкаПроведенияПередПечатью = Истина;
	КонецЦикла;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоДенежногоДовольствия") Тогда
		ДанныеДокументов = ДанныеДокументовДляПечатиРасчетаСреднегоДенежногоДовольствия(МассивОбъектов);
		ТабличныйДокумент = Обработки.ПечатьФормВоинскойСлужбы.ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоДенежногоДовольствия", НСтр("ru = 'Расчет среднего денежного довольствия'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

// Заполняет реквизиты ПорядокВыплаты и ПланируемаяДатаВыплаты
Процедура ЗаполнитьПорядокВыплаты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустоеЗначение", Перечисления.ХарактерВыплатыЗарплаты.ПустаяСсылка());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Ссылка КАК Ссылка,
	|	ОтпускПоУходуЗаРебенком.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ОтпускПоУходуЗаРебенком
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.ПорядокВыплаты = &ПустоеЗначение";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ДокументОбъект.ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата;
		ДокументОбъект.ПланируемаяДатаВыплаты = НачалоДня(КонецМесяца(Выборка.ПериодРегистрации));

		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
		
	КонецЦикла
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьРасчетаСреднегоЗаработка

// Заполняет таблицу значений - параметры формирования печатной формы расчета среднего заработка.
//
// Параметры:
//	 МассивСсылок 		- массив, печатаемые документы.
//   ДанныеДокумента 	- таблица значений, определяется в
//                      Обработки.ПечатьРасчетаСреднегоЗаработка.ДанныеДокументовРасчетаСреднегоЗаработка.
//   ИмяМакета          - строка, вариант печати расчета среднего заработка.
//
Функция ДанныеДокументовДляПечатиРасчетаСреднегоДенежногоДовольствия(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Текст =   
	"ВЫБРАТЬ
	|	ОтпускПоУходу.Ссылка,
	|	ОтпускПоУходу.Сотрудник,
	|	ОтпускПоУходу.ДатаНачала КАК ДатаНачалаСобытия,
	|	ИСТИНА КАК ПрименятьПредельнуюВеличину,
	|	ОтпускПоУходу.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ОтпускПоУходу.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ОтпускПоУходу.РайонныйКоэффициентРФнаНачалоСобытия КАК РайонныйКоэффициентРФ
	|ПОМЕСТИТЬ ВТДанныеДокументовДляРасчетаСреднегоДенежногоДовольствия
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ОтпускПоУходу
	|ГДЕ
	|	ОтпускПоУходу.Ссылка В(&МассивСсылок)
	|;	
	|
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.ДатаНачалаСобытия,
	|	ДанныеДокументов.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ДанныеДокументов.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ДанныеДокументов.РайонныйКоэффициентРФ,
	|	ДанныеДокументов.ПрименятьПредельнуюВеличину,
	|	ОтпускПоУходуЗаРебенком.Организация,
	|	ОтпускПоУходуЗаРебенком.Дата КАК ДатаДокумента,
	|	ОтпускПоУходуЗаРебенком.Номер КАК НомерДокумента,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаНачалаОтсутствия,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончания КАК ДатаОкончанияОтсутствия,
	|	Организации.НаименованиеПолное КАК ПолноеНаименованиеОрганизации,
	|	Организации.Наименование КАК НаименованиеОрганизации
	|ИЗ
	|	ВТДанныеДокументовДляРасчетаСреднегоДенежногоДовольствия КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ОтпускПоУходуЗаРебенком
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО ОтпускПоУходуЗаРебенком.Организация = Организации.Ссылка
	|		ПО ДанныеДокументов.Ссылка = ОтпускПоУходуЗаРебенком.Ссылка";	
	
	ДанныеДокументов = Новый Массив;
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ТаблицыДанныхОСреднем = РасчетДенежногоДовольствия.ТаблицыДанныхСреднегоДенежногоДовольствия("ОтпускПоУходуЗаРебенкомВоеннослужащего", МассивСсылок);

		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			КадровыеДанныеСотрудника = КадровыеДанныеОсновногоСотрудника(Выборка.Сотрудник, Выборка.Организация, Выборка.ДатаНачалаСобытия);
			
			ДанныеДокумента = Обработки.ПечатьФормВоинскойСлужбы.ПустаяСтруктураДанныхДляПечатиСреднегоДенежногоДовольствия();
			
			ЗаполнитьЗначенияСвойств(ДанныеДокумента.РеквизитыДокумента, Выборка);
			ЗаполнитьЗначенияСвойств(ДанныеДокумента.КадровыеДанныеСотрудника, КадровыеДанныеСотрудника);
			ДанныеДокумента.РеквизитыДокумента.Сотрудник = КадровыеДанныеСотрудника.Сотрудник;
			
			РеквизитыДокументаДляРасчетаСреднегоДенежногоДовольствия = РасчетДенежногоДовольствия.РеквизитыДокументаДляРасчетаСреднегоДенежногоДовольствия();
			ЗаполнитьЗначенияСвойств(РеквизитыДокументаДляРасчетаСреднегоДенежногоДовольствия, Выборка);
			РеквизитыДокументаДляРасчетаСреднегоДенежногоДовольствия.Сотрудник 		= Выборка.Сотрудник;
			РеквизитыДокументаДляРасчетаСреднегоДенежногоДовольствия.ФизическоеЛицо = КадровыеДанныеСотрудника.ФизическоеЛицо;
			
			ДанныеДокументаДляРасчетаСреднегоДенежногоДовольствия = РасчетДенежногоДовольствия.ДанныеДокументаДляРасчетаСреднегоДенежногоДовольствия(РеквизитыДокументаДляРасчетаСреднегоДенежногоДовольствия, ТаблицыДанныхОСреднем);
			ДанныеДокумента.ПараметрыРасчета = ДанныеДокументаДляРасчетаСреднегоДенежногоДовольствия.ПараметрыРасчета;
			ДанныеДокумента.ДанныеРасчетаСреднего = ДанныеДокументаДляРасчетаСреднегоДенежногоДовольствия.ДанныеРасчетаСреднего;
			
			ДанныеДокументов.Добавить(ДанныеДокумента);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат ДанныеДокументов;

КонецФункции

Функция КадровыеДанныеОсновногоСотрудника(Сотрудник, Организация, Дата)
	
	КадровыеДанныеСотрудника = Неопределено;
		
	КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), "ФизическоеЛицо,ФИОПолные,ТабельныйНомер,Подразделение,Должность,ВидЗанятости", Дата);
	
	Если КадровыеДанныеСотрудников.Количество() > 0 Тогда
		КадровыеДанныеСотрудника = КадровыеДанныеСотрудников[0];
	КонецЕсли;
	
	Возврат КадровыеДанныеСотрудника;
	
КонецФункции

#КонецОбласти

Функция ДатаНаступленияСтраховогоСлучая(Ссылка) Экспорт 
	
	ДатаНаступленияСтраховогоСлучая = Неопределено;
	
	Если ЗначениеЗаполнено(Ссылка) И ТипЗнч(Ссылка) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенкомВоеннослужащего") Тогда
		ДатаНаступленияСтраховогоСлучая = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ДатаНачала");
	КонецЕсли;
	
	Возврат ДатаНаступленияСтраховогоСлучая;	
	
КонецФункции

Функция ПолныеПраваНаДокумент() Экспорт 
	
	Возврат Пользователи.РолиДоступны("ДобавлениеИзменениеНачисленнойЗарплатыРасширенная, ЧтениеНачисленнойЗарплатыРасширенная", , Ложь);
	
КонецФункции	

Функция ИдентификаторСтрокПоказателейПособияДоТрехЛет() Экспорт
	Возврат 9 * 1000000;
КонецФункции

Функция ДанныеДляПроведения(РеквизитыДляПроведения, СтруктураВидовУчета) 

	ДанныеДляПроведения = РасчетЗарплатыРасширенный.СоздатьДанныеДляПроведенияНачисленияЗарплаты();
	
		Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда
			РасчетЗарплатыРасширенный.ЗаполнитьНачисления(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка, "ОплатаТруда", "Ссылка.ПериодРегистрации");
			РасчетЗарплатыРасширенный.ЗаполнитьУдержания(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка);
			РасчетЗарплатыРасширенный.ЗаполнитьСписокФизическихЛиц(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка, "ОплатаТруда");
			РасчетЗарплатыРасширенный.ЗаполнитьПогашениеЗадолженностиПоУдержаниям(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка, РеквизитыДляПроведения.ПериодРегистрации);
			ОтражениеЗарплатыВБухучете.СоздатьВТНачисленияСДаннымиЕНВД(РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.МенеджерВременныхТаблиц, ДанныеДляПроведения.НачисленияПоСотрудникам);
			РасчетЗарплаты.ЗаполнитьДанныеНДФЛ(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка);
			РасчетЗарплатыРасширенный.ЗаполнитьДанныеКорректировкиВыплаты(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка);
			РасчетЗарплаты.ЗаполнитьДанныеСтраховыхВзносов(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка);
			ЗаймыСотрудникам.ЗаполнитьДанныеДляПроведенияПоЗаймам(ДанныеДляПроведения, РеквизитыДляПроведения.Ссылка, НачалоДня(РеквизитыДляПроведения.ДатаНачала - 1), "Ссылка.ПериодРегистрации");
		КонецЕсли;
	
	Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда
		ЗаполнитьУсловияОплатыОтпускаПоУходуЗаРебенком(РеквизитыДляПроведения, ДанныеДляПроведения);
		ЗаполнитьПлановыеНачисленияИПоказатели(РеквизитыДляПроведения, ДанныеДляПроведения);
		ЗаполнитьПрименениеПлановыхНачислений(РеквизитыДляПроведения, ДанныеДляПроведения);
		ЗаполнитьПрименениеДополнительныхПоказателей(РеквизитыДляПроведения, ДанныеДляПроведения);
		ЗаполнитьПересчетТарифныхСтавок(РеквизитыДляПроведения, ДанныеДляПроведения);
		ЗаполнитьСовокупныеТарифныеСтавки(РеквизитыДляПроведения, ДанныеДляПроведения);
		ЗаполнитьДанныеВремениРегистрацииДокумента(РеквизитыДляПроведения, ДанныеДляПроведения);
				
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", РеквизитыДляПроведения.Ссылка);
				
		// Данные для Реестра отпусков
		ДанныеРеестраОтпусков = КадровыйУчетРасширенный.ТаблицаРеестраОтпусков();
		НоваяСтрока = ДанныеРеестраОтпусков.Добавить();
		Если ЗначениеЗаполнено(РеквизитыДляПроведения.ИсправленныйДокумент) Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДокументОснование", РеквизитыДляПроведения.ИсправленныйДокумент);
			Запрос.УстановитьПараметр("Сотрудник", РеквизитыДляПроведения.Сотрудник);
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	РеестрОтпусков.Сотрудник,
				|	РеестрОтпусков.ФизическоеЛицо,
				|	РеестрОтпусков.ДокументОснование,
				|	РеестрОтпусков.Номер,
				|	РеестрОтпусков.ВидОтпуска,
				|	РеестрОтпусков.ВидДоговора,
				|	РеестрОтпусков.Основание
				|ИЗ
				|	РегистрСведений.РеестрОтпусков КАК РеестрОтпусков
				|ГДЕ
				|	РеестрОтпусков.Регистратор = &ДокументОснование
				|	И РеестрОтпусков.Сотрудник = &Сотрудник";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		Иначе
			
			НоваяСтрока.Сотрудник = РеквизитыДляПроведения.Сотрудник;
			НоваяСтрока.ФизическоеЛицо = РеквизитыДляПроведения.ФизическоеЛицо;
			НоваяСтрока.ДокументОснование = РеквизитыДляПроведения.Ссылка;
			НоваяСтрока.Номер = 1;
			
			НоваяСтрока.ВидОтпуска = НСтр("ru='Отпуск по уходу за ребенком'");
			
			КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(
				Истина, РеквизитыДляПроведения.Сотрудник, "ВидДоговора", РеквизитыДляПроведения.ДатаНачала);
			
			Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
				НоваяСтрока.ВидДоговора = КадровыеДанныеСотрудника[0].ВидДоговора;
			КонецЕсли;
			
			Основание = КадровыйУчетРасширенный.ОснованиеДляРеестра(РеквизитыДляПроведения.Дата, РеквизитыДляПроведения.Номер);
			НоваяСтрока.Основание = Основание;
			
		КонецЕсли;
		
		НоваяСтрока.Период = РеквизитыДляПроведения.Дата;
		
		НоваяСтрока.ДатаНачалаПериодаОтсутствия = РеквизитыДляПроведения.ДатаНачала;
		НоваяСтрока.ДатаОкончанияПериодаОтсутствия = РеквизитыДляПроведения.ДатаОкончания;
		
		НоваяСтрока.КоличествоДнейОтпуска = ЗарплатаКадрыКлиентСервер.ДнейВПериоде(
			НоваяСтрока.ДатаНачалаПериодаОтсутствия, НоваяСтрока.ДатаОкончанияПериодаОтсутствия);
		
		ДанныеДляПроведения.Вставить("ДанныеРеестраОтпусков", ДанныеРеестраОтпусков);
		
	КонецЕсли;
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура СоздатьВТДанныеДокументов(ДокументСсылка, Сотрудник, Организация, ВремяРегистрации, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("СписокСотрудников", КадровыйУчетРасширенный.МассивСотрудников(Сотрудник, Организация, ВремяРегистрации));
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Организация КАК Организация,
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	ТаблицаДокумента.ДатаНачала КАК ПериодДействия,
		|	ТаблицаДокумента.Ссылка КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО ТаблицаДокумента.Сотрудник = Сотрудники.ФизическоеЛицо
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор
		|	И Сотрудники.Ссылка В(&СписокСотрудников)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Организация,
		|	Сотрудники.Ссылка,
		|	ТаблицаДокумента.ДатаОкончания,
		|	ТаблицаДокумента.Ссылка
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО ТаблицаДокумента.Сотрудник = Сотрудники.ФизическоеЛицо
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор
		|	И ТаблицаДокумента.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
		|	И Сотрудники.Ссылка В(&СписокСотрудников)";
		
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьУсловияОплатыОтпускаПоУходуЗаРебенком(РеквизитыДляПроведения, ДанныеДляПроведения)
	
	УсловияОплаты = Новый ТаблицаЗначений;
	УсловияОплаты.Колонки.Добавить("СтраховойСлучай");
	УсловияОплаты.Колонки.Добавить("Период");
	УсловияОплаты.Колонки.Добавить("Сотрудник");
	УсловияОплаты.Колонки.Добавить("Организация");
	УсловияОплаты.Колонки.Добавить("ФизическоеЛицо");
	УсловияОплаты.Колонки.Добавить("СреднийДневнойЗаработок");
	УсловияОплаты.Колонки.Добавить("МинимальныйСреднедневнойЗаработок");
	УсловияОплаты.Колонки.Добавить("КоличествоДетей");
	УсловияОплаты.Колонки.Добавить("КоличествоПервыхДетей");
	УсловияОплаты.Колонки.Добавить("ДатаНачалаСобытия");
	УсловияОплаты.Колонки.Добавить("РайонныйКоэффициентРФнаНачалоСобытия");
	
	Если РеквизитыДляПроведения.ВыплачиватьПособиеДоПолутораЛет Тогда		
		НовыеУсловияОплаты 										= УсловияОплаты.Добавить();
		НовыеУсловияОплаты.СтраховойСлучай 						= РеквизитыДляПроведения.Ссылка;
		НовыеУсловияОплаты.Период 								= РеквизитыДляПроведения.ДатаНачала;
		НовыеУсловияОплаты.ДатаНачалаСобытия 					= РеквизитыДляПроведения.ДатаНачала;
		НовыеУсловияОплаты.Сотрудник 							= РеквизитыДляПроведения.Сотрудник;
		НовыеУсловияОплаты.Организация 							= РеквизитыДляПроведения.Организация;
		НовыеУсловияОплаты.ФизическоеЛицо 						= РеквизитыДляПроведения.ФизическоеЛицо;
		НовыеУсловияОплаты.СреднийДневнойЗаработок 				= РеквизитыДляПроведения.СреднийДневнойЗаработок;
		НовыеУсловияОплаты.МинимальныйСреднедневнойЗаработок 	= РеквизитыДляПроведения.МинимальныйСреднедневнойЗаработок;
		НовыеУсловияОплаты.КоличествоДетей 						= РеквизитыДляПроведения.КоличествоДетей;
		НовыеУсловияОплаты.КоличествоПервыхДетей 				= РеквизитыДляПроведения.КоличествоПервыхДетей;
		НовыеУсловияОплаты.РайонныйКоэффициентРФнаНачалоСобытия = РеквизитыДляПроведения.РайонныйКоэффициентРФнаНачалоСобытия;
	КонецЕсли;
	
	ДанныеДляПроведения.Вставить("УсловияОплатыОтпускаПоУходуЗаРебенком", УсловияОплаты);
	
КонецПроцедуры

Процедура ЗаполнитьПлановыеНачисленияИПоказатели(РеквизитыДляПроведения, ДанныеДляПроведения)
	
	ПлановыеНачисления = РасчетЗарплатыРасширенный.ПустаяТаблицаРегистрацииПлановыхНачислений();
	ПлановыеНачисления.Колонки.Добавить("ИспользуетсяПоОкончании", Новый ОписаниеТипов("Булево"));
	
	ЗначенияПоказателей = РасчетЗарплатыРасширенный.ПустаяТаблицаРегистрацииЗначенийПериодическихПоказателей();
	
	ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(РеквизитыДляПроведения.Организация);
	
	Если РеквизитыДляПроведения.ВыплачиватьПособиеДоПолутораЛет Тогда
		ДобавитьПособиеПоУходуДоПолутораЛет(РеквизитыДляПроведения, ПлановыеНачисления, ГоловнаяОрганизация);
	КонецЕсли;
	
	Если РеквизитыДляПроведения.ВыплачиватьПособиеДоТрехЛет Тогда
		ДобавитьПособиеПоУходуДоТрехЛет(РеквизитыДляПроведения, ПлановыеНачисления, ГоловнаяОрганизация);
		ДобавитьПоказателиПособияПоУходуДоТрехЛет(РеквизитыДляПроведения, ЗначенияПоказателей);
	КонецЕсли;
	
	Если РеквизитыДляПроведения.ИзменитьНачисления И Не РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
		ДобавитьПлановыеНачисления(РеквизитыДляПроведения, ПлановыеНачисления);
		ДобавитьПлановыеПоказатели(РеквизитыДляПроведения, ЗначенияПоказателей);	
	КонецЕсли;
		
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", ПлановыеНачисления);
	ДанныеДляПроведения.Вставить("ЗначенияПоказателей", ЗначенияПоказателей);
	
КонецПроцедуры

Процедура ЗаполнитьПрименениеПлановыхНачислений(РеквизитыДляПроведения, ДанныеДляПроведения)
	
	ПрименениеНачислений = РасчетЗарплатыРасширенный.ПустаяТаблицаРегистрацииПримененияПлановыхНачислений();
	
	Если РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
		
		МассивРабочихМест = КадровыйУчетРасширенный.МассивСотрудников(РеквизитыДляПроведения.ФизическоеЛицо, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ДатаОкончания);

		Для каждого РабочееМесто Из МассивРабочихМест Цикл
			ПустоеПрименениеНачислений = ПрименениеНачислений.Добавить();
			ПустоеПрименениеНачислений.Сотрудник = РабочееМесто;
		КонецЦикла;
		
		ПрименениеНачислений.ЗаполнитьЗначения(РеквизитыДляПроведения.ДатаНачала, "ДатаСобытия");
	КонецЕсли;
	
	ДанныеДляПроведения.Вставить("ПрименениеНачислений", ПрименениеНачислений);
	
КонецПроцедуры

Процедура ЗаполнитьПрименениеДополнительныхПоказателей(РеквизитыДляПроведения, ДанныеДляПроведения)	
	
	ПрименениеДополнительныхПоказателей = Неопределено;
	
	Если РеквизитыДляПроведения.ИзменитьНачисления 
		И Не РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
		Запрос = ЗапросССсылкой(РеквизитыДляПроведения.Ссылка);
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтпускПоУходуЗаРебенкомПоказатели.Ссылка,
			|	ОтпускПоУходуЗаРебенкомПоказатели.Показатель,
			|	ОтпускПоУходуЗаРебенкомПоказатели.РабочееМесто
			|ПОМЕСТИТЬ ВТПоказателиНачислений
			|ИЗ
			|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Начисления КАК ОтпускПоУходуЗаРебенкомНачисления
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Показатели КАК ОтпускПоУходуЗаРебенкомПоказатели
			|		ПО ОтпускПоУходуЗаРебенкомНачисления.Ссылка = ОтпускПоУходуЗаРебенкомПоказатели.Ссылка
			|			И ОтпускПоУходуЗаРебенкомНачисления.РабочееМесто = ОтпускПоУходуЗаРебенкомПоказатели.РабочееМесто
			|			И ОтпускПоУходуЗаРебенкомНачисления.ИдентификаторСтрокиВидаРасчета = ОтпускПоУходуЗаРебенкомПоказатели.ИдентификаторСтрокиВидаРасчета
			|ГДЕ
			|	ОтпускПоУходуЗаРебенкомНачисления.Ссылка = &Ссылка
			|	И ОтпускПоУходуЗаРебенкомНачисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтпускПоУходуЗаРебенкомПоказатели.Ссылка.ДатаНачала КАК ДатаСобытия,
			|	ОтпускПоУходуЗаРебенкомПоказатели.Ссылка.Организация КАК Организация,
			|	ОтпускПоУходуЗаРебенкомПоказатели.РабочееМесто КАК Сотрудник,
			|	ОтпускПоУходуЗаРебенкомПоказатели.Ссылка.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОтпускПоУходуЗаРебенкомПоказатели.Показатель КАК Показатель,
			|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо,
			|	ВЫБОР
			|		КОГДА ОтпускПоУходуЗаРебенкомПоказатели.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК Применение
			|ИЗ
			|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Показатели КАК ОтпускПоУходуЗаРебенкомПоказатели
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНачислений КАК ПоказателиНачислений
			|		ПО ОтпускПоУходуЗаРебенкомПоказатели.Ссылка = ПоказателиНачислений.Ссылка
			|			И ОтпускПоУходуЗаРебенкомПоказатели.РабочееМесто = ПоказателиНачислений.РабочееМесто
			|			И ОтпускПоУходуЗаРебенкомПоказатели.Показатель = ПоказателиНачислений.Показатель
			|ГДЕ
			|	ОтпускПоУходуЗаРебенкомПоказатели.Ссылка = &Ссылка
			|	И ОтпускПоУходуЗаРебенкомПоказатели.ИдентификаторСтрокиВидаРасчета = 0
			|	И ОтпускПоУходуЗаРебенкомПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
			|	И ПоказателиНачислений.Показатель ЕСТЬ NULL ";

		ПрименениеДополнительныхПоказателей = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	ДанныеДляПроведения.Вставить("ПрименениеДополнительныхПоказателей", ПрименениеДополнительныхПоказателей);
	
КонецПроцедуры	

Процедура ЗаполнитьПересчетТарифныхСтавок(РеквизитыДляПроведения, ДанныеДляПроведения)	
	
	ПорядокПересчетаТарифнойСтавки = Неопределено;
	
	Если РеквизитыДляПроведения.ИзменитьНачисления И Не РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
		Запрос = ЗапросССсылкой(РеквизитыДляПроведения.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПересчетТарифныхСтавок.Ссылка.ДатаНачала КАК ДатаСобытия,
		|	ПересчетТарифныхСтавок.РабочееМесто КАК Сотрудник,
		|	ПересчетТарифныхСтавок.Ссылка.Сотрудник КАК ФизическоеЛицо,
		|	ПересчетТарифныхСтавок.ПорядокРасчетаСтоимостиЕдиницыВремени КАК ПорядокРасчета,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.ПересчетТарифныхСтавок КАК ПересчетТарифныхСтавок
		|ГДЕ
		|	ПересчетТарифныхСтавок.Ссылка = &Ссылка";
		
		ПорядокПересчетаТарифнойСтавки = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	ДанныеДляПроведения.Вставить("ПорядокПересчетаТарифнойСтавки", ПорядокПересчетаТарифнойСтавки);
	
КонецПроцедуры

Процедура ЗаполнитьСовокупныеТарифныеСтавки(РеквизитыДляПроведения, ДанныеДляПроведения)	
	
	ДанныеСовокупныхТарифныхСтавок = Неопределено;
	
	Если РеквизитыДляПроведения.ИзменитьНачисления И Не РеквизитыДляПроведения.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска Тогда
		
		Запрос = ЗапросССсылкой(РеквизитыДляПроведения.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПересчетТарифныхСтавок.Ссылка.ДатаНачала КАК ДатаСобытия,
		|	ПересчетТарифныхСтавок.РабочееМесто КАК Сотрудник,
		|	ПересчетТарифныхСтавок.Ссылка.Сотрудник КАК ФизическоеЛицо,
		|	ПересчетТарифныхСтавок.СовокупнаяТарифнаяСтавка КАК Значение,
		|	ВЫБОР
		|		КОГДА ПересчетТарифныхСтавок.СовокупнаяТарифнаяСтавка = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.ПустаяСсылка)
		|		ИНАЧЕ ПересчетТарифныхСтавок.ВидТарифнойСтавки
		|	КОНЕЦ КАК ВидТарифнойСтавки,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.ПересчетТарифныхСтавок КАК ПересчетТарифныхСтавок
		|ГДЕ
		|	ПересчетТарифныхСтавок.Ссылка = &Ссылка";
				
		ДанныеСовокупныхТарифныхСтавок = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", ДанныеСовокупныхТарифныхСтавок);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеВремениРегистрацииДокумента(РеквизитыДляПроведения, ДанныеДляПроведения)
	
	Запрос = ЗапросССсылкой(РеквизитыДляПроведения.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомНачисления.Ссылка.ДатаНачала КАК ДатаСобытия,
	|	ОтпускПоУходуЗаРебенкомНачисления.РабочееМесто КАК Сотрудник
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Начисления КАК ОтпускПоУходуЗаРебенкомНачисления
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомНачисления.Ссылка = &Ссылка";
	
	ДанныеДляПроведения.Вставить("СотрудникиДаты", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ДобавитьПособиеПоУходуДоПолутораЛет(РеквизитыДляПроведения, ПлановыеНачисления, ГоловнаяОрганизация)
	НовоеПлановоеНачисление 				= ПлановыеНачисления.Добавить();
	НовоеПлановоеНачисление.ДатаСобытия 	= РеквизитыДляПроведения.ДатаНачала;
	НовоеПлановоеНачисление.ДействуетДо 	= КонецДня(РеквизитыДляПроведения.ДатаОкончанияПособияДоПолутораЛет) + 1;
	НовоеПлановоеНачисление.Сотрудник 		= РеквизитыДляПроведения.Сотрудник;
	НовоеПлановоеНачисление.ФизическоеЛицо 	= РеквизитыДляПроведения.ФизическоеЛицо;
	НовоеПлановоеНачисление.ГоловнаяОрганизация = ГоловнаяОрганизация;
	НовоеПлановоеНачисление.Начисление 		= РеквизитыДляПроведения.ПособиеДоПолутораЛет;
	НовоеПлановоеНачисление.Используется 	= Истина;
КонецПроцедуры

Процедура ДобавитьПособиеПоУходуДоТрехЛет(РеквизитыДляПроведения, ПлановыеНачисления, ГоловнаяОрганизация)
	НовоеПлановоеНачисление 					= ПлановыеНачисления.Добавить();
	НовоеПлановоеНачисление.ДатаСобытия 		= РеквизитыДляПроведения.ДатаНачала;
	НовоеПлановоеНачисление.ДействуетДо 		= КонецДня(РеквизитыДляПроведения.ДатаОкончанияПособияДоТрехЛет) + 1;
	НовоеПлановоеНачисление.Сотрудник 			= РеквизитыДляПроведения.Сотрудник;
	НовоеПлановоеНачисление.ФизическоеЛицо 		= РеквизитыДляПроведения.ФизическоеЛицо;
	НовоеПлановоеНачисление.ГоловнаяОрганизация = ГоловнаяОрганизация;
	НовоеПлановоеНачисление.Начисление 			= РеквизитыДляПроведения.ПособиеДоТрехЛет;
	НовоеПлановоеНачисление.Размер 				= РеквизитыДляПроведения.РазмерПособияДоТрехЛетФиксированнойСуммой;
	НовоеПлановоеНачисление.Используется 		= Истина;
КонецПроцедуры

Процедура ДобавитьПоказателиПособияПоУходуДоТрехЛет(РеквизитыДляПроведения, ЗначенияПоказателей)
	
	ОтборПоказателейПособия = Новый Структура("ИдентификаторСтрокиВидаРасчета", Документы.ОтпускПоУходуЗаРебенкомВоеннослужащего.ИдентификаторСтрокПоказателейПособияДоТрехЛет());
	
	НайденныеСтроки = РеквизитыДляПроведения.Показатели.НайтиСтроки(ОтборПоказателейПособия);
	
	Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		НоваяСтрока 				= ЗначенияПоказателей.Добавить();
		НоваяСтрока.ДатаСобытия 	= РеквизитыДляПроведения.ДатаНачала;
		НоваяСтрока.ДействуетДо 	= КонецДня(РеквизитыДляПроведения.ДатаОкончанияПособияДоТрехЛет) + 1;
		НоваяСтрока.Сотрудник 		= РеквизитыДляПроведения.Сотрудник;
		НоваяСтрока.ФизическоеЛицо 	= РеквизитыДляПроведения.ФизическоеЛицо;
		НоваяСтрока.Организация 	= РеквизитыДляПроведения.Организация;
		НоваяСтрока.Показатель 		= СтрокаТаблицы.Показатель;
		НоваяСтрока.Значение 		= СтрокаТаблицы.Значение;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПлановыеНачисления(РеквизитыДляПроведения, ПлановыеНачисления)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", РеквизитыДляПроведения.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаСобытия,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо,
	|	ОтпускПоУходуЗаРебенкомНачисления.РабочееМесто КАК Сотрудник,
	|	ОтпускПоУходуЗаРебенкомНачисления.Начисление,
	|	ОтпускПоУходуЗаРебенкомНачисления.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенкомНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Используется,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенкомНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяПоОкончании,
	|	ОтпускПоУходуЗаРебенком.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОтпускПоУходуЗаРебенкомНачисления.Размер,
	|	ОтпускПоУходуЗаРебенком.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Начисления КАК ОтпускПоУходуЗаРебенкомНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ОтпускПоУходуЗаРебенком
	|		ПО ОтпускПоУходуЗаРебенкомНачисления.Ссылка = ОтпускПоУходуЗаРебенком.Ссылка
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПлановыеНачисления.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПлановыеПоказатели(РеквизитыДляПроведения, ЗначенияПоказателей)
	
	Запрос = ЗапросССсылкой(РеквизитыДляПроведения.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Организация КАК Организация,
	|	ОтпускПоУходуЗаРебенком.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОтпускПоУходуЗаРебенкомНачисления.РабочееМесто КАК Сотрудник,
	|	ОтпускПоУходуЗаРебенкомПоказатели.Показатель КАК Показатель,
	|	ОтпускПоУходуЗаРебенкомНачисления.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(ОтпускПоУходуЗаРебенкомПоказатели.Значение) КАК Значение,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаСобытия,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Показатели КАК ОтпускПоУходуЗаРебенкомПоказатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Начисления КАК ОтпускПоУходуЗаРебенкомНачисления
	|		ПО ОтпускПоУходуЗаРебенкомПоказатели.Ссылка = ОтпускПоУходуЗаРебенкомНачисления.Ссылка
	|			И ОтпускПоУходуЗаРебенкомПоказатели.ИдентификаторСтрокиВидаРасчета = ОтпускПоУходуЗаРебенкомНачисления.ИдентификаторСтрокиВидаРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ОтпускПоУходуЗаРебенком
	|		ПО ОтпускПоУходуЗаРебенкомПоказатели.Ссылка = ОтпускПоУходуЗаРебенком.Ссылка
	|			И (ОтпускПоУходуЗаРебенком.Ссылка = &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускПоУходуЗаРебенком.Организация,
	|	ОтпускПоУходуЗаРебенком.ФизическоеЛицо,
	|	ОтпускПоУходуЗаРебенкомНачисления.РабочееМесто,
	|	ОтпускПоУходуЗаРебенкомПоказатели.Показатель,
	|	ОтпускПоУходуЗаРебенкомНачисления.ДокументОснование,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗначенияПоказателей.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

Функция ЗапросССсылкой(ДокументСсылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Возврат Запрос;
КонецФункции 

Функция РеквизитыДляПроведения(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Ссылка,
	|	ОтпускПоУходуЗаРебенком.Организация,
	|	ОтпускПоУходуЗаРебенком.ИсправленныйДокумент,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончания,
	|	ОтпускПоУходуЗаРебенком.НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска,
	|	ОтпускПоУходуЗаРебенком.РассчитатьЗарплату,
	|	ОтпускПоУходуЗаРебенком.ПорядокВыплаты,
	|	ОтпускПоУходуЗаРебенком.Дата,
	|	ОтпускПоУходуЗаРебенком.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ОтпускПоУходуЗаРебенком.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	ОтпускПоУходуЗаРебенком.Номер,
	|	ОтпускПоУходуЗаРебенком.ВыплачиватьПособиеДоПолутораЛет,
	|	ОтпускПоУходуЗаРебенком.Сотрудник,
	|	ОтпускПоУходуЗаРебенком.ФизическоеЛицо,
	|	ОтпускПоУходуЗаРебенком.СреднийДневнойЗаработок,
	|	ОтпускПоУходуЗаРебенком.МинимальныйСреднедневнойЗаработок,
	|	ОтпускПоУходуЗаРебенком.КоличествоДетей,
	|	ОтпускПоУходуЗаРебенком.КоличествоПервыхДетей,
	|	ОтпускПоУходуЗаРебенком.РайонныйКоэффициентРФнаНачалоСобытия,
	|	ОтпускПоУходуЗаРебенком.ВыплачиватьПособиеДоТрехЛет,
	|	ОтпускПоУходуЗаРебенком.ИзменитьНачисления,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоПолутораЛет,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоТрехЛет,
	|	ОтпускПоУходуЗаРебенком.РазмерПособияДоТрехЛетФиксированнойСуммой,
	|	ОтпускПоУходуЗаРебенком.ПериодРегистрации
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего КАК ОтпускПоУходуЗаРебенком
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.НомерСтроки,
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.ИдентификаторСтроки,
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.Территория,
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.УсловияТруда,
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.ДоляРаспределения,
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.Результат,
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.ИдентификаторСтрокиПоказателей
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.РаспределениеПоТерриториямУсловиямТруда КАК ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомРаспределениеПоТерриториямУсловиямТруда.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомПоказатели.НомерСтроки,
	|	ОтпускПоУходуЗаРебенкомПоказатели.ИдентификаторСтрокиВидаРасчета,
	|	ОтпускПоУходуЗаРебенкомПоказатели.Показатель,
	|	ОтпускПоУходуЗаРебенкомПоказатели.Значение,
	|	ОтпускПоУходуЗаРебенкомПоказатели.Действие,
	|	ОтпускПоУходуЗаРебенкомПоказатели.РабочееМесто
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенкомВоеннослужащего.Показатели КАК ОтпускПоУходуЗаРебенкомПоказатели
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомПоказатели.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результаты = Запрос.ВыполнитьПакет();
	
	РеквизитыДляПроведения = РеквизитыДляПроведенияПустаяСтруктура();
	
	ВыборкаРеквизиты = Результаты[0].Выбрать();
	
	Пока ВыборкаРеквизиты.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(РеквизитыДляПроведения, ВыборкаРеквизиты);
		
	КонецЦикла;
	
	РаспределениеПоТерриториямУсловиямТруда = Результаты[1].Выгрузить();
	
	РеквизитыДляПроведения.РаспределениеПоТерриториямУсловиямТруда = РаспределениеПоТерриториямУсловиямТруда;    
	
	Показатели = Результаты[2].Выгрузить();
	
	РеквизитыДляПроведения.Показатели = Показатели;
	
	Возврат РеквизитыДляПроведения;
	
КонецФункции

Функция РеквизитыДляПроведенияПустаяСтруктура()
	
	РеквизитыДляПроведенияПустаяСтруктура = Новый Структура("Ссылка, Организация, ИсправленныйДокумент, ДатаНачала, ДатаОкончания, НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска, 
		| РассчитатьЗарплату, ПорядокВыплаты, Дата, ПериодРасчетаСреднегоЗаработкаНачало, ПериодРасчетаСреднегоЗаработкаОкончание, 
		| Номер, ВыплачиватьПособиеДоПолутораЛет, Сотрудник, ФизическоеЛицо, СреднийДневнойЗаработок, МинимальныйСреднедневнойЗаработок, КоличествоДетей, КоличествоПервыхДетей, 
		| РайонныйКоэффициентРФнаНачалоСобытия, 
		| ВыплачиватьПособиеДоТрехЛет, ИзменитьНачисления, ДатаОкончанияПособияДоПолутораЛет, ДатаОкончанияПособияДоТрехЛет, РазмерПособияДоТрехЛетФиксированнойСуммой, 
		| РаспределениеПоТерриториямУсловиямТруда, Показатели, ПериодРегистрации");	
	
	Возврат РеквизитыДляПроведенияПустаяСтруктура;
	
КонецФункции

// Функция возвращает структуру с описанием данного вида документа.
//
Функция ОписаниеДокумента() Экспорт 

	ОписаниеДокумента = ЗарплатаКадрыРасширенныйКлиентСервер.СтруктураОписанияДокумента();
	
	ОписаниеДокумента.КраткоеНазваниеИменительныйПадеж	 = НСтр("ru = 'отпуск'");
	ОписаниеДокумента.КраткоеНазваниеРодительныйПадеж	 = НСтр("ru = 'отпуска'");
	ОписаниеДокумента.ИмяРеквизитаСотрудник				 = "Сотрудник";
	ОписаниеДокумента.ИмяРеквизитаОтсутствующийСотрудник = "Сотрудник";
	ОписаниеДокумента.ИмяРеквизитаДатаНачалаСобытия		 = "ДатаНачала";
	ОписаниеДокумента.ИмяРеквизитаДатаОкончанияСобытия	 = "ДатаОкончания";
	
	Возврат ОписаниеДокумента;

КонецФункции

#КонецОбласти

#КонецЕсли
