#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ЗапросВФСКН;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
			
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ПФ_MXL_Приложение2_N578_29_12_2011";
		КомандаПечати.Представление = НСтр("ru = 'Заявление в органы ФСКН (приказ №578)'");
		КомандаПечати.Порядок = 10;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ПФ_MXL_Приложение3_N578_29_12_2011";
		КомандаПечати.Представление = НСтр("ru = 'Анкета сотрудника (приказ №578)'");
		КомандаПечати.Порядок = 20;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ПФ_MXL_Приложение2_N580_29_12_2011";
		КомандаПечати.Представление = НСтр("ru = 'Заявление в органы ФСКН (приказ №580)'");
		КомандаПечати.Порядок = 30;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ПФ_MXL_Приложение3_N580_29_12_2011";
		КомандаПечати.Представление = НСтр("ru = 'Анкета сотрудника (приказ №580)'");
		КомандаПечати.Порядок = 40;
	
КонецПроцедуры
	
// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Приложение2_N578_29_12_2011") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_Приложение2_N578_29_12_2011", НСтр("ru = 'Заявление в органы ФСКН (приказ №578)'"),
						ПечатьЗапрос(ПолучитьМакет("ПФ_MXL_Приложение2_N578_29_12_2011"), МассивОбъектов, ОбъектыПечати));
	КонецЕсли;	
					
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Приложение3_N578_29_12_2011") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_Приложение3_N578_29_12_2011", НСтр("ru = 'Анкета сотрудника (приказ №578)'"),
						ПечатьАнкета(ПолучитьМакет("ПФ_MXL_Приложение3_N578_29_12_2011"), МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
					
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Приложение2_N580_29_12_2011") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_Приложение2_N580_29_12_2011", НСтр("ru = 'Заявление в органы ФСКН (приказ №580)'"),
						ПечатьЗапрос(ПолучитьМакет("ПФ_MXL_Приложение2_N580_29_12_2011"), МассивОбъектов, ОбъектыПечати));
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Приложение3_N580_29_12_2011") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_Приложение3_N580_29_12_2011", НСтр("ru = 'Анкета сотрудника (приказ №580)'"),
						ПечатьАнкета(ПолучитьМакет("ПФ_MXL_Приложение3_N580_29_12_2011"), МассивОбъектов, ОбъектыПечати));
	КонецЕсли;	

КонецПроцедуры

Функция ПечатьЗапрос(Макет, МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявление_N578_29_12_2011";
	
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("ЗапросШапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("ЗапросПодвал"); // Подвал документа
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСотрудник"); // строка сотрудника
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ДанныеДокумента = ДанныеПечати.Значение;
		
		ОбластьМакетаШапка.Параметры.Заполнить(ДанныеДокумента);
		Если ДанныеДокумента.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
			ОбластьМакетаШапка.Параметры.ГосРегистрация="ОГРН " + ДанныеДокумента.ОГРН + " ИНН " + ДанныеДокумента.ИННЮЛ + "  " + ДанныеДокумента.НаименованиеОКОПФ + ?(ДанныеДокумента.ЭтоФилиал," КПП " + ДанныеДокумента.КПП,"");
		Иначе
			ОбластьМакетаШапка.Параметры.ГосРегистрация=ДанныеДокумента.ФактическийАдрес;	
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		КоличествоСотрудников=0;
		Для каждого ДанныеСотрудника Из ДанныеДокумента.ДанныеСотрудников Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСотрудника);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			КоличествоСотрудников=КоличествоСотрудников+1;
		КонецЦикла;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДокумента);
		ОбластьМакетаПодвал.Параметры.КоличествоСотрудников = ?(КоличествоСотрудников=0,"",КоличествоСотрудников);
		ОбластьМакетаПодвал.Параметры.КоличествоЛистов = ?(КоличествоСотрудников=0,"",КоличествоСотрудников);

		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Значение.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьЗапрос()

Функция ПечатьАнкета(Макет, МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Анкета_578_29_12_2011";
	
	// запоминаем области макета
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("АнкетаШапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("АнкетаПодвал"); // Подвал документа
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПрежнегоФИО"); // строка прежнего ФИО
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;	
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		ДанныеДокумента = ДанныеПечати.Значение;
		
		Для каждого ДанныеСотрудника Из ДанныеДокумента.ДанныеСотрудников Цикл
			
			// Документы нужно выводить на разных страницах.
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;	
		
			ПервыйДокумент = Ложь;
			
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

			ОбластьМакетаШапка.Параметры.Заполнить(ДанныеСотрудника);
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
			
			Для каждого СтрокаПрежнегоФИО Из ДанныеСотрудника.ПрошлыеФИО Цикл
				
				ОбластьСтрока.Параметры.Заполнить(СтрокаПрежнегоФИО);
				ОбластьСтрока.Параметры.ДатаИзменения 	=  Формат(СтрокаПрежнегоФИО.ДатаИзменения,"ДФ=dd.MM.yyyy");
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
			ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеСотрудника);
			
			ОбластьМакетаПодвал.Параметры.ФИОИнициалы 		= ДанныеСотрудника.ФамилияИО;
			ОбластьМакетаПодвал.Параметры.МестоРожденияПредставление =ПерсонифицированныйУчетКлиентСервер.ПредставлениеМестаРождения(ДанныеСотрудника.МестоРождения);	

			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеСотрудника.Ссылка);

		КонецЦикла;
		
	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатьАнкета()

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗапросВФСКН.Ссылка,
		|	ЗапросВФСКН.Организация,
		|	ЗапросВФСКН.Номер,
		|	ЗапросВФСКН.Дата,
		|	ЗапросВФСКН.Дата КАК Период,
		|	ЗапросВФСКН.ОрганФСКН,
		|	ЗапросВФСКН.Руководитель,
		|	ЗапросВФСКН.ДолжностьРуководителя,
		|	ЗапросВФСКНСотрудники.Сотрудник,
		|	ЗапросВФСКНСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗапросВФСКНСотрудники.Должность
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ЗапросВФСКН.Сотрудники КАК ЗапросВФСКНСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗапросВФСКН КАК ЗапросВФСКН
		|		ПО ЗапросВФСКНСотрудники.Ссылка = ЗапросВФСКН.Ссылка
		|ГДЕ
		|	ЗапросВФСКНСотрудники.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокументов.Организация
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов";
				
	МассивВидовКонтактнойИнформации= Новый Массив;
	МассивВидовКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	МассивВидовКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	
	МассивОрганизаций=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
	КадровыеДанные = "ФИОПолные,ФамилияИО,Фамилия,Имя,Отчество,ДатаРождения,МестоРождения,"
		+ "ДокументВид,ДокументСерия,ДокументНомер,ДокументКемВыдан,ДокументДатаВыдачи,"
		+ "Страна,АдресПоПропискеПредставление,АдресМестаПроживанияПредставление";
	  
	ОписательВТ = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТДанныеДокументов");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВТ, Истина, КадровыеДанные);
	
	УправлениеКонтактнойИнформацией.СоздатьВТКонтактнаяИнформация(Запрос.МенеджерВременныхТаблиц, МассивОрганизаций, 
	 	Перечисления.ТипыКонтактнойИнформации.Адрес,); 

	// Создание временной таблицы прошлых ФИО физических лиц.
	СоздатьВТПрошлыеФИОФизическихЛиц(Запрос.МенеджерВременныхТаблиц);		

	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокументов.Ссылка,
		|	ДанныеДокументов.Номер,
		|	ДанныеДокументов.Дата,
		|	ВЫБОР
		|		КОГДА ДанныеДокументов.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|			ТОГДА ДанныеДокументов.Организация.ИндивидуальныйПредприниматель
		|		ИНАЧЕ ДанныеДокументов.Организация
		|	КОНЕЦ КАК Организация,
		|	ДанныеДокументов.Организация.ЮридическоеФизическоеЛицо КАК ЮридическоеФизическоеЛицо,
		|	ДанныеДокументов.ОрганФСКН,
		|	СведенияОЮридическомАдресеОрганизаций.Представление КАК ЮридическийАдрес,
		|	СведенияОбФактическомАдресеОрганизаций.Представление КАК ФактическийАдрес,
		|	ДанныеДокументов.Организация.ОГРН КАК ОГРН,
		|	ВЫРАЗИТЬ(ДанныеДокументов.Организация.НаименованиеПолное КАК СТРОКА(200)) КАК НаименованиеЮрЛица,
		|	ДанныеДокументов.Организация.ИНН КАК ИННЮЛ,
		|	ДанныеДокументов.Организация.НаименованиеОКОПФ КАК НаименованиеОКОПФ,
		|	ДанныеДокументов.Организация.РегистрацияВНалоговомОргане.КПП КАК КПП,
		|	ДанныеДокументов.Организация.ОбособленноеПодразделение КАК ЭтоФилиал,
		|	ФИООтветственныхЛиц.РасшифровкаПодписи КАК РуководительРасшифровкаПодписи,
		|	ДанныеДокументов.ДолжностьРуководителя.Наименование КАК ДолжностьРуководителя
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКонтактнаяИнформация КАК СведенияОЮридическомАдресеОрганизаций
		|		ПО ДанныеДокументов.Организация = СведенияОЮридическомАдресеОрганизаций.Объект
		|			И (СведенияОЮридическомАдресеОрганизаций.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКонтактнаяИнформация КАК СведенияОбФактическомАдресеОрганизаций
		|		ПО ДанныеДокументов.Организация = СведенияОбФактическомАдресеОрганизаций.Объект
		|			И (СведенияОбФактическомАдресеОрганизаций.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
		|		ПО ДанныеДокументов.Руководитель = ФИООтветственныхЛиц.ФизическоеЛицо
		|			И ДанныеДокументов.Ссылка = ФИООтветственныхЛиц.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокументов.Ссылка,
		|	ДанныеДокументов.Ссылка.Дата КАК Дата,
		|	ДанныеДокументов.Сотрудник,
		|	ДанныеДокументов.ФизическоеЛицо,
		|	ЕСТЬNULL(КадровыеДанныеСотрудников.ФИОПолные, ДанныеДокументов.ФизическоеЛицо) КАК ФИО,
		|	ДанныеДокументов.Должность,
		|	КадровыеДанныеСотрудников.ФамилияИО,
		|	КадровыеДанныеСотрудников.Фамилия,
		|	КадровыеДанныеСотрудников.Имя,
		|	КадровыеДанныеСотрудников.Отчество,
		|	КадровыеДанныеСотрудников.МестоРождения,
		|	КадровыеДанныеСотрудников.ДатаРождения,
		|	ВЫБОР
		|		КОГДА КадровыеДанныеСотрудников.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
		|			ТОГДА ""РФ""
		|		ИНАЧЕ КадровыеДанныеСотрудников.Страна.Наименование
		|	КОНЕЦ КАК Гражданство,
		|	КадровыеДанныеСотрудников.АдресПоПропискеПредставление,
		|	КадровыеДанныеСотрудников.АдресМестаПроживанияПредставление,
		|	КадровыеДанныеСотрудников.ДокументСерия КАК ДокументСерия,
		|	КадровыеДанныеСотрудников.ДокументНомер КАК ДокументНомер,
		|	КадровыеДанныеСотрудников.ДокументКемВыдан КАК ДокументКемВыдан
		|ИЗ
		|	ВТДанныеДокументов КАК ДанныеДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ДанныеДокументов.Ссылка.Дата = КадровыеДанныеСотрудников.Период
		|			И ДанныеДокументов.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрошлыеФИОФизическихЛиц.Ссылка,
		|	ПрошлыеФИОФизическихЛиц.ФизическоеЛицо,
		|	ПрошлыеФИОФизическихЛиц.ПрошлыеФИО,
		|	ПрошлыеФИОФизическихЛиц.Период КАК ДатаИзменения
		|ИЗ
		|	ВТПрошлыеФИОФизическихЛиц КАК ПрошлыеФИОФизическихЛиц";

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ДокументыДляПечати = РезультатыЗапроса[0].Выгрузить();
 	СтрокиДокументов = РезультатыЗапроса[1].Выгрузить();
	СведенияОПрежнемФИО = РезультатыЗапроса[2].Выгрузить();

	СтрокиДокументов.Колонки.Добавить("ПаспортныеДанные");
	СтрокиДокументов.Колонки.Добавить("ПрошлыеФИО");
	
	Для Каждого ДокументДляПечати Из ДокументыДляПечати Цикл
		
		ДанныеПечати = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ДокументДляПечати);
		
		ДанныеСотрудников = СтрокиДокументов.НайтиСтроки(Новый Структура("Ссылка", ДанныеПечати.Ссылка));
		ДанныеПечати.Вставить("ДанныеСотрудников", ДанныеСотрудников);
		Для Каждого СтрокаСотрудника Из ДанныеСотрудников Цикл
			
			СтрокаСотрудника.ПаспортныеДанные =
				СтрШаблон(
					НСтр("ru = 'серия %1 номер %2, выдан %3'"),
					СтрокаСотрудника.ДокументСерия,
					СтрокаСотрудника.ДокументНомер,
					СтрокаСотрудника.ДокументКемВыдан);
					
			СтрокаСотрудника.ПрошлыеФИО = СведенияОПрежнемФИО.НайтиСтроки(Новый Структура("Ссылка,ФизическоеЛицо", ДанныеПечати.Ссылка,СтрокаСотрудника.ФизическоеЛицо));
			
		КонецЦикла;

		// Заполнение соответствия
		ДанныеПечатиОбъектов.Вставить(ДокументДляПечати.Ссылка, ДанныеПечати);
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;

КонецФункции

Процедура СоздатьВТПрошлыеФИОФизическихЛиц(МенеджерВременныхТаблиц)
	
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДокументов.Ссылка,
	               |	ФИОФизическихЛиц.Период КАК Период,
	               |	ДанныеДокументов.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ЕСТЬNULL(ФИОФизическихЛиц.Фамилия, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛиц.Имя, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛиц.Отчество, """") КАК ПрошлыеФИО
	               |ПОМЕСТИТЬ ВТФИОФизическихЛиц
	               |ИЗ
	               |	ВТДанныеДокументов КАК ДанныеДокументов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	               |		ПО ДанныеДокументов.Сотрудник.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
	               |			И ДанныеДокументов.Период >= ФИОФизическихЛиц.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФИОФизическихЛиц.Ссылка,
	               |	ФИОФизическихЛиц.ФизическоеЛицо,
	               |	МАКСИМУМ(ФИОФизическихЛиц.Период) КАК Период,
	               |	СУММА(1) КАК КоличествоСтрок
	               |ПОМЕСТИТЬ ВТФИОФизическихЛицВспомогательная
	               |ИЗ
	               |	ВТФИОФизическихЛиц КАК ФИОФизическихЛиц
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФИОФизическихЛиц.Ссылка,
	               |	ФИОФизическихЛиц.ФизическоеЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФИОФизическихЛиц.Ссылка,
	               |	ФИОФизическихЛиц.ФизическоеЛицо,
	               |	ФИОФизическихЛиц.ПрошлыеФИО,
	               |	ФИОФизическихЛиц.Период 
	               |ПОМЕСТИТЬ ВТПрошлыеФИОФизическихЛиц
	               |ИЗ
	               |	ВТФИОФизическихЛиц КАК ФИОФизическихЛиц
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизическихЛицВспомогательная КАК ФИОФизическихЛицВспомогательная
	               |		ПО ФИОФизическихЛиц.ФизическоеЛицо = ФИОФизическихЛицВспомогательная.ФизическоеЛицо
	               |ГДЕ
	               |	ФИОФизическихЛиц.Ссылка = ФИОФизическихЛицВспомогательная.Ссылка
	               |	И ФИОФизическихЛиц.Период <> ФИОФизическихЛицВспомогательная.Период
	               |	И ФИОФизическихЛицВспомогательная.КоличествоСтрок > 1";
				   
	Запрос.Выполнить(); 

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
