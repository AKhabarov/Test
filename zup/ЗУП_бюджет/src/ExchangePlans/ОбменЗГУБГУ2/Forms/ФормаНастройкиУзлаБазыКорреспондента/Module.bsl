#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Данные = Новый Соответствие;
	Данные.Вставить("Справочник.Организации");
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаБазыКорреспондентаПриСозданииНаСервере(ЭтаФорма, "ОбменЗГУБГУ2", Данные);

	// Настройка обмена данными для отражения в учете
	РежимСинхронизацииДанных = ?(ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьВсеДанные");
	
	ИспользуемыеОрганизации = Организации.Выгрузить();
	ЗагрузитьДанныеВТаблицуФормы(Данные["Справочник.Организации"], Организации, "Организация");
	ОтметитьВыбранныеЭлементыТаблицы(ИспользуемыеОрганизации, "Организации");
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РежимСинхронизацииДанныхПриИзмененииЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма, ЗавершениеРаботы);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение);
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимСинхронизацииДанныхПриИзменении(Элемент)
	РежимСинхронизацииДанныхПриИзмененииЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ВидПервичногоДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыВыбора = Новый Структура("ВыборГруппИЭлементов", ГруппыИЭлементы.Элементы);
	
	ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаНачалоВыбора("ВидПервичногоДокумента", "Справочник.ВидыПервичныхДокументов", 
		ЭтаФорма, СтандартнаяОбработка, ЭтаФорма.ПараметрыВнешнегоСоединения, ПараметрыВыбора);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыВыбора = Новый Структура("ВыборГруппИЭлементов", ГруппыИЭлементы.Элементы);
	
	ОбменДаннымиКлиент.ОбработчикВыбораЭлементовБазыКорреспондентаНачалоВыбора("Контрагент", "Справочник.Контрагенты", 
		ЭтаФорма, СтандартнаяОбработка, ЭтаФорма.ПараметрыВнешнегоСоединения, ПараметрыВыбора);
КонецПроцедуры

#КонецОбласти



#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура КомандаОК(Команда)	
	// Настройки обмена данными для отражения зп в учете
	ИспользоватьОтборПоОрганизациям = (РежимСинхронизацииДанных = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	Если Не ИспользоватьОтборПоОрганизациям Тогда			
		Организации.Очистить();
	Иначе
		ЗаписатьДанныеПоОрганизациям("Организации");
	КонецЕсли;
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);		
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	ИмяТаблицы = "Организации";
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, ИмяТаблицы);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	ИмяТаблицы = "Организации";
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, ИмяТаблицы);
КонецПроцедуры

#КонецОбласти



#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		ЭлементКоллекции.Использовать = Включить;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииДанныхПриИзмененииЗначения()
	Элементы.Организации.Доступность = (РежимСинхронизацииДанных = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
КонецПроцедуры

&НаСервере
Процедура ОтметитьВыбранныеЭлементыТаблицы(ИспользуемыеОрганизации, ИмяТаблицы)
	ТаблицаФормы = ЭтаФорма[ИмяТаблицы];
	
	Для Каждого СтрокаТаблицы Из ИспользуемыеОрганизации Цикл
		Строки = ТаблицаФормы.НайтиСтроки(Новый Структура("Организация_Ключ", СтрокаТаблицы.Организация_Ключ));
		
		Если Строки.Количество() > 0 Тогда
			Строки[0].Использовать = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеВТаблицуФормы(Источник, Приемник, ИмяРеквизита)
	Приемник.Очистить();
	
	Для Каждого СтрокаИсточника Из Источник Цикл
		СтрокаПриемника = Приемник.Добавить();
		СтрокаПриемника[ИмяРеквизита] = СтрокаИсточника.Представление;
		СтрокаПриемника[ИмяРеквизита + "_Ключ"] = СтрокаИсточника.Идентификатор;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПоОрганизациям(ИмяТаблицы)
	ТаблицаФормы = ЭтаФорма[ИмяТаблицы];
	ТаблицаФормы.Загрузить(ТаблицаФормы.Выгрузить(Новый Структура("Использовать", Истина), "Организация,Организация_Ключ"));
КонецПроцедуры

#КонецОбласти
