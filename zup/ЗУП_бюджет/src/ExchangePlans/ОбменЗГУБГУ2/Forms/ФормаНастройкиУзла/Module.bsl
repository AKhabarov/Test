#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, "ОбменЗГУБГУ2");
	
	ВсеОрганизацииПриложения = ВсеОрганизацииПриложения();
	
	// Настройка обмена данными для отражения зарплаты в учете
	РежимСинхронизацииДанных = ?(ИспользоватьОтборПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьВсеДанные");
	
	ИспользуемыеОрганизации = Организации.Выгрузить();
	Организации.Загрузить(ВсеОрганизацииПриложения);
	ОтметитьВыбранныеЭлементыТаблицы(ИспользуемыеОрганизации, "Организации");
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РежимСинхронизацииДанныхПриИзмененииЗначения();
	УстановитьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма, ЗавершениеРаботы);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимСинхронизацииДанныхПриИзменении(Элемент)
	РежимСинхронизацииДанныхПриИзмененииЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьДанныеСотрудниковПриИзменении(Элемент)
	МассивНастроек = Новый Массив;
	МассивНастроек.Добавить("ВыгружатьИсториюФИО");
	МассивНастроек.Добавить("ВыгружатьДокументы");
	МассивНастроек.Добавить("ВыгружатьКадровуюИсторию");
	МассивНастроек.Добавить("ВыгружатьГражданство");
	МассивНастроек.Добавить("ВыгружатьФотографии");
	МассивНастроек.Добавить("ВыгружатьДанныеНачисленийИУдержаний");
	
	Если Не ВыгружатьДанныеСотрудников Тогда
		Для Каждого Элемент Из МассивНастроек Цикл
			ЭтаФорма[Элемент] = Ложь;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	// Настройка обмена данными для отражения зп в учете
	ИспользоватьОтборПоОрганизациям = (РежимСинхронизацииДанных = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	Если ИспользоватьОтборПоОрганизациям Тогда
		ЗаписатьДанныеПоОрганизациям("Организации");
	Иначе
		Организации.Очистить();
	КонецЕсли;
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);		
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	ИмяТаблицы = "Организации";
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, ИмяТаблицы);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	ИмяТаблицы = "Организации";
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, ИмяТаблицы);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РежимСинхронизацииДанныхПриИзмененииЗначения()
	Элементы.Организации.Доступность = (РежимСинхронизацииДанных = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВсеОрганизацииПриложения()
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК Использовать,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организации.Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		ЭлементКоллекции.Использовать = Включить;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОтметитьВыбранныеЭлементыТаблицы(ИспользуемыеОрганизации, ИмяТаблицы)
	ТаблицаФормы = ЭтаФорма[ИмяТаблицы];
	
	Для Каждого СтрокаТаблицы Из ИспользуемыеОрганизации Цикл
		Строки = ТаблицаФормы.НайтиСтроки(Новый Структура("Организация", СтрокаТаблицы.Организация));
		
		Если Строки.Количество() > 0 Тогда
			Строки[0].Использовать = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПоОрганизациям(ИмяТаблицы)
	ТаблицаФормы = ЭтаФорма[ИмяТаблицы]	;
	ТаблицаФормы.Загрузить(ТаблицаФормы.Выгрузить(Новый Структура("Использовать", Истина), "Организация"));		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	Элементы.ГруппаНастройки.Доступность = ВыгружатьДанныеСотрудников;
КонецПроцедуры

#КонецОбласти
