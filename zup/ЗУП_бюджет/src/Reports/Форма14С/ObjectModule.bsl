#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует табличный документ отчет.
//
// Параметры:
//  ТаблицаОтчета 	- ТабличныйДокумент - документ, в который выводятся данные.
//  Организация  	- СправочникСсылка.Организации - Организация, по которой формируется отчет.
//  ДатаНачала		- Дата - дата начала периода.
//  ДатаОкончания	- Дата - дата конца периода.
//
Процедура СформироватьОтчет(ТаблицаОтчета,Организация, ДатаНачала, ДатаОкончания) Экспорт
	
	ТаблицаОтчета.Очистить();
			
	СформироватьОтчетФорма14С(ТаблицаОтчета, Организация, ДатаНачала, ДатаОкончания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВывестиРаздел(ТабДокРезультат, ВыборкаДанных, ТекущийРаздел, ТочностьПоказателей, Макет) Экспорт
	
	Шапка		  		= Макет.ПолучитьОбласть("Шапка_"+ТекущийРаздел);
	Св		  			= Макет.ПолучитьОбласть("Св_"+ТекущийРаздел);
	ОбластьПоказатели 	= Макет.ПолучитьОбласть("Раздел_"+ТекущийРаздел);
	
	ТабДокРезультат.Вывести(Шапка);
	ТабДокРезультат.Вывести(Св);
	
	СтруктураПараметровЗнач  = ПолучитьНазваниеПараметровОбласти(ОбластьПоказатели);
	ИтогоСтруктураПараметров = ПолучитьНазваниеПараметровОбласти(ОбластьПоказатели);
	
	ТочностьВ10 = Pow(10, ТочностьПоказателей);
	Пока ВыборкаДанных.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПараметровЗнач, ВыборкаДанных);
		Для каждого Параметр из ИтогоСтруктураПараметров Цикл
			СтруктураПараметровЗнач[Параметр.Ключ]  = СтруктураПараметровЗнач[Параметр.Ключ]/ТочностьВ10;
		КонецЦИкла;
		ОбластьПоказатели.Параметры.Заполнить(СтруктураПараметровЗнач);
		
	КонецЦикла;
	
	ТабДокРезультат.Вывести(ОбластьПоказатели);
				
КонецПроцедуры

Функция ПолучитьНазваниеПараметровОбласти(ОбластьПоказатели)
	СтруктураПоказателей = Новый Структура;
	Для НомерСтроки = 1 По ОбластьПоказатели.ВысотаТаблицы Цикл
		Для НомерКолонки = 1 По ОбластьПоказатели.ШиринаТаблицы Цикл
			Ячейка = ОбластьПоказатели.Область(НомерСтроки,НомерКолонки,НомерСтроки,НомерКолонки);
			Если Ячейка.Параметр <> "" И Ячейка.Параметр <> Неопределено Тогда
				Если НЕ СтруктураПоказателей.Свойство(Ячейка.Параметр) Тогда
					СтруктураПоказателей.Вставить(Ячейка.Параметр, 0);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат СтруктураПоказателей;
КонецФункции

Функция ПолучитьДанныеПоФорме14С_Расходы(Организация, ДатаНачала, ДатаОкончания) экспорт
	
	СтруктураДанных = Новый Структура("Расходы, Справка");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	
	МассивКОСГУ = Новый Массив;
	МассивКОСГУ.Добавить(ОтражениеЗарплатыВБухучетеРасширенный.СтатьяРасходов211());
	Запрос.УстановитьПараметр("КОСГУ", МассивКОСГУ);
	
	ПараметрыПолученияРабочихМест = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоСпискуСотрудников();
	ПараметрыПолученияРабочихМест.Организация 		= Организация;
	ПараметрыПолученияРабочихМест.НачалоПериода 	= ДатаНачала;
	ПараметрыПолученияРабочихМест.ОкончаниеПериода	= ДатаОкончания;
	
	// Получаем рабочие места сотрудников
	КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияРабочихМест);
			
	ВидыДолжностейОтчета = Новый Массив;
	ВидыДолжностейОтчета.Добавить("ГосударственнаяДолжность");
	ВидыДолжностейОтчета.Добавить("ДолжностьГосударственнойГражданскойСлужбы");
	ВидыДолжностейОтчета.Добавить("ОтдельнаяДолжностьГосударственнойГражданскойСлужбы");
	ВидыДолжностейОтчета.Добавить("ДолжностьИногоВидаФедеральнойГосударственнойСлужбы");
	Запрос.УстановитьПараметр("ВидыДолжностейОтчета", ВидыДолжностейОтчета);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизации.Период КАК Период,
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизации.Должность,
	|	ЕСТЬNULL(СтрокиОтчетностиРасходовИЧисленности.СтрокаОтчетностиРасходовИЧисленностиРаботниковГосударственныхОрганов.КодКатегорииПерсонала,"""") КАК КодКатегорииПерсонала
	|ПОМЕСТИТЬ ВТДвиженияРаботников
	|ИЗ
	|	ВТРабочиеМестаСотрудников КАК РаботникиОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтрокиОтчетностиРасходовИЧисленностиРаботниковГосударственныхОрганов КАК СтрокиОтчетностиРасходовИЧисленности
	|		ПО (СтрокиОтчетностиРасходовИЧисленности.Должность = РаботникиОрганизации.Должность)
	|ГДЕ
	|	РаботникиОрганизации.Организация = &Организация
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(Начисления.Период, МЕСЯЦ) КАК Период,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.СтатьяФинансирования,
	|	Начисления.Сумма КАК Результат
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Начисления
	|ГДЕ
	|	Начисления.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|	И Начисления.Организация = &Организация
	|	И Начисления.СтатьяРасходов В(&КОСГУ)
	|	И Начисления.Сумма <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачислений.Сотрудник КАК Сотрудник,
	|	ТаблицаНачислений.Период КАК Период,
	|	МАКСИМУМ(ВТДвиженияРаботников.Период) КАК ПериодДвижения
	|ПОМЕСТИТЬ ВТДвиженияНачисления
	|ИЗ
	|	ВТНачисления КАК ТаблицаНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДвиженияРаботников КАК ВТДвиженияРаботников
	|		ПО ТаблицаНачислений.Сотрудник = ВТДвиженияРаботников.Сотрудник
	|			И (ВТДвиженияРаботников.Период <= ТаблицаНачислений.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачислений.Сотрудник,
	|	ТаблицаНачислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачислений.Сотрудник,
	|	ЕСТЬNULL(ДвиженияРаботников.КодКатегорииПерсонала, """") КАК КодКатегорииПерсонала,
	|	СУММА(ТаблицаНачислений.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТДанныеУчета
	|ИЗ
	|	ВТНачисления КАК ТаблицаНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДвиженияНачисления КАК ДвиженияНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДвиженияРаботников КАК ДвиженияРаботников
	|			ПО ДвиженияНачисления.Сотрудник = ДвиженияРаботников.Сотрудник
	|				И ДвиженияНачисления.ПериодДвижения = ДвиженияРаботников.Период
	|		ПО ТаблицаНачислений.Сотрудник = ДвиженияНачисления.Сотрудник
	|			И ТаблицаНачислений.Период = ДвиженияНачисления.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачислений.Сотрудник,
	|	ЕСТЬNULL(ДвиженияРаботников.КодКатегорииПерсонала, """")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУчета.Раздел1_СТР01,
	|	ДанныеУчета.Раздел1_СТР02,
	|	ДанныеУчета.Раздел1_СТР03,
	|	ДанныеУчета.Раздел1_СТР04,
	|	ДанныеУчета.Раздел1_СТР05,
	|	ДанныеУчета.Раздел1_СТР06,
	|	ДанныеУчета.Раздел1_СТР01 + ДанныеУчета.Раздел1_СТР02 + ДанныеУчета.Раздел1_СТР03 + ДанныеУчета.Раздел1_СТР04 + ДанныеУчета.Раздел1_СТР05 + ДанныеУчета.Раздел1_СТР06 КАК Раздел1_СТР07
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжность""
	|					ТОГДА Данные.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ),0) КАК Раздел1_СТР01,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА Данные.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ),0) КАК Раздел1_СТР02,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ОтдельнаяДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА Данные.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ),0) КАК Раздел1_СТР03,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьИногоВидаФедеральнойГосударственнойСлужбы""
	|					ТОГДА Данные.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ),0) КАК Раздел1_СТР04,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""НеЯвляетсяДолжностьюГосударственнойСлужбы""
	|					ТОГДА Данные.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ),0) КАК Раздел1_СТР05,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжностьНовойСистемыОплатыТруда""
	|					ТОГДА Данные.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ),0) КАК Раздел1_СТР06
	|	ИЗ
	|		ВТДанныеУчета КАК Данные
	|) КАК ДанныеУчета";

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать();
		
КонецФункции

Функция ПолучитьДанныеПоФорме14С_Численность(Организация, ДатаНачала, ДатаОкончания) экспорт 
	
	ТаблицаДанныхОтчета = Новый ТаблицаЗначений;
	ТаблицаДанныхОтчета.Колонки.Добавить("Должность", Новый ОписаниеТипов("СправочникСсылка.Должности"));
	ТаблицаДанныхОтчета.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаДанныхОтчета.Колонки.Добавить("КодКатегорииПерсонала", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
	ТаблицаДанныхОтчета.Колонки.Добавить("КоличествоСтавок", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОтчета.Колонки.Добавить("КоличествоЗанятыхСтавок", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОтчета.Колонки.Добавить("СписочнаяЧисленность", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОтчета.Колонки.Добавить("СписочнаяЧисленностьНаКонецПериода", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОтчета.Колонки.Добавить("СреднесписочнаяЧисленность", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОтчета.Колонки.Добавить("СреднесписочнаяЧисленностьЗаПериод", Новый ОписаниеТипов("Число"));
		
	СтруктураЧисленности = СтатистикаПерсоналаРасширенный.СведенияОДолжностяхИЧисленностиРегламентированнойОтчетности(Организация, ДатаНачала, ДатаОкончания);
	
	СтрокаОрганизации = СтруктураЧисленности.ДанныеШтатногоРасписания.Строки.Найти(Организация, "Организация");
	Если СтрокаОрганизации <> Неопределено Тогда
		Для Каждого СтрокаЧисленности Из СтрокаОрганизации.Строки Цикл
	   		НоваяСтрокаОтчета = ТаблицаДанныхОтчета.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаОтчета,СтрокаЧисленности);
			НоваяСтрокаОтчета.КодКатегорииПерсонала = СтрокаЧисленности.Должность_СтрокаОтчетностиФормы14_КодКатегорииПерсонала;
		КонецЦикла;	
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Подразделение,Должность");
	СтрокаОрганизации = СтруктураЧисленности.ДанныеСреднесписочнойЧисленности.Строки.Найти(Организация, "Организация");
	Если СтрокаОрганизации <> Неопределено Тогда
		Для Каждого СтрокаЧисленности Из СтрокаОрганизации.Строки Цикл
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаЧисленности);
			ПозицииШтатногоРасписания = ТаблицаДанныхОтчета.НайтиСтроки(СтруктураПоиска);
			Если ПозицииШтатногоРасписания.Количество() > 0 Тогда
				СтрокаШР = ПозицииШтатногоРасписания[0];
				СтрокаШР.СписочнаяЧисленность 				= СтрокаШР.СписочнаяЧисленность + СтрокаЧисленности.ЧисленностьСписочногоСостава;
				СтрокаШР.СписочнаяЧисленностьНаКонецПериода = СтрокаШР.СписочнаяЧисленностьНаКонецПериода + СтрокаЧисленности.ЧисленностьНаКонецПериодаСписочногоСостава;
				СтрокаШР.СреднесписочнаяЧисленность 		= СтрокаШР.СреднесписочнаяЧисленность + СтрокаЧисленности.СредняяЧисленностьСписочногоСостава;
				СтрокаШР.СреднесписочнаяЧисленностьЗаПериод = СтрокаШР.СреднесписочнаяЧисленностьЗаПериод + СтрокаЧисленности.СредняяЧисленностьЗаПериодСписочногоСостава;
			Иначе
				СтрокаШР = ТаблицаДанныхОтчета.Добавить();	
				ЗаполнитьЗначенияСвойств(СтрокаШР,СтрокаЧисленности);
				СтрокаШР.КодКатегорииПерсонала 	= СтрокаЧисленности.Должность_СтрокаОтчетностиФормы14_КодКатегорииПерсонала;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	ТаблицаДанныхОтчета.Свернуть("КодКатегорииПерсонала","КоличествоСтавок,КоличествоЗанятыхСтавок,СписочнаяЧисленностьНаКонецПериода,СреднесписочнаяЧисленностьЗаПериод,СреднесписочнаяЧисленность,СреднесписочнаяЧисленностьЗаПериод");
	
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаДанныхОтчета", ТаблицаДанныхОтчета);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанныхОтчета.КодКатегорииПерсонала,
	|	ТаблицаДанныхОтчета.КоличествоСтавок,
	|	ТаблицаДанныхОтчета.КоличествоЗанятыхСтавок,
	|	ТаблицаДанныхОтчета.СписочнаяЧисленностьНаКонецПериода,
	|	ТаблицаДанныхОтчета.СреднесписочнаяЧисленность КАК Среднесписочная
	|ПОМЕСТИТЬ ВТТаблицаДанныхОтчета
	|ИЗ &ТаблицаДанныхОтчета КАК ТаблицаДанныхОтчета
	|;	
	|
	|ВЫБРАТЬ
	|		ДанныеУчета.Раздел2_СТР20Гр4,
	|		ДанныеУчета.Раздел2_СТР21Гр4,
	|		ДанныеУчета.Раздел2_СТР22Гр4,
	|		ДанныеУчета.Раздел2_СТР23Гр4,
	|		ДанныеУчета.Раздел2_СТР24Гр4,
	|		ДанныеУчета.Раздел2_СТР25Гр4,
	|		(ДанныеУчета.Раздел2_СТР20Гр4 + ДанныеУчета.Раздел2_СТР21Гр4 + ДанныеУчета.Раздел2_СТР22Гр4 + ДанныеУчета.Раздел2_СТР23Гр4 + ДанныеУчета.Раздел2_СТР24Гр4 + ДанныеУчета.Раздел2_СТР25Гр4) КАК Раздел2_СТР26Гр4,
	|		ДанныеУчета.Раздел2_СТР20Гр5,
	|		ДанныеУчета.Раздел2_СТР21Гр5,
	|		ДанныеУчета.Раздел2_СТР22Гр5,
	|		ДанныеУчета.Раздел2_СТР23Гр5,
	|		ДанныеУчета.Раздел2_СТР24Гр5,
	|		ДанныеУчета.Раздел2_СТР25Гр5,
	|		(ДанныеУчета.Раздел2_СТР20Гр5 + ДанныеУчета.Раздел2_СТР21Гр5 + ДанныеУчета.Раздел2_СТР22Гр5 + ДанныеУчета.Раздел2_СТР23Гр5 + ДанныеУчета.Раздел2_СТР24Гр5 + ДанныеУчета.Раздел2_СТР25Гр5) КАК Раздел2_СТР26Гр5,
	|		ДанныеУчета.Раздел2_СТР20Гр6,
	|		ДанныеУчета.Раздел2_СТР21Гр6,
	|		ДанныеУчета.Раздел2_СТР22Гр6,
	|		ДанныеУчета.Раздел2_СТР23Гр6,
	|		ДанныеУчета.Раздел2_СТР24Гр6,
	|		ДанныеУчета.Раздел2_СТР25Гр6,	
	|		(ДанныеУчета.Раздел2_СТР20Гр6 + ДанныеУчета.Раздел2_СТР21Гр6 + ДанныеУчета.Раздел2_СТР22Гр6 + ДанныеУчета.Раздел2_СТР23Гр6 + ДанныеУчета.Раздел2_СТР24Гр6 + ДанныеУчета.Раздел2_СТР25Гр6) КАК Раздел2_СТР26Гр6
	|ИЗ	
	|	(ВЫБРАТЬ
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжность""
	|					ТОГДА Данные.КоличествоСтавок
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР20Гр4,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА Данные.КоличествоСтавок
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР21Гр4,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ОтдельнаяДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА Данные.КоличествоСтавок
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР22Гр4,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьИногоВидаФедеральнойГосударственнойСлужбы""
	|					ТОГДА Данные.КоличествоСтавок
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР23Гр4,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""НеЯвляетсяДолжностьюГосударственнойСлужбы""
	|					ТОГДА Данные.КоличествоСтавок
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР24Гр4,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжностьНовойСистемыОплатыТруда""
	|					ТОГДА Данные.КоличествоСтавок
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР25Гр4,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжность""
	|					ТОГДА ЕСТЬNULL(Данные.СписочнаяЧисленностьНаКонецПериода, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР20Гр5,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.СписочнаяЧисленностьНаКонецПериода, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР21Гр5,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ОтдельнаяДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.СписочнаяЧисленностьНаКонецПериода, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР22Гр5,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьИногоВидаФедеральнойГосударственнойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.СписочнаяЧисленностьНаКонецПериода, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР23Гр5,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""НеЯвляетсяДолжностьюГосударственнойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.СписочнаяЧисленностьНаКонецПериода, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР24Гр5,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжностьНовойСистемыОплатыТруда""
	|					ТОГДА ЕСТЬNULL(Данные.СписочнаяЧисленностьНаКонецПериода, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР25Гр5,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжность""
	|					ТОГДА ЕСТЬNULL(Данные.Среднесписочная, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР20Гр6,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.Среднесписочная, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР21Гр6,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ОтдельнаяДолжностьГосударственнойГражданскойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.Среднесписочная, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР22Гр6,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ДолжностьИногоВидаФедеральнойГосударственнойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.Среднесписочная, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР23Гр6,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""НеЯвляетсяДолжностьюГосударственнойСлужбы""
	|					ТОГДА ЕСТЬNULL(Данные.Среднесписочная, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР24Гр6,
	|		СУММА(ВЫБОР
	|				КОГДА Данные.КодКатегорииПерсонала = ""ГосударственнаяДолжностьНовойСистемыОплатыТруда""
	|					ТОГДА ЕСТЬNULL(Данные.Среднесписочная, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Раздел2_СТР25Гр6	
	|	ИЗ
	|		ВТТаблицаДанныхОтчета КАК Данные
	|) КАК ДанныеУчета";
		
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Возврат Результат.Выбрать();
	
КонецФункции

Процедура СформироватьОтчетФорма14С(ТаблицаОтчета, Организация, ДатаНачала, ДатаОкончания)
	
	Точность = 4;
	
	Макет = ПолучитьМакет("Форма14С_по_259н");
			
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Если Точность = 1 Тогда
		Шапка.Параметры.ЕдиницаИзмерения = "Рубль";
	ИначеЕсли Точность = 4 Тогда
		Шапка.Параметры.ЕдиницаИзмерения = "Тысяча рублей";
	ИначеЕсли Точность = 7 Тогда
		Шапка.Параметры.ЕдиницаИзмерения = "Миллион рублей";
	КонецЕсли;
	Шапка.Параметры.Организация = Организация.НаименованиеПолное;
	
	ТаблицаОтчета.Вывести(Шапка);
	
	ВыборкаДанных = ПолучитьДанныеПоФорме14С_Расходы(Организация, ДатаНачала, ДатаОкончания);
	
	ВывестиРаздел(ТаблицаОтчета, ВыборкаДанных, 1, Точность-1, Макет);	
	ТаблицаОтчета.ВывестиГоризонтальныйРазделительСтраниц();		
	
	ВыборкаЧисленность = ПолучитьДанныеПоФорме14С_Численность(Организация, ДатаНачала, ДатаОкончания);
	ВывестиРаздел(ТаблицаОтчета, ВыборкаЧисленность, 2, 0, Макет);
	ТаблицаОтчета.ВывестиГоризонтальныйРазделительСтраниц();
		
	ТаблицаОтчета.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТаблицаОтчета.Автомасштаб        = Истина;
	ТаблицаОтчета.ПолеСлева          = 0;
	ТаблицаОтчета.ПолеСправа         = 0;
	ТаблицаОтчета.Защита             = Ложь;
	ТаблицаОтчета.ТолькоПросмотр     = Истина;	
	
КонецПроцедуры 


#КонецОбласти

#КонецЕсли