////////////////////////////////////////////////////////////////////////////////
// Подсистема "Тарификационная отчетность в медицине".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область Должности

Процедура ДобавитьПолеВвода(Форма, ГруппаФормы, ОписаниеСвойства, ПрефиксПутиКДанным = Неопределено, ВариантОтображениеПодсказки = Неопределено, ТолькоПросмотр = Ложь)
	
	Если НЕ Форма.Элементы.Найти(ОписаниеСвойства.Имя) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеВвода 				= Форма.Элементы.Вставить(ОписаниеСвойства.Имя, Тип("ПолеФормы"), ГруппаФормы);
	ПолеВвода.ПутьКДанным 	= ПрефиксПутиКДанным + ?(ПрефиксПутиКДанным = Неопределено, "", ".") + ОписаниеСвойства.Имя;
	
	ПолеВвода.Вид 			= ВидПоляФормы.ПолеВвода;
	ПолеВвода.РастягиватьПоГоризонтали   = Истина;
	
	ПолеВвода.Заголовок 	= ОписаниеСвойства.Синоним;
	ПолеВвода.Подсказка 	= ОписаниеСвойства.Подсказка;
	
	Если НЕ ВариантОтображениеПодсказки = Неопределено Тогда
		ПолеВвода.ОтображениеПодсказки = ВариантОтображениеПодсказки;
	КонецЕсли;
	
	ПолеВвода.ТолькоПросмотр = Форма.ТолькоПросмотр ИЛИ ТолькоПросмотр;
	
КонецПроцедуры

Процедура ГруппаКатегорииДополнитьФорму(Форма, ТолькоПросмотр = Ложь) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТарификационныеГруппыДолжностейМедРаботников", Новый ОписаниеТипов("РегистрСведенийМенеджерЗаписи.ТарификационныеГруппыДолжностейМедРаботников"),,,Истина));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	ГруппаФормы = Форма.Элементы.Найти("ГруппаКатегории");
	ОписанияРесурсов = Метаданные.РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.Ресурсы;
	ПрефиксПутиКДанным = "ТарификационныеГруппыДолжностейМедРаботников";
	
	ДобавитьПолеВвода(Форма, ГруппаФормы, ОписанияРесурсов.Найти("ТарификационнаяГруппа"), ПрефиксПутиКДанным, ОтображениеПодсказки.Кнопка, ТолькоПросмотр);
	 
КонецПроцедуры

Процедура ПрочитатьДополнительныеДанныеДолжности(Форма, Должность, ЗначениеКопирования = Неопределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Должность = Должность;
	МенеджерЗаписи.Прочитать();
	
	Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
		Выборка = РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.Выбрать(Новый Структура("Должность", ЗначениеКопирования));
		Если Выборка.Следующий() Тогда 
			МенеджерЗаписи.ТарификационнаяГруппа = Выборка.ТарификационнаяГруппа;
		КонецЕсли;
	КонецЕсли;

	ЗначениеВДанныеФормы(МенеджерЗаписи, Форма.ТарификационныеГруппыДолжностейМедРаботников);
	
КонецПроцедуры

Процедура ЗаписатьДополнительныеДанныеДолжности(Форма, Ссылка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Форма.ТарификационныеГруппыДолжностейМедРаботников);
	МенеджерЗаписи.Должность = Ссылка;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ШтатноеРасписание

Процедура ПриПолученииВнешнихДанныхПозицииШтатногоРасписания(Форма, ДанныеПозиции) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Должность = ДанныеПозиции.ПозицияШтатногоРасписания;
	МенеджерЗаписи.ТарификационнаяГруппа = ДанныеПозиции.ТарификационнаяГруппа;
	
	ЗначениеВДанныеФормы(МенеджерЗаписи, Форма.ТарификационныеГруппыДолжностейМедРаботников);
	
КонецПроцедуры

Процедура ПоместитьТарификационнуюГруппуВОписаниеПозиции(Форма, ОписаниеПозиции) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеПозиции.Вставить("ТарификационнаяГруппа", Форма.ТарификационныеГруппыДолжностейМедРаботников.ТарификационнаяГруппа);
	
КонецПроцедуры

Процедура ДополнитьОписаниеПозицииШтатногоРасписания(ДанныеПозиции) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПозиции.Вставить("ТарификационнаяГруппа");
	
КонецПроцедуры

Процедура ПередЗаписьюДокументовИзмененияШтатногоРасписания(Объект) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаПозиции Из Объект.Позиции Цикл
		
		НаборЗаписей = РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Должность.Установить(СтрокаПозиции.Позиция);
		НаборЗаписей.Прочитать();
		
		Если ЗначениеЗаполнено(СтрокаПозиции.ТарификационнаяГруппа) Тогда
			
			Если НаборЗаписей.Количество() = 0 Тогда
				Запись = НаборЗаписей.Добавить();
			Иначе
				Если СтрокаПозиции.ТарификационнаяГруппа = НаборЗаписей[0].ТарификационнаяГруппа Тогда
					Продолжить;
				КонецЕсли;
				Запись = НаборЗаписей[0];
			КонецЕсли;
			
			Запись.Должность = СтрокаПозиции.Позиция;
			Запись.ТарификационнаяГруппа = СтрокаПозиции.ТарификационнаяГруппа;
			
		Иначе
			
			Если НаборЗаписей.Количество() = 0 Тогда
				Продолжить;
			Иначе
				НаборЗаписей.Удалить(НаборЗаписей[0]);
			КонецЕсли;
			
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьТарификационнуюГруппуПоДолжности(Форма, Должность) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;

	МенеджерЗаписи = РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Должность = Должность;
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Должность = Форма.Объект.Ссылка;
		ЗаполнитьЗначенияСвойств(Форма.ТарификационныеГруппыДолжностейМедРаботников, МенеджерЗаписи, "ТарификационнаяГруппа");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПоказателиРасчетаЗарплаты

Процедура ГруппаСоответствиеДополнитьФорму(Форма) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	
	Элементы = Форма.Элементы;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВидПоказателяТарификации", Новый ОписаниеТипов("ПеречислениеСсылка.ПоказателиТарификацииМедРаботников"),,,Истина));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЯвляетсяПоказателемТарификации", Новый ОписаниеТипов("Булево"),,,Истина));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	Если Элементы.Найти("ЯвляетсяПоказателемТарификации") = Неопределено Тогда
		
		ГруппаВидаТарифнойСтавки = Элементы.Найти("ВидТарифнойСтавкиГруппа");
		ГруппаВидаТарифнойСтавки.Объединенная = Ложь;

		ГруппаТипаПоказателяТарификации = Элементы.Найти("ВидПоказателяТарификацииГруппа"); 
	
		ФлажокЯвляетсяПоказателемТарификации = Элементы.Добавить("ЯвляетсяПоказателемТарификации", Тип("ПолеФормы"), ГруппаТипаПоказателяТарификации);
		ФлажокЯвляетсяПоказателемТарификации.ПутьКДанным = "ЯвляетсяПоказателемТарификации";
		ФлажокЯвляетсяПоказателемТарификации.Заголовок = НСтр("ru = 'Является показателем тарификации'");
		ФлажокЯвляетсяПоказателемТарификации.Вид = ВидПоляФормы.ПолеФлажка;
		ФлажокЯвляетсяПоказателемТарификации.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		ФлажокЯвляетсяПоказателемТарификации.УстановитьДействие("ПриИзменении", "Подключаемый_ЯвляетсяПоказателемТарификацииПриИзменении");
		
		ПолеВидПоказателяТарификации = Элементы.Добавить("ВидПоказателяТарификации", Тип("ПолеФормы"), ГруппаТипаПоказателяТарификации);
		ПолеВидПоказателяТарификации.ПутьКДанным = "ВидПоказателяТарификации";
		ПолеВидПоказателяТарификации.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВидПоказателяТарификации.УстановитьДействие("ПриИзменении", "Подключаемый_ВидПоказателяТарификацииПриИзменении");
		ПолеВидПоказателяТарификации.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеВидПоказателяТарификации.РастягиватьПоГоризонтали = Ложь;
		ПолеВидПоказателяТарификации.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		ПолеВидПоказателяТарификации.Подсказка = НСтр("ru = 'Позволяет сопоставить показатель с показателем тарификационных списков (для заполнения в отчетах соответствующих колонок). 
			|Общий список настроек доступен по команде «Настройка показателей тарификации» в панели навигации раздела «Настройка».'");

	КонецЕсли;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		Выборка = РегистрыСведений.НастройкаПоказателейТарификацииМедРаботников.Выбрать(Новый Структура("Показатель",  Объект.Ссылка));
		Если Выборка.Следующий() Тогда 
			Форма.ВидПоказателяТарификации = Выборка.ПоказательТарификации;
		КонецЕсли;
		
		Форма.ЯвляетсяПоказателемТарификации = ЗначениеЗаполнено(Форма.ВидПоказателяТарификации);
		
	КонецЕсли;
	
	ТарификационнаяОтчетностьУчрежденийФМБАКлиентСервер.УстановитьЗначенияРеквизитовПоказателяТарификации(Форма);
			
КонецПроцедуры

Процедура ПоказательРасчетаЗарплатыПослеЗаписи(Форма) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;

	ТарификационнаяОтчетностьУчрежденийФМБАВызовСервера.ЗадатьСоответствиеПоказателяРасчетаЗарплатыПоказателюТарификации(Форма.Объект.Ссылка, Форма.ВидПоказателяТарификации);

КонецПроцедуры

#КонецОбласти

#Область НастройкиВариантовОтчетов

// Содержит настройки размещения вариантов отчетов в панели отчетов.
// Описание см. ЗарплатаКадрыВариантыОтчетов.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ТарификационныеСпискиРаботниковУчрежденийФМБА);

КонецПроцедуры

#КонецОбласти	

#Область БлокФункцийПервоначальногоЗаполненияИОбновленияИБ

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.11";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("4f65ddd5-9141-4838-a6fb-c16b37b92ff7");
	Обработчик.Процедура = "РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.ДобавитьЗаписи";
	Обработчик.Комментарий = НСтр("ru = 'Добавление записей в регистр ""Тарификационные группы должностей медицинских работников"".
	| До завершения обработки рекомендуется воздержаться от редактирования элементов ""Штатного расписания"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.2.11";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("0b73b004-26ba-467f-a081-fcfbf2185690");
	Обработчик.Процедура = "ТарификационнаяОтчетностьУчрежденийФМБА.ЗаполнитьТарификационнуюГруппуВСтрокахПозицийШР";
	Обработчик.Комментарий = НСтр("ru = 'Заполнение нового реквизита ""Тарификационная группа"" в документах ввода позиций ШР.
	| До завершения обработки рекомендуется воздержаться от редактирования этих документов, а также формирования отчета
	| ""Тарификационные списки работников учреждений ФМБА"".'");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПодключаемыеХарактеристики") Тогда
		Обработчик = Обработчики.Добавить();
		Обработчик.Версия = "3.1.4.22";
		Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
		Обработчик.Идентификатор = Новый УникальныйИдентификатор("922a9667-fb94-4901-a20a-e539fa3b9678");
		Обработчик.Процедура = " ТарификационнаяОтчетностьУчрежденийФМБА.ЗаполнитьПодключаемыеХарактеристики";
		Обработчик.Комментарий = НСтр("ru = 'Обновление подключаемых характеристик'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТарификационнуюГруппуВСтрокахПозицийШР(ПараметрыОбновления = НеОпределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Должности.Ссылка КАК Должность,
	|	ТарификационныеГруппы.ТарификационнаяГруппа КАК ТарификационнаяГруппа
	|ПОМЕСТИТЬ ВТТарификационныеГруппы
	|ИЗ
	|	Справочник.Должности КАК Должности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарификационныеГруппыДолжностейМедРаботников КАК ТарификационныеГруппы
	|		ПО Должности.Ссылка = ТарификационныеГруппы.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтатноеРасписание.Ссылка КАК Должность,
	|	ЕСТЬNULL(ТарификационныеГруппыДолжностейМедРаботников.ТарификационнаяГруппа, ТарификационныеГруппы.ТарификационнаяГруппа) КАК ТарификационнаяГруппа
	|ПОМЕСТИТЬ ВТТарификационныеГруппыПозиций
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТарификационныеГруппы КАК ТарификационныеГруппы
	|		ПО ШтатноеРасписание.Должность = ТарификационныеГруппы.Должность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификационныеГруппыДолжностейМедРаботников КАК ТарификационныеГруппыДолжностейМедРаботников
	|		ПО (ТарификационныеГруппыДолжностейМедРаботников.Должность = ШтатноеРасписание.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УтверждениеШтатногоРасписанияПозиции.Ссылка,
	|	УтверждениеШтатногоРасписанияПозиции.НомерСтроки,
	|	УтверждениеШтатногоРасписанияПозиции.Позиция,
	|	ТарификационныеГруппыПозиций.ТарификационнаяГруппа КАК ТарификационнаяГруппа,
	|	УтверждениеШтатногоРасписанияПозиции.Ссылка.МесяцВступленияВСилу КАК ДатаВступленияВСилу
	|ПОМЕСТИТЬ ВТИзмененияШтатногоРасписания
	|ИЗ
	|	Документ.УтверждениеШтатногоРасписания.Позиции КАК УтверждениеШтатногоРасписанияПозиции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТарификационныеГруппыПозиций КАК ТарификационныеГруппыПозиций
	|		ПО УтверждениеШтатногоРасписанияПозиции.Позиция = ТарификационныеГруппыПозиций.Должность
	|ГДЕ
	|	НЕ УтверждениеШтатногоРасписанияПозиции.Ссылка.ПометкаУдаления
	|	И УтверждениеШтатногоРасписанияПозиции.ТарификационнаяГруппа = ЗНАЧЕНИЕ(Справочник.ТарификационныеГруппыМедРаботников.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеШтатногоРасписанияПозиции.Ссылка,
	|	ИзменениеШтатногоРасписанияПозиции.НомерСтроки,
	|	ИзменениеШтатногоРасписанияПозиции.Позиция,
	|	ТарификационныеГруппыПозиций.ТарификационнаяГруппа,
	|	ИзменениеШтатногоРасписанияПозиции.Ссылка.ДатаВступленияВСилу
	|ИЗ
	|	Документ.ИзменениеШтатногоРасписания.Позиции КАК ИзменениеШтатногоРасписанияПозиции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТарификационныеГруппыПозиций КАК ТарификационныеГруппыПозиций
	|		ПО ИзменениеШтатногоРасписанияПозиции.Позиция = ТарификационныеГруппыПозиций.Должность
	|ГДЕ
	|	НЕ ИзменениеШтатногоРасписанияПозиции.Ссылка.ПометкаУдаления
	|	И ИзменениеШтатногоРасписанияПозиции.ТарификационнаяГруппа = ЗНАЧЕНИЕ(Справочник.ТарификационныеГруппыМедРаботников.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100
	|	ИзмененияШтатногоРасписания.Ссылка КАК Ссылка,
	|	ИзмененияШтатногоРасписания.ДатаВступленияВСилу
	|ИЗ
	|	ВТИзмененияШтатногоРасписания КАК ИзмененияШтатногоРасписания
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИзмененияШтатногоРасписания.ДатаВступленияВСилу УБЫВ";
	
	Если ПараметрыОбновления = НеОпределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 100", "");
	КонецЕсли;
	
	МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если МассивДокументов.Количество() = 0 Тогда 
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	Иначе
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ИзмененияШтатногоРасписания.НомерСтроки КАК НомерСтроки,
		|	ИзмененияШтатногоРасписания.Ссылка КАК Ссылка,
		|	ИзмененияШтатногоРасписания.ТарификационнаяГруппа КАК ТарификационнаяГруппа,
		|	ИзмененияШтатногоРасписания.ДатаВступленияВСилу КАК ДатаВступленияВСилу
		|ИЗ
		|	ВТИзмененияШтатногоРасписания КАК ИзмененияШтатногоРасписания
		|ГДЕ
		|	ИзмененияШтатногоРасписания.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаВступленияВСилу УБЫВ,
		|	Ссылка,
		|	НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
			
			Ссылка = Выборка.Ссылка;
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ." + Ссылка.Метаданные().Имя, "Ссылка", Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Ссылка.ПолучитьОбъект();
			
			Пока Выборка.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ДокументОбъект.Позиции[Выборка.НомерСтроки - 1].ТарификационнаяГруппа) Тогда
					ДокументОбъект.Позиции[Выборка.НомерСтроки - 1].ТарификационнаяГруппа = Выборка.ТарификационнаяГруппа;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодключаемыеХарактеристики(ПараметрыОбновления = Неопределено) Экспорт
	
	ИспользоватьВыгрузкуВФедеральныйРегистрМедицинскихРаботников = Константы.ИспользоватьВыгрузкуВФедеральныйРегистрМедицинскихРаботников.Получить();
	
	РегистрыСведений.ТарификационныеГруппыДолжностейМедРаботников.ОбновитьПодключаемыеХарактеристики(
		ИспользоватьВыгрузкуВФедеральныйРегистрМедицинскихРаботников, ПараметрыОбновления);
	
КонецПроцедуры

#КонецОбласти

#Область ИсточникСведенийОШтатномРасписании

Процедура ДополнитьОписаниеИсточниковСведенийОШтатномРасписании(ОписаниеИсточников) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарификационнуюОтчетностьУчрежденийФМБА") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьОписаниеСведенийТарификационнойГруппы(ОписаниеИсточников);
	
КонецПроцедуры

Процедура ДобавитьОписаниеСведенийТарификационнойГруппы(ОписаниеИсточников)
	
	ИдентификаторИсточника = "РегистрСведенийТарификационныеГруппыДолжностейМедРаботников";
	ОписаниеИсточника = УправлениеШтатнымРасписанием.ОписаниеИсточникаСведений(ОписаниеИсточников, ИдентификаторИсточника);
	
	ИмяДанныхШР = "ТарификационнаяГруппа";
	УправлениеШтатнымРасписанием.ДобавитьОписаниеСведенийШтатногоРасписания(ОписаниеИсточников, ИмяДанныхШР, ИдентификаторИсточника);
	
	Если ОписаниеИсточников.ЗначенияОпций.ИспользоватьИсториюИзмененияШтатногоРасписания Тогда
		
		ОписаниеИсточника.ТекстСоединений = "
			|	{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификационныеГруппыДолжностейМедРаботников КАК РегистрСведенийТарификационныеГруппыДолжностейМедРаботников
			|		ПО РегистрСведенийИсторияИспользованияШтатногоРасписания.ПозицияШтатногоРасписания = РегистрСведенийТарификационныеГруппыДолжностейМедРаботников.Должность}";
		
	Иначе
		
		ОписаниеИсточника.ТекстСоединений = "
			|	{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарификационныеГруппыДолжностейМедРаботников КАК РегистрСведенийТарификационныеГруппыДолжностейМедРаботников
			|		ПО СправочникШтатноеРасписание.Ссылка = РегистрСведенийТарификационныеГруппыДолжностейМедРаботников.Должность}";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
