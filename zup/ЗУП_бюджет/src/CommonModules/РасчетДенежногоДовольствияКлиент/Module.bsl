////////////////////////////////////////////////////////////////////////////////
// Подсистема «Учет сохраняемого денежного Довольствия».
// 
// Клиентские процедуры и функции.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Процедура открывает общую форму, для просмотра и редактирования сохраняемого денежного Довольствия.
//
// Параметры:
//	Объект				- основной реквизит формы документа.
//	ИмяДокумента		- имя документа.
//	Владелец			- элемент, в который необходимо возвратить результат оповещения.
//	ОписаниеДокумента	- структура с описанием документа.
//
// Возвращаемое значение
//	Форма при закрытии отправляет оповещение владельцу, с которым передается содержимое данных для расчета сохраняемого
//	денежного Довольствия.
//
Процедура ОткрытьФормуВводаСохраняемогоДенежногоДовольствия(Объект, ИмяДокумента, НазначениеРасчетаСтрока, Владелец, ОповещениеЗавершения) Экспорт
	
	Если Не ПараметрыЗаполненыКорректно(Объект) Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Неопределено);
		КонецЕсли;	
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Владелец);
	ДополнительныеПараметры.Вставить("НазначениеРасчетаСтрока", НазначениеРасчетаСтрока);
	ДополнительныеПараметры.Вставить("НомерТекущейСтроки", Неопределено);
	ДополнительныеПараметры.Вставить("ИмяКолонкиСДД", Неопределено);
	
	ЗаполнитьЗначенияСвойств(ДополнительныеПараметры,Объект);
	
	Если ОповещениеЗавершения <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуВводаСохраняемогоДенежногоДовольствияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Объект",		Объект);
	ПараметрыФормы.Вставить("ИмяДокумента",	ИмяДокумента);
	ПараметрыФормы.Вставить("НазначениеРасчетаСтрока", НазначениеРасчетаСтрока);
	ПараметрыФормы.Вставить("АдресПараметров", АдресДанныхДляРасчетаСохраняемогоДенежногоДовольствия(Объект, Объект.ОписаниеДокумента, НазначениеРасчетаСтрока));
	
	ОткрытьФорму("ОбщаяФорма.ВводДанныхДляРасчетаСохраняемогоДенежногоДовольствия", ПараметрыФормы, Владелец, , , , Оповещение);
	
КонецПроцедуры

// Открывает форму ручного ввода данных общего среднего заработка.
// 
Процедура ОткрытьФормуВводаСреднегоДенежногоДовольствия(ПараметрыРедактирования, ВладелецФормы, ОповещениеЗавершения = Неопределено) Экспорт
												 
	Если Не ПараметрыЗаполненыКорректно(ПараметрыРедактирования) Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Неопределено);
		КонецЕсли;	
	КонецЕсли;	
	
	ОткрытьФорму("ОбщаяФорма.ВводДанныхДляРасчетаСреднегоДенежногоДовольствия", ПараметрыРедактирования, ВладелецФормы, , , , ОповещениеЗавершения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры


// Процедура предназначена для обработки команды расшифровки значения показателя 
// денежного довольствия в форме расчетного документа.
//
// Параметры:
//	- Форма - форма документа
//	- ОписаниеТаблицы - структура с описанием таблиц документа.
//	- Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка -
//		 	параметры обработчика выбора таблицы формы.
//	- ПересчитыватьСотрудника - булево, признак для определения необходимости 
//			пересчитывать результат по сотруднику после выполнения расшифровки.
//
Процедура РасшифровкаЗначенияПоказателяДенежногоДовольствия(Форма, ОписаниеТаблицы, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если СтрНайти(Поле.Имя, "КомандаРасшифровки") = 0 Тогда
		// Это не поле команды расшифровки.
		Возврат;
	КонецЕсли;
	
	// Если для таблицы контролируется заполнение значений показателей,
	// и если значения интерактивно изменялись - то форму нужно открыть только для просмотр.
	ИспользуетсяФиксЗаполнение = ДанныеСтроки.Свойство("ФиксЗаполнение");
	ТолькоПросмотрДенежногоДовольствия = ИспользуетсяФиксЗаполнение И ДанныеСтроки["ФиксЗаполнение"];
	
	// Получаем шаблон для последующего доступа к полям показателя.
	ИмяПоляШаблон = СтрЗаменить(Сред(Поле.Имя, СтрНайти(Поле.Имя, "КомандаРасшифровки")), "КомандаРасшифровки", "%1");
	
	// Проверяем, что это расшифровка показателя среднего заработка.
	Показатель = ДанныеСтроки[СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ИмяПоляШаблон, "Показатель")];
	ПоказателиДенежногоДовольствия	= РасчетДенежногоДовольствияКлиентСервер.ПоказателиДенежногоДовольствия();
	Если ПоказателиДенежногоДовольствия.Найти(Показатель) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяПоляЗначения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ИмяПоляШаблон, "Значение");
	ДенежноеДовольствие = ДанныеСтроки[ИмяПоляЗначения];
	
	СтруктураОбъекта = Форма.ПодготовитьСтруктуруОбъектаДляРасчетаДенежногоДовольствия(ДанныеСтроки.Сотрудник, ДанныеСтроки.НомерСтроки);
	СтруктураОбъекта.СохраняемоеДенежноеДовольствие = ДенежноеДовольствие;
	СтруктураОбъекта.Вставить("ИмяКолонкиСДД",СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ИмяПоляШаблон, "Значение"));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("ОписаниеТаблицы", ОписаниеТаблицы);
	ДополнительныеПараметры.Вставить("ДанныеСтроки", ДанныеСтроки);
	ДополнительныеПараметры.Вставить("ИспользуетсяФиксЗаполнение", ИспользуетсяФиксЗаполнение);
	ДополнительныеПараметры.Вставить("ОписаниеДокумента", СтруктураОбъекта.ОписаниеДокумента);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьДенежноеДовольствиеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	РасчетДенежногоДовольствияКлиент.ОткрытьФормуВводаСохраняемогоДенежногоДовольствия(СтруктураОбъекта, "ОплатаСверхурочныхВоеннослужащим","СохраняемоеДенежноеДовольствие", Форма, Оповещение);
	
	// команда выполнена
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

Процедура ОткрытьДенежноеДовольствиеЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт

	Форма 				= ДополнительныеПараметры.Форма;
	Объект 				= Форма.Объект;
	ОписаниеТаблицы 	= ДополнительныеПараметры.ОписаниеТаблицы;
	ДанныеСтроки 		= ДополнительныеПараметры.ДанныеСтроки;
	ОписаниеДокумента 	= ДополнительныеПараметры.ОписаниеДокумента;
	
	Если РезультатРедактирования <> Неопределено Тогда
		
		РасчетЗарплатыРасширенныйКлиент.ДобавитьИзмененныеДанные(
			Форма.ИзмененныеДанные,
			"Начисления",
			,
			ДанныеСтроки.Сотрудник,
			Объект.ВидРасчета);
		
		РасчетЗарплатыКлиент.СтрокаРасчетаПриОкончанииРедактирования(Форма, ОписаниеТаблицы, Истина, , ОписаниеДокумента);
		
		ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция АдресДанныхДляРасчетаСохраняемогоДенежногоДовольствия(Объект, ОписаниеДокумента, НазначениеРасчетаСтрока)
	
	СохраняемоеДенежноеДовольствие = Объект.СохраняемоеДенежноеДовольствие;
	МесячноеДенежноеДовольствие = 0;
	ЕжемесячныеДопВыплатыСохраняются = Ложь;
	
	ПараметрыДанных = Новый Структура;
	ПараметрыДанных.Вставить("ОписаниеДокумента", ОписаниеДокумента);
	ПараметрыДанных.Вставить("Организация", 							Объект.Организация);
	ПараметрыДанных.Вставить("Сотрудник", 								Объект.Сотрудник);
	ПараметрыДанных.Вставить("ПериодРасчета",							Объект[ОписаниеДокумента.МесяцНачисленияИмя]);
	ПараметрыДанных.Вставить("ДатаНачалаСобытия", 						Объект[ОписаниеДокумента.ДатаНачалаСобытияИмя]);
	ПараметрыДанных.Вставить("СохраняемоеДенежноеДовольствие", 			СохраняемоеДенежноеДовольствие);
	ПараметрыДанных.Вставить("МесячноеДенежноеДовольствие", 			МесячноеДенежноеДовольствие);
	ПараметрыДанных.Вставить("ДенежноеДовольствие", 					Объект.ДенежноеДовольствие);
	ПараметрыДанных.Вставить("ЕжемесячныеДопВыплатыСохраняются", 		ЕжемесячныеДопВыплатыСохраняются);
	
	Возврат ПоместитьВоВременноеХранилище(ПараметрыДанных, Объект.УникальныйИдентификатор);
	
КонецФункции

Процедура ОткрытьФормуВводаСохраняемогоДенежногоДовольствияЗавершение(АдресРезультата, ДополнительныеПараметры) Экспорт
	
	Если АдресРезультата <> Неопределено Тогда
		
		Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
		
		Объект = ДополнительныеПараметры.Форма.Объект; 
		ТЧДенежноеДовольствие = Объект.ДенежноеДовольствие;
		СтруктураПоиска = Новый Структура("Сотрудник");
		
		Для каждого ЗаписьДенежноеДовольствие Из Результат.ДенежноеДовольствие Цикл
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ЗаписьДенежноеДовольствие);
			УдаляемыеСтроки = ТЧДенежноеДовольствие.НайтиСтроки(СтруктураПоиска);
			Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
				ТЧДенежноеДовольствие.Удалить(УдаляемаяСтрока);
			КонецЦикла;
		КонецЦикла;
		
		Для каждого ЗаписьДенежноеДовольствие Из Результат.ДенежноеДовольствие Цикл
			ЗаполнитьЗначенияСвойств(ТЧДенежноеДовольствие.Добавить(), ЗаписьДенежноеДовольствие);
		КонецЦикла;
		
		Если ДополнительныеПараметры.НомерТекущейСтроки = Неопределено Тогда
			Объект.СохраняемоеДенежноеДовольствие = Результат.СохраняемоеДенежноеДовольствие;
		Иначе
			Объект.Начисления[ДополнительныеПараметры.НомерТекущейСтроки-1][ДополнительныеПараметры.ИмяКолонкиСДД] = Результат.СохраняемоеДенежноеДовольствие;
		КонецЕсли;	
		
		ДополнительныеПараметры.Форма.Модифицированность = Истина;
		
	КонецЕсли; 
	
	Если ДополнительныеПараметры.Свойство("ОповещениеЗавершения") Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения, АдресРезультата);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ПараметрыЗаполненыКорректно(Объект)
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Сотрудник не указан.'"));
		Возврат Ложь;
	КонецЕсли;	
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
