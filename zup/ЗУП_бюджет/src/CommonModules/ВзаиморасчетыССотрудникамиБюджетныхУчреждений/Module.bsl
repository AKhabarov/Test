
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает дату вступления в силу Приказ Минфина России от 30.03.2015 № 52н
//
// Возвращаемое значение:
//   Дата
//
Функция ДатаПриказаМинфина52н() Экспорт
	Возврат '20150101'
КонецФункции	

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции ведомостей на выплату зарплаты.

/// Печать
#Область Печать

Процедура ВедомостьВБанкДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расчетная ведомость (0504402).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504402";
	КомандаПечати.Представление = НСтр("ru = 'Расчетная ведомость (0504402)'");
	КомандаПечати.Порядок = 22;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ПериодРегистрации", ДатаПриказаМинфина52н(), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ВедомостьВБанкДобавитьКомандыПечати(КомандыПечати);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВедомостьВБанкПечать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504402") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504402", 
		"Расчетная ведомость (0504402)", 
		Печать0504402(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ВедомостьВБанкПечать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;	
		
КонецПроцедуры

Процедура ВедомостьВКассуДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расчетно-платежная ведомость (0504401).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504401";
	КомандаПечати.Представление = НСтр("ru = 'Расчетно-платежная ведомость (0504401)'");
	КомандаПечати.Порядок = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ПериодРегистрации", ДатаПриказаМинфина52н(), ВидСравненияКомпоновкиДанных.Меньше);
	
	// Расчетно-платежная ведомость (0504401) с 2015 года.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504401с2015";
	КомандаПечати.Представление = НСтр("ru = 'Расчетно-платежная ведомость (0504401)'");
	КомандаПечати.Порядок = 21;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ПериодРегистрации", ДатаПриказаМинфина52н(), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
	
	// Расчетная ведомость (0504402).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504402";
	КомандаПечати.Представление = НСтр("ru = 'Расчетная ведомость (0504402)'");
	КомандаПечати.Порядок = 22;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ПериодРегистрации", ДатаПриказаМинфина52н(), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
	
	// Платежная ведомость (0504403).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504403";
	КомандаПечати.Представление = НСтр("ru = 'Платежная ведомость (0504403)'");
	КомандаПечати.Порядок = 23;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ПериодРегистрации", ДатаПриказаМинфина52н(), ВидСравненияКомпоновкиДанных.Меньше);
	
	// Платежная ведомость (0504403) с 2015 года.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504403с2015";
	КомандаПечати.Представление = НСтр("ru = 'Платежная ведомость (0504403)'");
	КомандаПечати.Порядок = 24;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ПериодРегистрации", ДатаПриказаМинфина52н(), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ВедомостьВКассуДобавитьКомандыПечати(КомандыПечати);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВедомостьВКассуПечать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504401") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504401", 
		"Расчетно-платежная ведомость (0504401)", 
		Печать0504401(МассивОбъектов,
			ОбъектыПечати,
			"ПФ_MXL_0504401"));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504401с2015") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504401с2015",
		"Расчетно-платежная ведомость (0504401) с 2015 года",
		Печать0504401(МассивОбъектов,
			ОбъектыПечати,
			"ПФ_MXL_0504401с2015"));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504402") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504402", 
		"Расчетная ведомость (0504402)", 
		Печать0504402(МассивОбъектов, ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504403") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504403",
		"Платежная ведомость (0504403)",
		Печать0504403(МассивОбъектов,
			ОбъектыПечати,
			"ПФ_MXL_0504403"));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504403с2015") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_0504403с2015",
		"Платежная ведомость (0504403) с 2015 года",
		Печать0504403(МассивОбъектов,
			ОбъектыПечати,
			"ПФ_MXL_0504403с2015"));
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ВедомостьВКассуПечать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;	
		
КонецПроцедуры

Функция Печать0504401(МассивОбъектов, ОбъектыПечати, ИдентификаторВариантаОтчета = "ПФ_MXL_0504401с2015")
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		ПечатнаяФормаДокумента = УчетНачисленнойЗарплатыБюджетныхУчреждений.Печать0504401(ДокументСсылка, ИдентификаторВариантаОтчета);		
		
		Если ПервыйДокумент Тогда
			ДокументРезультат = ПечатнаяФормаДокумента;
			НомерСтрокиНачало = 1;
			ПервыйДокумент = Ложь;
		Иначе
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
			// Добавим очередную ведомость к результирующему табличному документу
			ДокументРезультат.Вывести(ПечатнаяФормаДокумента);
		КонецЕсли;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция Печать0504402(МассивОбъектов, ОбъектыПечати, ИдентификаторВариантаОтчета = "ПФ_MXL_0504402")
	
	Возврат Печать0504401(МассивОбъектов, ОбъектыПечати, ИдентификаторВариантаОтчета);
	
КонецФункции

Функция Печать0504403(МассивОбъектов, ОбъектыПечати, ИдентификаторВариантаОтчета = "ПФ_MXL_0504403с2015")
	
	НастройкиПечатныхФорм = ЗарплатаКадрыПовтИсп.НастройкиПечатныхФорм();
	
	Менеджер = Документы[МассивОбъектов[0].Метаданные().Имя];
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Если ИдентификаторВариантаОтчета = "ПФ_MXL_0504403с2015" Тогда
	
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежнаяВедомость_0504403с2015";
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_0504403с2015");

	Иначе
	
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежнаяВедомость_0504403";
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_0504403");
		
	КонецЕсли;
	
	ВалютаУчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();
	
	// получаем данные для печати
	ВыборкаШапок = Менеджер.ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = Менеджер.ВыборкаДляПечатиТаблицы(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаШапок.Следующий() Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		// выводим данные о документе
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаШапок);
		ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации);
		Если НастройкиПечатныхФорм.ВыводитьПолнуюИерархиюПодразделений И ЗначениеЗаполнено(ВыборкаШапок.Подразделение) Тогда
			ОбластьМакетаШапкаДокумента.Параметры.Подразделение = ВыборкаШапок.Подразделение.ПолноеНаименование();
		КонецЕсли;
		ОбластьМакетаШапкаДокумента.Параметры.Номер					= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаШапок.Номер, Истина, Истина);
		ОбластьМакетаШапкаДокумента.Параметры.Период				= Формат(ВыборкаШапок.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'");
		
		ОрганизацииИДаты = ЗарплатаКадрыРасширенный.ПараметрОрганизацииИДатыДляПолучитьИННиКППОрганизаций();
		СтрокаОрганизацииИДаты = ОрганизацииИДаты.Добавить();
		СтрокаОрганизацииИДаты.Организация = ВыборкаШапок.Организация;
		СтрокаОрганизацииИДаты.ДатаСведенийОрганизации = ВыборкаШапок.Дата;
		ОрганизацииИСведенияОНих = ЗарплатаКадрыРасширенный.ПолучитьИННиКППОрганизаций(ОрганизацииИДаты);
		СведенияОбОрганизации = ОрганизацииИСведенияОНих[ВыборкаШапок.Организация];
		
		Если ИдентификаторВариантаОтчета = "ПФ_MXL_0504403с2015" Тогда
			
			СведенияОбОрганизации.Свойство("ИНН", ОбластьМакетаШапкаДокумента.Параметры.ИНН);
			СведенияОбОрганизации.Свойство("КПП", ОбластьМакетаШапкаДокумента.Параметры.КПП);
			
		КонецЕсли;

		Если ВыборкаШапок.СуммаПоДокументу <> 0 Тогда
			ОбластьМакетаШапкаДокумента.Параметры.СуммаДок = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ВыборкаШапок.СуммаПоДокументу, ВалютаУчета);
		КонецЕсли;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаШапок); // Подвал документа.
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		Если ИдентификаторВариантаОтчета <> "ПФ_MXL_0504403с2015" Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
		
		// Выводим данные по строкам документа.
		НомерСтроки = 0;
		ВыборкаСтрок.Сбросить();
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Ссылка, "Ведомость") Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			ОбластьМакетаСтрока.Параметры.НомерСтроки = НомерСтроки;
			
			ОбластьМакетаСтрока.Параметры.ТабельныйНомер = 
				ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(ВыборкаСтрок.ТабельныйНомер, Истина, Истина);
				
			Если НастройкиПечатныхФорм.ВыводитьПолныеФИОВСписочныхПечатныхФормах Тогда
					
				ОбластьМакетаСтрока.Параметры.Физлицо = 
					СокрЛП(ВыборкаСтрок.Фамилия)
					+ ?(ПустаяСтрока(ВыборкаСтрок.Имя), "", " " + ВыборкаСтрок.Имя)
					+ ?(ПустаяСтрока(ВыборкаСтрок.Отчество), "", " " + ВыборкаСтрок.Отчество);
					
			Иначе
				ОбластьМакетаСтрока.Параметры.Физлицо = 
					ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(
						Новый Структура("Фамилия, Имя, Отчество", ВыборкаСтрок.Фамилия, ВыборкаСтрок.Имя, ВыборкаСтрок.Отчество));
			КонецЕсли;
		
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу.
			ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрок.Сумма;
			Итого = Итого + ВыборкаСтрок.Сумма;
			
		КонецЦикла; // по строкам документа
		
		Если ВыведеноСтрок > 0 Тогда 
			ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		КонецЕсли;
		
		// дополняем пустыми строками до конца страницы
		ОбщегоНазначенияБЗК.ОчиститьПараметрыТабличногоДокумента(ОбластьМакетаСтрока);
		ОбластиКонцаСтраницы = Новый Массив();
		ОбластиКонцаСтраницы.Добавить(ОбластьМакетаИтогПоСтранице);
		ОбластиКонцаСтраницы.Добавить(ОбластьМакетаПодвал);
		ОбщегоНазначенияБЗК.ДополнитьСтраницуТабличногоДокумента(ТабличныйДокумент, ОбластьМакетаСтрока, ОбластиКонцаСтраницы);  
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);
		
	КонецЦикла; // по документам
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВедомостьПрочихДоходовВКассуДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Платежная ведомость (0504403) с 2015 года.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ПФ_MXL_0504403с2015";
	КомандаПечати.Представление = НСтр("ru = 'Платежная ведомость (0504403)'");
	КомандаПечати.Порядок = 24;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "РаботаВБюджетномУчреждении";
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти