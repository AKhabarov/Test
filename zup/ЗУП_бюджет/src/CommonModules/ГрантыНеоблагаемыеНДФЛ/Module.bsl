////////////////////////////////////////////////////////////////////////////////
// Подсистема "Гранты необлагаемые НДФЛ".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ДатыЗапретаИзмененияДанных

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СписокПолучателейГранта", "Месяц",	"Зарплата", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПолучателиГрантов", "Период",	"Зарплата", "");
	
КонецПроцедуры

#КонецОбласти

// Дополняет таблицу начислений колонкой СуммаЗаСчетГрантов, рассчитывая ее значение.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит таблицу начислений и таблицу с бухучетом начислений.
//	ИмяВТНачисления - Строка - имя таблицы с начислениями.
//	ИмяВТБухучетНачислений - Строка - имя таблицы с бухучетом начислений.
//
Процедура ВыделитьСуммуЗаСчетГрантовИзНачислений(МенеджерВременныхТаблиц, ИмяВТНачисления = "ВТНачисления", ИмяВТБухучетНачислений = "ВТНачисленияСРаспределением") Экспорт
	
	Если Не СоздатьВТПолучателиГрантов(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений) Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТПолучателиГрантов");
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КатегорииНачислений", КатегорииНачисленийВыплачиваемыеИзГрантов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Территория
	|		ИНАЧЕ БухучетНачислений.Подразделение
	|	КОНЕЦ КАК Территория,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТВыплачиваемыеИзГрантовНачисления
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (БухучетНачислений.Начисление.КатегорияНачисленияИлиНеоплаченногоВремени В (&КатегорииНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Территория
	|		ИНАЧЕ БухучетНачислений.Подразделение
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачислений", ИмяВТБухучетНачислений);
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТВыплачиваемыеИзГрантовНачисления");
	
	ПоляИсключения = Новый Массив;
	ПоляИсключения.Добавить("ИдентификаторСтроки");
	ПоляИсключения.Добавить("СуммаЗаСчетГрантов");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	ЕСТЬNULL(ВыплачиваемыеИзГрантовНачисления.Сумма, 0) КАК СуммаЗаСчетГрантов,
	|	&ИменаПолей
	|ПОМЕСТИТЬ ВТОтфильтрованныеНачисления
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыплачиваемыеИзГрантовНачисления КАК ВыплачиваемыеИзГрантовНачисления
	|		ПО Начисления.ИдентификаторСтроки = ВыплачиваемыеИзГрантовНачисления.ИдентификаторСтроки
	|			И Начисления.Подразделение = ВыплачиваемыеИзГрантовНачисления.Территория";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисления", ИмяВТНачисления);
	ЗарплатаКадры.ЗаполнитьИменаПолейВТ(Запрос.Текст, МенеджерВременныхТаблиц, ИмяВТНачисления, "Начисления", ПоляИсключения);
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить(ИмяВТНачисления);
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.*
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	ВТОтфильтрованныеНачисления КАК Начисления";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисления", ИмяВТНачисления);
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТОтфильтрованныеНачисления");
	
КонецПроцедуры

// Исключает из доходов начисления по договорам подряда выплачиваемые из грантов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит таблицу с бухучетом начислений.
//	Доходы - ТаблицаЗначений - фильтруемая таблица начислений, как минимум, с колонками:
//		* ИдентификаторСтроки
//		* СуммаВычета
//		* СуммаДохода
//	ДополнительныеПараметры - Структура - содержит поля:
//		* ИмяВТБухучетНачислений - Строка - имя таблицы с бухучетом фильтруемых начислений.
//		* ИмяКолонкиИдентификаторСтроки - Строка - имя колонки из таблицы Доходы со значением ИдентификаторСтроки.
//		* ИмяКолонкиСуммаДохода - имя колонки из таблицы Доходы со значением СуммаДохода.
//
Процедура ОтобратьДоходыПоДоговорамПодрядаОблагаемыеНДФЛ(МенеджерВременныхТаблиц, Доходы, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Доходы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяВТБухучетНачислений = "ВТНачисленияПоДоговорамСРаспределением";
	ИмяКолонкиИдентификаторСтроки = "ИдентификаторСтроки";
	ИмяКолонкиСуммаДохода = "СуммаДохода";
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		ИмяВТБухучетНачислений = ДополнительныеПараметры.ИмяВТБухучетНачислений;
		ИмяКолонкиИдентификаторСтроки = ДополнительныеПараметры.ИмяКолонкиИдентификаторСтроки;
		ИмяКолонкиСуммаДохода = ДополнительныеПараметры.ИмяКолонкиСуммаДохода;
	КонецЕсли;

	Если Не СоздатьВТПолучателиГрантов(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений) Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТПолучателиГрантов");
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВидыНачислений", ВидыНачисленийВыплачиваемыеИзГрантов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Территория ЕСТЬ НЕ NULL 
	|				И БухучетНачислений.Территория <> НЕОПРЕДЕЛЕНО
	|				И БухучетНачислений.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Территория
	|		ИНАЧЕ БухучетНачислений.Подразделение
	|	КОНЕЦ КАК ТерриторияВыполненияРабот,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (БухучетНачислений.Начисление В (&ВидыНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Территория ЕСТЬ НЕ NULL 
	|				И БухучетНачислений.Территория <> НЕОПРЕДЕЛЕНО
	|				И БухучетНачислений.Территория <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
	|			ТОГДА БухучетНачислений.Территория
	|		ИНАЧЕ БухучетНачислений.Подразделение
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачислений", ИмяВТБухучетНачислений);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ИзменяемыеСтроки = Доходы.НайтиСтроки(Новый Структура(ИмяКолонкиИдентификаторСтроки + ", Подразделение", Выборка.ИдентификаторСтроки, Выборка.ТерриторияВыполненияРабот));
		Если ИзменяемыеСтроки.Количество() > 0 Тогда
			
			ИзменяемыеСтроки[0].СуммаВычета = ИзменяемыеСтроки[0].СуммаВычета * (1 - Выборка.Сумма / ИзменяемыеСтроки[0][ИмяКолонкиСуммаДохода]);
			ИзменяемыеСтроки[0][ИмяКолонкиСуммаДохода] = ИзменяемыеСтроки[0][ИмяКолонкиСуммаДохода] - Выборка.Сумма;
			
			Если ИзменяемыеСтроки[0][ИмяКолонкиСуммаДохода] = 0 
				И ИзменяемыеСтроки[0].СуммаВычета = 0 Тогда
				Доходы.Удалить(ИзменяемыеСтроки[0]);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// Удаляет из временной таблицы ИмяВТБухучетНачислений строки, которые относятся к грантам.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц - содержит таблицу с бухучетом начислений,
//								в которой есть поля: Сотрудник, ДатаНачала, СтатьяФинансирования, Начисление.
//
//	ИмяВТБухучетНачислений - Строка - имя таблицы с бухучетом начислений.
//
Процедура УдалитьСуммыЗаСчетГрантовВТаблицеБухучетНачислений(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений) Экспорт
	
	Если Не СоздатьВТПолучателиГрантов(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений) Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТПолучателиГрантов");
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КатегорииНачислений", КатегорииНачисленийВыплачиваемыеИзГрантов());
	Запрос.УстановитьПараметр("ВидыНачислений", ВидыНачисленийВыплачиваемыеИзГрантов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ДатаНачала
	|ПОМЕСТИТЬ ВТИсключаемыеНачисления
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (ВЫРАЗИТЬ(БухучетНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени В (&КатегорииНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ДатаНачала
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ДатаНачала
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (БухучетНачислений.Начисление В (&ВидыНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ДатаНачала";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачислений", ИмяВТБухучетНачислений);
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТИсключаемыеНачисления");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ИменаПолей
	|ПОМЕСТИТЬ ВТОтфильтрованныйБухучетНачислений
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеНачисления КАК ИсключаемыеНачисления
	|		ПО БухучетНачислений.Сотрудник = ИсключаемыеНачисления.Сотрудник
	|			И БухучетНачислений.ДатаНачала = ИсключаемыеНачисления.ДатаНачала
	|			И БухучетНачислений.СтатьяФинансирования = ИсключаемыеНачисления.СтатьяФинансирования
	|			И БухучетНачислений.Начисление = ИсключаемыеНачисления.Начисление
	|ГДЕ
	|	ИсключаемыеНачисления.Сотрудник ЕСТЬ NULL";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачислений", ИмяВТБухучетНачислений);
	ЗарплатаКадры.ЗаполнитьИменаПолейВТ(Запрос.Текст, МенеджерВременныхТаблиц, ИмяВТБухучетНачислений, "БухучетНачислений", Новый Массив);
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить(ИмяВТБухучетНачислений);
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.*
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	ВТОтфильтрованныйБухучетНачислений КАК БухучетНачислений";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачислений", ИмяВТБухучетНачислений);
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТОтфильтрованныйБухучетНачислений");
	
КонецПроцедуры

Функция СтрокиИзмениласьДоляГранта(МенеджерВременныхТаблиц,ИмяВТСтарыйБухучетНачислений,ИмяВТНовыйБухучетНачислений) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КатегорииНачислений", КатегорииНачисленийВыплачиваемыеИзГрантов());
	Запрос.УстановитьПараметр("ВидыНачислений", ВидыНачисленийВыплачиваемыеИзГрантов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТСтарыеСтроки
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтарыйБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (ВЫРАЗИТЬ(БухучетНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени В (&КатегорииНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачислений.Сумма) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	СУММА(БухучетНачислений.Сумма)
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтарыйБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (БухучетНачислений.Начисление В (&ВидыНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачислений.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТНовыеСтроки
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыйБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (ВЫРАЗИТЬ(БухучетНачислений.Начисление КАК ПланВидовРасчета.Начисления).КатегорияНачисленияИлиНеоплаченногоВремени В (&КатегорииНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачислений.Сумма) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	СУММА(БухучетНачислений.Сумма)
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыйБухучетНачислений КАК БухучетНачислений
	|		ПО (БухучетНачислений.Сотрудник = ПолучателиГрантов.Сотрудник)
	|			И (БухучетНачислений.ДатаНачала = ПолучателиГрантов.Период)
	|			И (БухучетНачислений.СтатьяФинансирования = ПолучателиГрантов.СтатьяФинансирования)
	|			И (БухучетНачислений.Начисление В (&ВидыНачислений))
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачислений.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиГрантов.ИдентификаторСтроки,
	|	СУММА(ЕСТЬNULL(СтрокиГрантов.СтараяСумма, 0)) КАК СтараяСумма,
	|	СУММА(ЕСТЬNULL(СтрокиГрантов.НоваяСумма, 0)) КАК НоваяСумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтарыеСтроки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		СтарыеСтроки.Сумма КАК СтараяСумма,
	|		0 КАК НоваяСумма
	|	ИЗ
	|		ВТСтарыеСтроки КАК СтарыеСтроки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НовыеСтроки.ИдентификаторСтроки,
	|		0,
	|		НовыеСтроки.Сумма
	|	ИЗ
	|		ВТНовыеСтроки КАК НовыеСтроки) КАК СтрокиГрантов
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиГрантов.ИдентификаторСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(СтрокиГрантов.СтараяСумма, 0)) <> СУММА(ЕСТЬNULL(СтрокиГрантов.НоваяСумма, 0))";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТСтарыйБухучетНачислений", ИмяВТСтарыйБухучетНачислений);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНовыйБухучетНачислений", ИмяВТНовыйБухучетНачислений);
	Результат = Запрос.Выполнить();
	
	СтрокиИзмениласьДоляГранта = Новый Соответствие;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокиИзмениласьДоляГранта.Вставить(Выборка.ИдентификаторСтроки, Истина);
	КонецЦикла;
	
	Возврат СтрокиИзмениласьДоляГранта;
	
КонецФункции

Функция СтатьиФинансированияГранта(Сотрудник, ВидРасчета, ДатаНачала) Экспорт
	
	СтатьиФинансирования = Новый Массив;
	
	КатегорияНачисления = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПустаяСсылка();
	Если ТипЗнч(ВидРасчета) = Тип("ПланВидовРасчетаСсылка.Начисления") Тогда
		КатегорияНачисления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчета, "КатегорияНачисленияИлиНеоплаченногоВремени");
	КонецЕсли;
	
	Если КатегорииНачисленийВыплачиваемыеИзГрантов().Найти(КатегорияНачисления) = Неопределено
		И ВидыНачисленийВыплачиваемыеИзГрантов().Найти(ВидРасчета) = Неопределено Тогда
		Возврат СтатьиФинансирования;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Сотрудник КАК Сотрудник,
	|	&ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТОтборСотрудников";
	Запрос.Выполнить();
	
	Если Не СоздатьВТПолучателиГрантов(Запрос.МенеджерВременныхТаблиц, "ВТОтборСотрудников") Тогда
		Возврат СтатьиФинансирования;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолучателиГрантов.СтатьяФинансирования
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтатьиФинансирования.Добавить(Выборка.СтатьяФинансирования);
	КонецЦикла;
	
	Возврат СтатьиФинансирования;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.4.20";
	Обработчик.Процедура = "ГрантыНеоблагаемыеНДФЛ.УстановитьПараметрыНабораСвойствСправочников";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d4d69d09-3dfc-4d46-bee7-0650db51a3ff");
	Обработчик.Комментарий = НСтр("ru = 'Установка параметров для набора свойств справочника грантов. Дополнительные реквизиты в грантах временно недоступны.'");
	
КонецПроцедуры

Процедура УстановитьПараметрыНабораСвойствСправочников(ПараметрыОбновления = НеОпределено) Экспорт
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = Константы.ИспользоватьГрантыНеоблагаемыеНДФЛ.Получить();
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Гранты", ПараметрыНабора);
	
	Если ПараметрыОбновления <> Неопределено Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИспользуютсяГрантыНеоблагаемыеНДФЛ() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьГрантыНеоблагаемыеНДФЛ");
	
КонецФункции

Функция КатегорииНачисленийВыплачиваемыеИзГрантов()
	
	КатегорииНачислений = Новый Массив;
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СдельнаяОплатаТруда);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоходВНатуральнойФорме);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсационныеВыплаты);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Премия);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.РайонныйКоэффициент);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СевернаяНадбавка);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаКомандировки);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПоСреднемуЗаработку);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаЗаСовмещение);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.НадбавкаЗаВредность);
	КатегорииНачислений.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Прочее);
	
	Возврат КатегорииНачислений;
	
КонецФункции

Функция ВидыНачисленийВыплачиваемыеИзГрантов()
	
	ВидыНачислений = Новый Массив;
	ВидыНачислений.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа);
	ВидыНачислений.Добавить(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги);
	
	Возврат ВидыНачислений;
	
КонецФункции

// Формирует временную таблицу ВТПолучателиГрантов, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц - содержит таблицу с данными для отборов.
//	ИмяВременнойТаблицыОтборов - Строка, имя временной таблицы в менеджере запросов.
//	ИмяПоляСотрудник - Строка, указывает имя поля временной таблицы,
//						содержащего ссылку на сотрудника.
//	ИмяПоляПериод - Строка, указывает имя поля временной таблицу, содержащее период,
//					 на который определяется статус получателя гранта.
//
// Возвращаемое значение:
//	Булево - признак того, что таблица создана и она не пуста.
//
Функция СоздатьВТПолучателиГрантов(МенеджерВременныхТаблиц, ИмяВременнойТаблицыОтборов, ИмяПоляСотрудник = "Сотрудник", ИмяПоляПериод = "ДатаНачала") Экспорт
	
	Если Не ИспользуютсяГрантыНеоблагаемыеНДФЛ() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОтборов.Период КАК Период,
	|	ТаблицаОтборов.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТФильтрПолучателиГрантов
	|ИЗ
	|	ВТОтборовСотрудников КАК ТаблицаОтборов";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаОтборов.Сотрудник", "ТаблицаОтборов." + ИмяПоляСотрудник);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаОтборов.Период", "ТаблицаОтборов." + ИмяПоляПериод);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТОтборовСотрудников", ИмяВременнойТаблицыОтборов);
	
	Запрос.Выполнить();
	
	УдалитьВТ = Новый Массив;
	УдалитьВТ.Добавить("ВТФильтрПолучателиГрантов");
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ПолучателиГрантов",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТФильтрПолучателиГрантов",
			"Сотрудник"));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПолучателиГрантов.Период КАК Период,
	|	ПолучателиГрантов.Сотрудник КАК Сотрудник,
	|	ПолучателиГрантов.Грант КАК Грант,
	|	Гранты.СтатьяФинансирования КАК СтатьяФинансирования
	|ПОМЕСТИТЬ ВТПолучателиГрантов
	|ИЗ
	|	ВТПолучателиГрантовСрезПоследних КАК ПолучателиГрантов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Гранты КАК Гранты
	|		ПО ПолучателиГрантов.Грант = Гранты.Ссылка
	|			И (ПолучателиГрантов.Период МЕЖДУ Гранты.ДатаНачала И КОНЕЦПЕРИОДА(Гранты.ДатаОкончания, МЕСЯЦ))
	|ГДЕ
	|	ПолучателиГрантов.ЯвляетсяПолучателем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПолучателиГрантов.Сотрудник
	|ИЗ
	|	ВТПолучателиГрантов КАК ПолучателиГрантов";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаПуста = РезультатЗапроса.Пустой();
	
	УдалитьВТ.Добавить("ВТПолучателиГрантовСрезПоследних");
	
	Если ТаблицаПуста Тогда
		УдалитьВТ.Добавить("ВТПолучателиГрантов");
	КонецЕсли;
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);
	
	Возврат Не ТаблицаПуста;
	
КонецФункции

#Область НастройкаРасчетаЗарплаты

Функция ТребуютсяГранты()
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы")
		И ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
КонецФункции

Процедура ДополнитьФормуНастройкаРасчетаЗарплаты(Форма) Экспорт
	
	Если Не ТребуютсяГранты() Тогда
		Возврат;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьГрантыНеоблагаемыеНДФЛ", Новый ОписаниеТипов("Булево"), , НСтр("ru='Использовать гранты необлагаемые НДФЛ'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьГрантыНеоблагаемыеНДФЛПрежняя", Новый ОписаниеТипов("Булево"), , НСтр("ru='Использовать гранты необлагаемые НДФЛ (прежняя)'")));
	
	МассивИменРеквизитовФормы = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
	Если Форма.Элементы.Найти("ИспользоватьГрантыНеоблагаемыеНДФЛ") = Неопределено Тогда
		
		ГруппаФормы = Форма.Элементы.ГруппаГрантыНеоблагаемыеНДФЛ;
		
		ПолеФлажка = Форма.Элементы.Вставить("ИспользоватьГрантыНеоблагаемыеНДФЛ", Тип("ПолеФормы"), ГруппаФормы);
		ПолеФлажка.ПутьКДанным = "ИспользоватьГрантыНеоблагаемыеНДФЛ";
		ПолеФлажка.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеФлажка.Заголовок = НСтр("ru = 'Используются гранты необлагаемые НДФЛ'");
		ПолеФлажка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		ПолеФлажка.Подсказка = НСтр("ru = 'Выполнение начислений необлагаемых НДФЛ согласно п. 6 ст. 217 НК РФ.'");
		ПолеФлажка.РасширеннаяПодсказка.АвтоМаксимальнаяШирина = Ложь;
		ПолеФлажка.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		ПолеФлажка.УстановитьДействие("ПриИзменении", "Подключаемый_ИспользоватьГрантыНеоблагаемыеНДФЛПриИзменении");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкиПрограммыВРеквизитыФормы(Форма) Экспорт
	
	Если Не ТребуютсяГранты() Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ИспользоватьГрантыНеоблагаемыеНДФЛ = ИспользуютсяГрантыНеоблагаемыеНДФЛ();
	
КонецПроцедуры

Процедура ДополнитьСтруктуруПараметровНастроек(СтруктураПараметров) Экспорт
	
	Если Не ТребуютсяГранты() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров.ПараметрыНастроек.Вставить("ИспользоватьГрантыНеоблагаемыеНДФЛ", Ложь);
	СтруктураПараметров.Вставить("ИспользоватьГрантыНеоблагаемыеНДФЛ")
	
КонецПроцедуры

Процедура ЗначенияСохраняемыхРеквизитовФормыНастройкаПрограммы(Форма, Параметры) Экспорт
	
	Если Не ТребуютсяГранты() Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ПараметрыНастроек.ИспользоватьГрантыНеоблагаемыеНДФЛ 
		Или Параметры.ПараметрыНастроек.ИспользоватьНачислениеЗарплаты Тогда
		
		Параметры.Вставить("ИспользоватьГрантыНеоблагаемыеНДФЛ", Форма.ИспользоватьГрантыНеоблагаемыеНДФЛ);
		Форма.ИспользоватьГрантыНеоблагаемыеНДФЛПрежняя = Форма.ИспользоватьГрантыНеоблагаемыеНДФЛ;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНастройкиПрограммы(Параметры) Экспорт
	
	Если Не ТребуютсяГранты() Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ПараметрыНастроек.ИспользоватьГрантыНеоблагаемыеНДФЛ 
		Или Параметры.ПараметрыНастроек.ИспользоватьНачислениеЗарплаты Тогда
		Константы.ИспользоватьГрантыНеоблагаемыеНДФЛ.Установить(Параметры.ИспользоватьГрантыНеоблагаемыеНДФЛ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПоказательИспользоватьГрантыНеоблагаемыеНДФЛ(ТаблицаПоказателей) Экспорт
	
	Если Не ТребуютсяГранты() Тогда
		Возврат;
	КонецЕсли;
	
	Отчеты.НастройкиПрограммыЗарплатаКадры.ДобавитьПоказатель(ТаблицаПоказателей, "Константы", "ИспользоватьГрантыНеоблагаемыеНДФЛ", 
		НСтр("ru = 'Используются гранты необлагаемые НДФЛ'"), "Расчет зарплаты", "", "Ложь", 4, 1, 23);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
