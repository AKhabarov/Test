#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьСобытиеДополнительногоПоляФормыСотрудникаНажатие(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Если Элемент.Имя = "КлассныйЧинВоинскоеЗвание" Тогда
		
		СтандартнаяОбработка = Ложь;
		Если Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.КонтрактГосслужащего")
			Или Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего") Тогда
			
			Отбор = Новый Структура("ФизическоеЛицо", Форма.ФизическоеЛицоСсылка);
			ПараметрыФормы = Новый Структура("Отбор", Отбор);
			ОткрытьФорму("РегистрСведений.КлассныеЧиныРангиФизическихЛиц.Форма.ИсторияИзменения", ПараметрыФормы, Форма);
			
		ИначеЕсли Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.ВоеннослужащийПоПризыву")
			Или Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего") Тогда

			Отбор = Новый Структура("ФизическоеЛицо", Форма.ФизическоеЛицоСсылка);
			ПараметрыФормы = Новый Структура("Отбор", Отбор);
			ОткрытьФорму("РегистрСведений.ВоинскиеСпециальныеЗванияФизическихЛиц.Форма.ИсторияИзменения", ПараметрыФормы, Форма);

		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОткрытьФормуКадровыхПриказовВоеннослужащих(Форма, СтандартнаяОбработка) Экспорт
	
	Если Не Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьВоеннуюСлужбу") Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.ВоеннослужащийПоПризыву")
			Или Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СотрудникиКлиент.ОткрытьДополнительнуюФорму(
			СотрудникиКлиентСервер.ОписаниеДополнительнойФормы("ЖурналДокументов.КадровыеДокументыВоеннослужащих.ФормаСписка"), Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОбработкаОповещенияИзмененийДанныхСотрудников(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	ОбработкаВыполнена = Ложь;
	Если Источник = Форма.ФизическоеЛицоСсылка Тогда
		
		Если ИмяСобытия = "ОтредактированаИсторияКлассногоЧина"
			И (Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьГосударственнуюСлужбу")
				Или Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьМуниципальнуюСлужбу")) Тогда
			
			Форма.КлассныйЧинРанг = Параметр;
			Форма.КлассныйЧинВоинскоеЗвание = ГосударственнаяСлужбаКлиентСервер.ПредставлениеЗаданногоСотрудникуКлассногоЧина(Форма);
			ОбработкаВыполнена = Истина;
			
		ИначеЕсли Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьВоеннуюСлужбу") Тогда
			
			Если Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего")
				Или Форма.ТекущийВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровССотрудниками.ВоеннослужащийПоПризыву") Тогда
				
				ОбработкаВыполнена = ОбработкаРезультатовРедактированияИсторииВоинскогоЗвания(Форма, ИмяСобытия, Параметр, Источник);
					
			КонецЕсли;
				
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат ОбработкаВыполнена;
	
КонецФункции

Функция ОбработкаРезультатовРедактированияИсторииВоинскогоЗвания(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	ОбработкаВыполнена = Ложь;
	
	Если ИмяСобытия = "ОтредактированаИсторияВоинскогоЗвания" Тогда
		
		Форма.ВоинскоеСпециальноеЗвание = Параметр;
		Форма.КлассныйЧинВоинскоеЗвание = ГосударственнаяСлужбаКлиентСервер.ПредставлениеЗаданногоСотрудникуВоинскогоЗвания(Форма);
		ОбработкаВыполнена = Истина;
		
	КонецЕсли; 
	
	Возврат ОбработкаВыполнена;
	
КонецФункции

Процедура УточнитьПараметрыОткрытияФормыВыбораСотрудников(ПараметрыОткрытия) Экспорт
	
	Если ПолучитьФункциональнуюОпциюИнтерфейса("ИспользоватьВоеннуюСлужбу") Тогда
		
		Если ПараметрыОткрытия = Неопределено Тогда
			ПараметрыОткрытия = Новый Структура;
		КонецЕсли; 
		
		Отбор = Неопределено;
		ПараметрыОткрытия.Свойство("Отбор", Отбор);
		
		Если Отбор = Неопределено Тогда
			Отбор = Новый Структура;
		КонецЕсли; 
		
		Если Не Отбор.Свойство("ВидДоговора") Тогда
			
			ВключатьВедомственныхВоенных = Ложь;
			Если НЕ ПараметрыОткрытия.Свойство("ВключатьВедомственныхВоенных",ВключатьВедомственныхВоенных) Тогда
				ВключатьВедомственныхВоенных = Ложь;
			КонецЕсли;
			
			Если ВключатьВедомственныхВоенных И НЕ ПолучитьФункциональнуюОпциюИнтерфейса("ИспользоватьРасчетДенежногоДовольствияВоеннослужащих") Тогда
				Отбор.Вставить("ВидДоговора", ГосударственнаяСлужбаВызовСервера.ВидыДоговоровГражданскойИВедомственнойСлужбы());
			Иначе
				Отбор.Вставить("ВидДоговора", ГосударственнаяСлужбаВызовСервера.ВидыДоговоровКромеВоеннойСлужбы());		
			КонецЕсли;
			
			ПараметрыОткрытия.Вставить("Отбор", Отбор);
			
			НеОтключаемыеОтборы = Неопределено;
			ПараметрыОткрытия.Свойство("НеОтключаемыеОтборы", НеОтключаемыеОтборы);
			
			Если НеОтключаемыеОтборы = Неопределено Тогда
				НеОтключаемыеОтборы = "";
			КонецЕсли; 
			
			Если Не ПустаяСтрока(НеОтключаемыеОтборы) Тогда
				НеОтключаемыеОтборы = НеОтключаемыеОтборы + ",";
			КонецЕсли; 
			
			ПараметрыОткрытия.Вставить("НеОтключаемыеОтборы", НеОтключаемыеОтборы + "ВидДоговора");
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИндексацияГосударственныхСлужащихПриИзмененииПриИзменении(Форма) Экспорт
	
	ГосударственнаяСлужбаКлиентСервер.УстановитьДоступностьВидаИндексацииГосударственныхСлужащих(Форма);
	Если НЕ Форма.ИндексацияГосударственныхСлужащих Тогда
		Форма.Объект.ВидИндексацииГосударственныхСлужащих = 
		ПредопределенноеЗначение("Перечисление.ВидыИндексируемогоДенежногоСодержания.ПустаяССылка");
		Форма.Объект.ИндексацияВоеннослужащих = Ложь;	
	Иначе
		Форма.Объект.ВидИндексацииГосударственныхСлужащих = 
		ПредопределенноеЗначение("Перечисление.ВидыИндексируемогоДенежногоСодержания.ОкладыДенежногоСодержания");		
		Форма.Объект.ИндексацияВоеннослужащих = ГосударственнаяСлужбаВызовСервера.ТолькоВоеннаяСлужба(); 
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти 
