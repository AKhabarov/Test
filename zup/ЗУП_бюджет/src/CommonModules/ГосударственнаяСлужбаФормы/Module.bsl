////////////////////////////////////////////////////////////////////////////////
// Учет государственных служащих.
// Серверные процедуры и функции форм документов.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Устанавливает заголовки и видимость элементов формы, редактирующих данные контракта, договора сотрудника, 
// в зависимости от вида договора.
//
Процедура НастроитьФормуДокументаПоВидуДоговора(Форма, ОписаниеФормы, ВидДоговора) Экспорт
	
	Если НЕ ВедетсяУчетГосслужащих(Форма) Тогда
		Возврат
	КонецЕсли;
	
	УстановитьЗаголовкиЭлементовФормы(Форма, ОписаниеФормы, ВидДоговора);
	
	УстановитьВидимостьЭлементовФормы(Форма, ОписаниеФормы, ВидДоговора);
	
КонецПроцедуры

// Возвращает тип значения для реквизита основания срочного трудового договора.
//
Функция ТипОснованияСрочногоТрудовогоДоговора(ВидДоговора) Экспорт
	
	ТипОснования = Тип("СправочникСсылка.ОснованияЗаключенияСрочныхТрудовыхДоговоров");
	
	Если ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего Тогда
		 ТипОснования = Тип("СправочникСсылка.ОснованияЗаключенияСрочныхКонтрактовГосслужащих");
	ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего Тогда	
		 ТипОснования = Тип("СправочникСсылка.ОснованияЗаключенияСрочныхДоговоровМуниципальныхСлужащих");
	КонецЕсли;
	
	Возврат ТипОснования;
	
КонецФункции

Процедура УстановитьЗаголовокПоляСменаВидаДоговора(Форма, ОписаниеФормы, ТекущийВидДоговора) Экспорт 
	
	ЗаголовокПоляСменаВидаДоговора = НСтр("ru = 'Перевод на трудовой договор'");
	
	Если ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ТрудовойДоговор Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу") Тогда 
			ЗаголовокПоляСменаВидаДоговора = НСтр("ru = 'Перевод на государственную службу'");
		Иначе		
			ЗаголовокПоляСменаВидаДоговора = НСтр("ru = 'Перевод на муниципальную службу'");
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаФормыСменаВидаДоговора"], "Заголовок", ЗаголовокПоляСменаВидаДоговора);
	
КонецПроцедуры

// Возвращает тип значения для реквизита основания увольнения в документе Увольнение.
//
Функция ТипОснованияУвольнения(ВидДоговора) Экспорт
	
	ТипОснования = Тип("СправочникСсылка.ОснованияУвольнения");
	
	Если ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего Тогда
		ТипОснования = Тип("СправочникСсылка.ОснованияУвольненияСМуниципальнойСлужбы");
	ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего Тогда
		ТипОснования = Тип("СправочникСсылка.ОснованияУвольненияСГосударственнойСлужбы");
	КонецЕсли;
	
	Возврат ТипОснования;
	
КонецФункции

Процедура ОбновитьФормуПоВариантуРасчетаСреднегоЗаработка(Форма) Экспорт
	
	Объект 		= Форма.Объект;
	Элементы 	= Форма.Элементы;
		
	Если Объект.РасчетДенежногоСодержания Тогда
		Форма.ЗаголовокГруппыСреднийЗаработок = НСтр("ru='Сохраняемое денежное содержание'");
		Элементы.СреднийЗаработокСтраницы.ТекущаяСтраница = Элементы.ДенежноеСодержаниеСтраница;
	Иначе
		Форма.ЗаголовокГруппыСреднийЗаработок = НСтр("ru='Средний заработок'");
		Элементы.СреднийЗаработокСтраницы.ТекущаяСтраница = Элементы.СреднийЗаработокСтраница;
	КонецЕсли;	
	
	Если Элементы.Найти("РасчетДенежногоСодержания") <> Неопределено Тогда
		Элементы.РасчетДенежногоСодержания.Видимость = ГосударственнаяСлужба.ДоступноИзменениеВариантаРасчетаВДокументе(Объект.Сотрудник,Объект.ДатаНачалаСобытия);	
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции


#Область РедактированиеСведенийСотрудника

Процедура ДобавитьВМассивСоздаваемыеРеквизитыФормыСотрудника(МассивДобавляемыхРеквизитов) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьВоеннуюСлужбу") Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ТекущийВидДоговора", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДоговоровССотрудниками"), , НСтр("ru='Вид договора'"), Ложь));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("КлассныйЧинРанг", Новый ОписаниеТипов("СправочникСсылка.КлассныеЧиныРанги"), , НСтр("ru='Классный чин, ранг'"), Ложь));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ВоинскоеСпециальноеЗвание", Новый ОписаниеТипов("СправочникСсылка.ВоинскиеСпециальныеЗвания"), , НСтр("ru='Воинское, специальное звание'"), Ложь));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("КлассныйЧинВоинскоеЗвание", Новый ОписаниеТипов("Строка"), , , Ложь));
	
КонецПроцедуры

Процедура ФормаСотрудникаДобавитьЭлементыФормы(Форма) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу")
		И Не ПолучитьФункциональнуюОпцию("ИспользоватьВоеннуюСлужбу") Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	ЭлементГруппаТекущийВидДоговора = Форма.Элементы.Найти("ГруппаТекущийВидДоговора");
	Если ЭлементГруппаТекущийВидДоговора = Неопределено Тогда
		
		ЭлементГруппаТекущийВидДоговора = Форма.Элементы.Вставить("ГруппаТекущийВидДоговора", Тип("ГруппаФормы"), Форма.Элементы.РабочееМесто, Форма.Элементы.ТекущаяОрганизация);
		ЭлементГруппаТекущийВидДоговора.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаТекущийВидДоговора.Отображение = ОтображениеОбычнойГруппы.Нет;
		ЭлементГруппаТекущийВидДоговора.ОтображатьЗаголовок = Ложь;
		ЭлементГруппаТекущийВидДоговора.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("ТекущийВидДоговора");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Добавить("ТекущийВидДоговора", Тип("ПолеФормы"), ЭлементГруппаТекущийВидДоговора);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
		Элемент.МаксимальнаяШирина = 20;
		Элемент.ТолькоПросмотр = Истина;
		Элемент.ПутьКДанным = "ТекущийВидДоговора";
	КонецЕсли;
	
	Элемент = Форма.Элементы.Найти("КлассныйЧинВоинскоеЗвание");
	Если Элемент = Неопределено Тогда
		Элемент = Форма.Элементы.Добавить("КлассныйЧинВоинскоеЗвание", Тип("ПолеФормы"), ЭлементГруппаТекущийВидДоговора);
		Элемент.Вид = ВидПоляФормы.ПолеНадписи;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.Высота = 2;
		Элемент.АвтоМаксимальнаяВысота = Ложь;
		Элемент.МаксимальнаяВысота = 2;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
		Элемент.МаксимальнаяШирина = 25;
		Элемент.Гиперссылка = Истина;
		Элемент.ПутьКДанным = "КлассныйЧинВоинскоеЗвание";
		Элемент.УстановитьДействие("Нажатие", "Подключаемый_ПолеФормыНажатие");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКлючиСтруктурыТекущихКадровыхДанныхСотрудника(КлючиСтруктурыТекущихКадровыхДанныхСотрудника) Экспорт
	
	ИспользоватьГосударственнуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу");
	ИспользоватьМуниципальнуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу");
	ИспользоватьВоеннуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьВоеннуюСлужбу");
	
	Если Не ИспользоватьГосударственнуюСлужбу
		И Не ИспользоватьМуниципальнуюСлужбу
		И Не ИспользоватьВоеннуюСлужбу Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	ИспользоватьУчетКлассныхЧинов = ПолучитьФункциональнуюОпцию("ИспользоватьУчетКлассныхЧинов");
	КлючиСтруктурыТекущихКадровыхДанныхСотрудника = КлючиСтруктурыТекущихКадровыхДанныхСотрудника + ",ТекущийВидДоговора";
	Если ИспользоватьВоеннуюСлужбу Тогда
		КлючиСтруктурыТекущихКадровыхДанныхСотрудника = КлючиСтруктурыТекущихКадровыхДанныхСотрудника + ",ВоинскоеСпециальноеЗвание";
	КонецЕсли;
	
	Если (ИспользоватьГосударственнуюСлужбу Или ИспользоватьМуниципальнуюСлужбу) И ИспользоватьУчетКлассныхЧинов Тогда
		КлючиСтруктурыТекущихКадровыхДанныхСотрудника = КлючиСтруктурыТекущихКадровыхДанныхСотрудника + ",КлассныйЧинРанг";
	КонецЕсли; 
	
КонецПроцедуры

Процедура СотрудникиОбновитьЭлементыФормы(Форма) Экспорт
	
	ИспользоватьГосударственнуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу");
	ИспользоватьМуниципальнуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу");
	ИспользоватьВоеннуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьВоеннуюСлужбу");
	
	Если Не ИспользоватьГосударственнуюСлужбу
		И Не ИспользоватьМуниципальнуюСлужбу
		И Не ИспользоватьВоеннуюСлужбу Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИспользоватьУчетКлассныхЧинов = ПолучитьФункциональнуюОпцию("ИспользоватьУчетКлассныхЧинов");
	НеИспользоватьРасчетДенежногоДовольствияВоеннослужащих = ПолучитьФункциональнуюОпцию("НеИспользоватьРасчетДенежногоДовольствияВоеннослужащих");
	
	ВидимостьПоляВводаВидДоговора = Ложь;
	ВидимостьПоляВводаВидаЗанятости = Ложь;
	
	Если ЗначениеЗаполнено(Форма.ТекущийВидДоговора) Тогда
		
		ВидимостьПоляВводаВидДоговора = Истина;
		Если Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ТрудовойДоговор Тогда
			ВидимостьПоляВводаВидаЗанятости = Истина;
		ИначеЕсли Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего Тогда
			
			НастройкиПрограммы = ЗарплатаКадрыРасширенный.НастройкиПрограммыБюджетногоУчреждения();
			Если НастройкиПрограммы.РазрешеноСовместительствоВоеннослужащимПоКонтракту Тогда
				ВидимостьПоляВводаВидаЗанятости = Истина;
			КонецЕсли; 
			
		КонецЕсли;
		
	Иначе
		ВидимостьПоляВводаВидаЗанятости = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ТекущийВидДоговора",
		"Видимость",
		ВидимостьПоляВводаВидДоговора);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ТекущийВидЗанятости",
		"Видимость",
		ВидимостьПоляВводаВидаЗанятости);
	
	ВидимостьГиперссылкиКлассныйЧинВоинскоеЗвание = Ложь;
	Если ВидимостьПоляВводаВидДоговора Тогда
		
		Если ИспользоватьУчетКлассныхЧинов
			И (Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего
				Или Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего) Тогда
			
			ВидимостьГиперссылкиКлассныйЧинВоинскоеЗвание = Истина;
			Форма.КлассныйЧинВоинскоеЗвание = ГосударственнаяСлужбаКлиентСервер.ПредставлениеЗаданногоСотрудникуКлассногоЧина(Форма);
			
		КонецЕсли;
		
		Если Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего
			Или Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ВоеннослужащийПоПризыву Тогда
			
			ВидимостьГиперссылкиКлассныйЧинВоинскоеЗвание = Истина;
			Форма.КлассныйЧинВоинскоеЗвание = ГосударственнаяСлужбаКлиентСервер.ПредставлениеЗаданногоСотрудникуВоинскогоЗвания(Форма);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КлассныйЧинВоинскоеЗвание",
		"Видимость",
		ВидимостьГиперссылкиКлассныйЧинВоинскоеЗвание);
	
	ДоговорВоеннослужащего = Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего
		Или Форма.ТекущийВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ВоеннослужащийПоПризыву;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаПлановыйАванс",
		"Видимость",
		Не ДоговорВоеннослужащего);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГрафикРаботы",
		"Видимость",
		Не ДоговорВоеннослужащего
			Или НеИспользоватьРасчетДенежногоДовольствияВоеннослужащих);
	
КонецПроцедуры

#КонецОбласти


#Область РедактированиеСведенийФизическогоЛицаОГосслужащем

Процедура ФизическиеЛицаПриСозданииНаСервере(Форма, ИмяГруппы) Экспорт
	
	Если НЕ ВедетсяУчетГосслужащих(Форма) Тогда
		Возврат
	КонецЕсли;

	ДобавитьРеквизитыСведенийОГосударственномСлужащем(Форма);
	
	ДобавитьКомандуРедактированияСведенийОГосударственномСлужащем(Форма, ИмяГруппы);

КонецПроцедуры

Процедура ДобавитьРеквизитыСведенийОГосударственномСлужащем(Форма)
	
	МассивИменРеквизитовФормы = Новый Массив;
	ДобавляемыеРеквизиты = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
	
	ДобавитьМенеджерЗаписи(ДобавляемыеРеквизиты);
	ДобавитьФлагПрочитанностиЗаписи(ДобавляемыеРеквизиты);
	   	
	ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы);
	
КонецПроцедуры

Процедура ДобавитьМенеджерЗаписи(ДобавляемыеРеквизиты)
	ОписаниеТипа = Новый ОписаниеТипов("РегистрСведенийМенеджерЗаписи.СведенияОГосударственномСлужащем");
	МенеджерЗаписи = Новый РеквизитФормы("СведенияОГосударственномСлужащем", ОписаниеТипа);
	ДобавляемыеРеквизиты.Добавить(МенеджерЗаписи);
КонецПроцедуры

Процедура ДобавитьФлагПрочитанностиЗаписи(ДобавляемыеРеквизиты)
	ОписаниеТипа = Новый ОписаниеТипов("Булево"); 
	ФлагПрочитанности = Новый РеквизитФормы("СведенияОГосударственномСлужащемЗаписьПрочитана", ОписаниеТипа);
	ДобавляемыеРеквизиты.Добавить(ФлагПрочитанности);
КонецПроцедуры

Процедура ДобавитьКомандуРедактированияСведенийОГосударственномСлужащем(Форма, ИмяГруппы)
	
	ИмяКоманды = "РедактированиеСведенийОГосударственномСлужащем";
	
	Команда = Форма.Команды.Добавить(ИмяКоманды);
	Команда.Заголовок = Нстр("ru = 'Гос. служащий'");
	Команда.Действие = "Подключаемый_РедактированиеСведенийОГосударственномСлужащемВыполнитьКоманду";
	
	Группа = Форма.Элементы.Найти(ИмяГруппы);
		   
	Кнопка = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Группа);
	Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
	Кнопка.ИмяКоманды = ИмяКоманды;
	
КонецПроцедуры

Процедура СохранитьДанныеФормыРедактированиеСведенийОГосударственномСлужащем(Форма) Экспорт
	
	Если НЕ ВедетсяУчетГосслужащих(Форма) Тогда
		Возврат
	КонецЕсли;
	
	Если Форма["СведенияОГосударственномСлужащемЗаписьПрочитана"] Тогда
		Запись = Форма.РеквизитФормыВЗначение("СведенияОГосударственномСлужащем");
		Запись.Записать();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

Функция ВедетсяУчетГосслужащих(Форма)
	Возврат Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьГосударственнуюСлужбу")
			ИЛИ Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьМуниципальнуюСлужбу") 
КонецФункции 

Процедура УстановитьЗаголовкиЭлементовФормы(Форма, ОписаниеФормы, ВидДоговора)
	
	Если ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего
		Или ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаСтраницаОплатаТруда"], 		"Заголовок", НСтр("ru = 'Денежное содержание'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаПредставитель"], 			"Заголовок", НСтр("ru = 'Представитель нанимателя'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаДолжностьПредставителя"], 	"Заголовок", НСтр("ru = 'Должность представителя нанимателя'"));			
	КонецЕсли;
	
	Если ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаДоговорКонтракт"], 			"Заголовок", НСтр("ru = 'Служебный контракт'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаСрочныйДоговор"], 			"Заголовок", НСтр("ru = 'Срочный служебный контракт до'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаИзменитьСведенияОДоговоре"], "Заголовок", НСтр("ru = 'Изменить сведения о контракте'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьЭлементовФормы(Форма, ОписаниеФормы, ВидДоговора)
	
	ЭтоТрудовойДоговор = НЕ (ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего
						Или ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаВидЗанятости"], 				"Видимость", ЭтоТрудовойДоговор);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаСпособПоступленияНаСлужбу"], "Видимость", НЕ ЭтоТрудовойДоговор);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаПоступлениеНаСлужбуВпервые"],"Видимость", НЕ ЭтоТрудовойДоговор);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаВидАктаГосоргана"], 			"Видимость", НЕ ЭтоТрудовойДоговор);
	
	УстановитьВидимостьГруппыКлассныйЧин(Форма, ОписаниеФормы, ВидДоговора);
	
КонецПроцедуры

Процедура УстановитьВидимостьГруппыКлассныйЧин(Форма, ОписаниеФормы, ВидДоговора)
	
	ВедетсяУчетКлассныхЧинов = Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьУчетКлассныхЧинов"); 
	
	Если Не ВедетсяУчетКлассныхЧинов Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоТрудовойДоговор = НЕ (ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ДоговорМуниципальногоСлужащего
						Или ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактГосслужащего);

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, ОписаниеФормы["ИмяЭлементаГруппаКлассныйЧин"], "Видимость", НЕ ЭтоТрудовойДоговор);
	
КонецПроцедуры

Процедура УстановитьПараметрыВыбораСотрудников(Форма, ИменаЭлементов) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВоеннуюСлужбу") Тогда
		
		СписокИменЭлементов = СтрРазделить(ИменаЭлементов, ",", Ложь);
		Для каждого ИмяЭлемента Из СписокИменЭлементов Цикл
			
			Элемент = Форма.Элементы.Найти(ИмяЭлемента);
			Если Элемент = Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			
			ПараметрыВыбора = Новый Массив;
			НеОтключаемыеОтборы = "";
			ВключатьВедомственныхВоенных = Ложь;
			
			УстановленыПараметрыВыбораПоВидуДоговора = Ложь;
			Для каждого ПараметрВыбора Из Элемент.ПараметрыВыбора Цикл
				
				Если ПараметрВыбора.Имя = "НеОтключаемыеОтборы" Тогда
					НеОтключаемыеОтборы = ПараметрВыбора.Значение;
					Продолжить;
				КонецЕсли;
				
				Если ПараметрВыбора.Имя = "Отбор.ВидДоговора" Тогда
					УстановленыПараметрыВыбораПоВидуДоговора = Истина;
				КонецЕсли;
				
				Если ПараметрВыбора.Имя = "ВключатьВедомственныхВоенных" Тогда
					ВключатьВедомственныхВоенных = ПараметрВыбора.Значение;
				КонецЕсли;
				
				ПараметрыВыбора.Добавить(ПараметрВыбора);
				
			КонецЦикла;
			
			Если Не УстановленыПараметрыВыбораПоВидуДоговора Тогда
				
				Если ВключатьВедомственныхВоенных И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРасчетДенежногоДовольствияВоеннослужащих") Тогда
					ПараметрВыбора = Новый ПараметрВыбора("Отбор.ВидДоговора",
						Новый ФиксированныйМассив(Перечисления.ВидыДоговоровССотрудниками.ВидыДоговоровГражданскойИВедомственнойСлужбы()));
				Иначе
					ПараметрВыбора = Новый ПараметрВыбора("Отбор.ВидДоговора",
						Новый ФиксированныйМассив(Перечисления.ВидыДоговоровССотрудниками.ВидыДоговоровКромеВоеннойСлужбы()));
				КонецЕсли;				
				
				ПараметрыВыбора.Добавить(ПараметрВыбора);
				
				Если Не ПустаяСтрока(НеОтключаемыеОтборы) Тогда
					НеОтключаемыеОтборы = НеОтключаемыеОтборы + ",";
				КонецЕсли; 
				ПараметрВыбора = Новый ПараметрВыбора("НеОтключаемыеОтборы", НеОтключаемыеОтборы + "ВидДоговора");
				ПараметрыВыбора.Добавить(ПараметрВыбора);
				
				Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
				
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

#Область ИндексацияГосслужащих

Процедура ОбъектыИндексацииПриСозданииНаСервере(Форма) Экспорт
	
	Форма.ИндексацияГосударственныхСлужащих =  ЗначениеЗаполнено(Форма.Объект.ВидИндексацииГосударственныхСлужащих);
	ГосударственнаяСлужбаКлиентСервер.УстановитьДоступностьВидаИндексацииГосударственныхСлужащих(Форма);

КонецПроцедуры

#КонецОбласти

#КонецОбласти 

