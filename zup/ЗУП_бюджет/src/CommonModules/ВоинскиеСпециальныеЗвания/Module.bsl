
#Область СлужебныйПрограммныйИнтерфейс

// Заполняет наборы записей регистра ВоинскиеСпециальныеЗванияФизическихЛиц.
// Параметры:
//		Движения - коллекция движений регистратора.
//		ВоинскиеСпециальныеЗванияФизическихЛиц - таблица значений с колонками
//			ДатаСобытия
//			ФизическоеЛицо
//			ВоинскоеСпециальноеЗвание
//			ДействуетДо
//
Процедура СформироватьДвиженияВоинскихСпециальныхЗванийФизическихЛиц(Движения, ВоинскиеСпециальныеЗванияФизическихЛиц) Экспорт
	
	Если Не ЗначениеЗаполнено(ВоинскиеСпециальныеЗванияФизическихЛиц) Тогда
		Возврат;
	КонецЕсли;
	
	Регистратор = Движения.ВоинскиеСпециальныеЗванияФизическихЛиц.Отбор.Регистратор.Значение;
	
	// Дополняем таблицу полем ПорядокРасчетаПоОкончании.
	КлючевыеИзмерения = "ДатаПрисвоения,ФизическоеЛицо";
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Для Каждого СтрокаДвижений Из ВоинскиеСпециальныеЗванияФизическихЛиц Цикл 
		НоваяСтрока = ИзмеренияДаты.Добавить();
		НоваяСтрока.ФизическоеЛицо = СтрокаДвижений.ФизическоеЛицо;
		НоваяСтрока.Период = СтрокаДвижений.ДатаПрисвоения;
	КонецЦикла;
	
	ИзмеренияДаты.Свернуть("ФизическоеЛицо, Период");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ФормироватьСПериодичностьДень = Ложь;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "<>", Регистратор);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ВоинскиеСпециальныеЗванияФизическихЛиц",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты),
		ПараметрыПостроения);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВоинскиеСпециальныеЗванияФизическихЛиц.Период, ДЕНЬ) КАК ДатаПрисвоения,
	|	ВоинскиеСпециальныеЗванияФизическихЛиц.ФизическоеЛицо,
	|	ВоинскиеСпециальныеЗванияФизическихЛиц.ВоинскоеСпециальноеЗвание КАК ТекущееЗначение
	|ИЗ
	|	ВТВоинскиеСпециальныеЗванияФизическихЛицСрезПоследних КАК ВоинскиеСпециальныеЗванияФизическихЛиц";
	
	Выборка = Запрос.Выполнить().Выбрать();

	ВоинскиеСпециальныеЗванияФизическихЛиц.Колонки.Добавить("ТекущееЗначение", Новый ОписаниеТипов("СправочникСсылка.ВоинскиеСпециальныеЗвания"));
	СтруктураПоиска = Новый Структура(КлючевыеИзмерения);
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		СтрокаДвижений = ВоинскиеСпециальныеЗванияФизическихЛиц.НайтиСтроки(СтруктураПоиска)[0];
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, Выборка, "ТекущееЗначение");
	КонецЦикла;
		
	Для Каждого СтрокаДвижений Из ВоинскиеСпециальныеЗванияФизическихЛиц Цикл
		
		Если СтрокаДвижений.ВоинскоеСпециальноеЗвание = СтрокаДвижений.ТекущееЗначение Тогда
			Продолжить;
		КонецЕсли; 
		
		Движения.ВоинскиеСпециальныеЗванияФизическихЛиц.Записывать = Истина;
		
		НоваяСтрока = Движения.ВоинскиеСпециальныеЗванияФизическихЛиц.Добавить();
		НоваяСтрока.Период = СтрокаДвижений.ДатаПрисвоения;
		НоваяСтрока.ФизическоеЛицо = СтрокаДвижений.ФизическоеЛицо;
		НоваяСтрока.ВоинскоеСпециальноеЗвание = СтрокаДвижений.ВоинскоеСпециальноеЗвание;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет наборы записей регистра ОкладыПоВоинскимСпециальнымЗваниям.
// Параметры:
//		Движения - коллекция движений регистратора.
//		ОкладыПоВоинскимСпециальнымЗваниям - таблица значений с колонками
//			Период
//			ВоинскоеСпециальноеЗвание
//			Размер
//
Процедура СформироватьДвиженияОкладовПоВоинскимСпециальнымЗваниям(Движения, ОкладыПоВоинскимСпециальнымЗваниям) Экспорт 
	
	Для Каждого СтрокаДвижений Из ОкладыПоВоинскимСпециальнымЗваниям Цикл
		Движения.ОкладыПоВоинскимСпециальнымЗваниям.Записывать = Истина;
		ЗаполнитьЗначенияСвойств(Движения.ОкладыПоВоинскимСпециальнымЗваниям.Добавить(), СтрокаДвижений);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначенияДействующихОкладовПоВоинскимСпециальнымЗваниям(ИзмеренияДаты, ИсключаемыйРегистратор = Неопределено) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ФормироватьСПериодичностьДень = Ложь;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "<>", ИсключаемыйРегистратор);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ОкладыПоВоинскимСпециальнымЗваниям",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты),
		ПараметрыПостроения);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОкладыПоВоинскимСпециальнымЗваниям.Период,
	               |	ОкладыПоВоинскимСпециальнымЗваниям.ПериодЗаписи,
	               |	ОкладыПоВоинскимСпециальнымЗваниям.ВоинскоеСпециальноеЗвание,
	               |	ОкладыПоВоинскимСпециальнымЗваниям.Размер
	               |ИЗ
	               |	ВТОкладыПоВоинскимСпециальнымЗваниямСрезПоследних КАК ОкладыПоВоинскимСпециальнымЗваниям";
	
	ЗначенияДействующихОкладов = Запрос.Выполнить().Выгрузить();
	ЗначенияДействующихОкладов.Индексы.Добавить("Период, ВоинскоеСпециальноеЗвание");
	
	Возврат ЗначенияДействующихОкладов;
	
КонецФункции

Функция ЗначениеОкладаПоВоинскомуСпециальномуЗванию(ВоинскоеСпециальноеЗвание, ДатаСобытия, ИсключаемыйРегистратор = Неопределено) Экспорт 
	
	ИзмеренияДаты = ИсходныеДанныеДляОпределенияОкладовПоВоинскомуСпециальномуЗванию();
	
	НоваяСтрока = ИзмеренияДаты.Добавить();
	НоваяСтрока.ВоинскоеСпециальноеЗвание = ВоинскоеСпециальноеЗвание;
	НоваяСтрока.Период = ДатаСобытия;
	
	ЗначенияДействующихОкладов = ЗначенияДействующихОкладовПоВоинскимСпециальнымЗваниям(ИзмеренияДаты, ИсключаемыйРегистратор);
	
	Отбор = Новый Структура("Период, ВоинскоеСпециальноеЗвание", ДатаСобытия, ВоинскоеСпециальноеЗвание);
	ДанныеОклада = ЗначенияДействующихОкладов.НайтиСтроки(Отбор);
	
	ЗначениеОклада = ?(ДанныеОклада.Количество() > 0, ДанныеОклада[0].Размер, Неопределено);
	
	Возврат ЗначениеОклада;
	
КонецФункции

Функция ИсходныеДанныеДляОпределенияОкладовПоВоинскомуСпециальномуЗванию() Экспорт 
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("ВоинскоеСпециальноеЗвание", Новый ОписаниеТипов("СправочникСсылка.ВоинскиеСпециальныеЗвания"));
	ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Возврат ИзмеренияДаты;
	
КонецФункции

Функция ПоказательОкладПоВоинскомуСпециальномуЗванию() Экспорт 
	
	ИспользоватьРасчетДенежногоДовольствияВоеннослужащих = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетДенежногоДовольствияВоеннослужащих");
		
	Показатель = ?(ИспользоватьРасчетДенежногоДовольствияВоеннослужащих,
		ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ОкладПоВоинскомуЗванию"),
		ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.ОкладПоСпециальномуЗванию"));
		
	Возврат Показатель;	
		
КонецФункции

Функция СведенияОВоинскомСпециальномЗванииСотрудника(Сотрудник, ДатаСобытия = '00010101') Экспорт 
	
	СведенияОВоинскомСпециальномЗвании = Новый Структура("ВоинскоеСпециальноеЗвание, ДатаПрисвоения");
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		Запрос.УстановитьПараметр("ДатаСобытия", ДатаСобытия);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВоинскиеСпециальныеЗвания.Период КАК Период,
		|	ВоинскиеСпециальныеЗвания.ВоинскоеСпециальноеЗвание КАК ВоинскоеСпециальноеЗвание
		|ИЗ
		|	РегистрСведений.ВоинскиеСпециальныеЗванияФизическихЛиц.СрезПоследних(
		|			&ДатаСобытия,
		|			ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					ФизическиеЛица.ФизическоеЛицо
		|				ИЗ
		|					ВТФизическиеЛица КАК ФизическиеЛица)) КАК ВоинскиеСпециальныеЗвания";
		Результат = Запрос.Выполнить();
		
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			СведенияОВоинскомСпециальномЗвании.ВоинскоеСпециальноеЗвание = Выборка.ВоинскоеСпециальноеЗвание;
			СведенияОВоинскомСпециальномЗвании.ДатаПрисвоения = Выборка.Период;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СведенияОВоинскомСпециальномЗвании;
	
КонецФункции

Функция ЗачислениеВСпискиЧастиСведенияОВоинскихСпециальныхЗваниях(ДокументСсылка) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗачислениеВСпискиЧасти.ДатаПрисвоения,
	               |	ЗачислениеВСпискиЧасти.ФизическоеЛицо,
	               |	ЗачислениеВСпискиЧасти.ВоинскоеСпециальноеЗвание
	               |ИЗ
	               |	Документ.ЗачислениеВСпискиЧасти КАК ЗачислениеВСпискиЧасти
	               |ГДЕ
	               |	ЗачислениеВСпискиЧасти.ДатаПрисвоения <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И ЗачислениеВСпискиЧасти.ВоинскоеСпециальноеЗвание <> ЗНАЧЕНИЕ(Справочник.ВоинскиеСпециальныеЗвания.ПустаяСсылка)
	               |	И ЗачислениеВСпискиЧасти.Ссылка = &Ссылка
	               |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
	               |	ЗачислениеВСпискиЧасти.ДатаПрисвоения,
	               |	ЗачислениеВСпискиЧасти.ФизическоеЛицо,
	               |	ЗачислениеВСпискиЧасти.ВоинскоеСпециальноеЗвание
	               |ИЗ
	               |	Документ.ЗачислениеВСпискиЧастиСписком.Сотрудники КАК ЗачислениеВСпискиЧасти
	               |ГДЕ
	               |	ЗачислениеВСпискиЧасти.ДатаПрисвоения <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И ЗачислениеВСпискиЧасти.ВоинскоеСпециальноеЗвание <> ЗНАЧЕНИЕ(Справочник.ВоинскиеСпециальныеЗвания.ПустаяСсылка)
	               |	И ЗачислениеВСпискиЧасти.Ссылка = &Ссылка";
				   
	СведенияОВоинскихСпециальныхЗваниях = Запрос.Выполнить().Выгрузить();
	
	Возврат СведенияОВоинскихСпециальныхЗваниях;			   
	
КонецФункции

Функция НачальнаяШтатнаяРасстановкаСведенияОВоинскихСпециальныхЗваниях(ДокументСсылка) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	НачальнаяШтатнаяРасстановка.ДатаПрисвоения,
	               |	НачальнаяШтатнаяРасстановка.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачальнаяШтатнаяРасстановка.ВоинскоеСпециальноеЗвание
	               |ИЗ
	               |	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановка
	               |ГДЕ
	               |	НачальнаяШтатнаяРасстановка.ДатаПрисвоения <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И НачальнаяШтатнаяРасстановка.ВоинскоеСпециальноеЗвание <> ЗНАЧЕНИЕ(Справочник.ВоинскиеСпециальныеЗвания.ПустаяСсылка)
	               |	И НачальнаяШтатнаяРасстановка.Ссылка.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровССотрудниками.ТрудовойДоговор)
	               |	И НачальнаяШтатнаяРасстановка.Ссылка = &Ссылка";
				   
	СведенияОВоинскихСпециальныхЗваниях = Запрос.Выполнить().Выгрузить();
	
	Возврат СведенияОВоинскихСпециальныхЗваниях;			   
	
КонецФункции

Процедура ЗаполнитьЗначениеОкладаПоВоинскомуСпециальномуЗванию(Форма, КоллекцияСтрокНачислений, ОписаниеТаблицы, РежимРаботы, ВоинскоеСпециальноеЗвание, ДатаСобытия) Экспорт 
	
	Показатель = ПоказательОкладПоВоинскомуСпециальномуЗванию();
	ЗначениеПоказателя = ЗначениеОкладаПоВоинскомуСпециальномуЗванию(ВоинскоеСпециальноеЗвание, ДатаСобытия);
			
	ФОИспользоватьВилкуСтавокВШтатномРасписании = Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьВилкуСтавокВШтатномРасписании");
	
	КоличествоПоказателей = ЗарплатаКадрыРасширенныйКлиентСервер.МаксимальноеКоличествоПоказателейПоОписаниюТаблицы(Форма, ОписаниеТаблицы, , РежимРаботы);
	
	Для Каждого СтрокаНачислений Из КоллекцияСтрокНачислений Цикл
		
		Действие = Неопределено;
		СтрокаНачислений.Свойство("Действие", Действие);
		
		Если Действие <> Перечисления.ДействияСНачислениямиИУдержаниями.Отменить Тогда
			Для СчетчикПоказателей = 1 По КоличествоПоказателей Цикл
				Если Не ЗначениеЗаполнено(СтрокаНачислений["Показатель" + СчетчикПоказателей]) Тогда
					Прервать;
				КонецЕсли; 
				Если СтрокаНачислений["Показатель" + СчетчикПоказателей] = Показатель Тогда
					СтрокаНачислений["Значение" + СчетчикПоказателей] = ЗначениеПоказателя;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ПрисвоениеВоинскогоСпециальногоЗвания);
	СписокОбъектов.Добавить(Документы.ПрисвоениеВоинскогоСпециальногоЗванияСписком);
	СписокОбъектов.Добавить(Документы.УтверждениеОкладовЗаВоинскиеСпециальныеЗвания);
	
КонецПроцедуры

#КонецОбласти

