#Область СлужебныеПроцедурыИФункции

Функция ВидыДоговоровКромеВоеннойСлужбы() Экспорт
	
	Возврат Перечисления.ВидыДоговоровССотрудниками.ВидыДоговоровКромеВоеннойСлужбы();
	
КонецФункции

Функция ВидыДоговоровГражданскойИВедомственнойСлужбы() Экспорт
		
	Возврат Перечисления.ВидыДоговоровССотрудниками.ВидыДоговоровГражданскойИВедомственнойСлужбы();
	
КонецФункции

Процедура ВидыДолжностейГосударственнойСлужбыОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВидовДолжностей.Ссылка,
	|	ТаблицаВидовДолжностей.Синоним
	|ПОМЕСТИТЬ ВТТаблицаВидовДолжностей
	|ИЗ
	|	&ТаблицаВидовДолжностей КАК ТаблицаВидовДолжностей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидовДолжностей.Ссылка
	|ИЗ
	|	ВТТаблицаВидовДолжностей КАК ТаблицаВидовДолжностей
	|ГДЕ
	|	ТаблицаВидовДолжностей.Синоним ПОДОБНО &СтрокаПоиска";
	
	Если Параметры.СтрокаПоиска = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаВидовДолжностей.Синоним ПОДОБНО &СтрокаПоиска", "ИСТИНА");
	КонецЕсли;
	
	// Составляем таблицу категорий.
	ТаблицаВидовДолжностей = Новый ТаблицаЗначений;
	ТаблицаВидовДолжностей.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДолжностейГосударственнойСлужбы"));
	ТаблицаВидовДолжностей.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(256)));
	
	ДоступныеВидыДолжностейГосударственнойСлужбы = Перечисления.ВидыДолжностейГосударственнойСлужбы.ДоступныеВидыДолжностейГосударственнойСлужбы();
	
	Для Каждого ЗначениеПеречисления Из ДоступныеВидыДолжностейГосударственнойСлужбы Цикл
		НоваяСтрока = ТаблицаВидовДолжностей.Добавить();
		НоваяСтрока.Ссылка = Перечисления.ВидыДолжностейГосударственнойСлужбы[ЗначениеПеречисления.Имя];
		НоваяСтрока.Синоним = ЗначениеПеречисления.Синоним;
	КонецЦикла;
	
	// Отбор только по действующим категориям с учетом введенной строки.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаВидовДолжностей", ТаблицаВидовДолжностей);
	Запрос.УстановитьПараметр("СтрокаПоиска", Строка(Параметры.СтрокаПоиска) + "%");
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;

КонецПроцедуры

Процедура ОтношениеНачисленийКДенежномуДовольствиюОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Синоним
	|ПОМЕСТИТЬ ВТТаблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка
	|ИЗ
	|	ВТТаблица КАК Таблица
	|ГДЕ
	|	Таблица.Синоним ПОДОБНО &СтрокаПоиска";
	
	Если Параметры.СтрокаПоиска = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Таблица.Синоним ПОДОБНО &СтрокаПоиска", "ИСТИНА");
	КонецЕсли;
	
	// Составляем таблицу категорий.
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПеречислениеСсылка.ОтношениеНачисленийКДенежномуДовольствию"));
	Таблица.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(256)));
	
	ДоступныеЗначения = Перечисления.ОтношениеНачисленийКДенежномуДовольствию.ДоступныеЗначения();
	
	Для Каждого ЗначениеПеречисления Из ДоступныеЗначения Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Ссылка = Перечисления.ОтношениеНачисленийКДенежномуДовольствию[ЗначениеПеречисления.Имя];
		НоваяСтрока.Синоним = ЗначениеПеречисления.Синоним;
	КонецЦикла;
	
	// Отбор только по действующим категориям с учетом введенной строки.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("СтрокаПоиска", Строка(Параметры.СтрокаПоиска) + "%");
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтношениеНачисленийКДенежномуСодержаниюОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт

	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Синоним
	|ПОМЕСТИТЬ ВТТаблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка
	|ИЗ
	|	ВТТаблица КАК Таблица
	|ГДЕ
	|	Таблица.Синоним ПОДОБНО &СтрокаПоиска";
	
	Если Параметры.СтрокаПоиска = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Таблица.Синоним ПОДОБНО &СтрокаПоиска", "ИСТИНА");
	КонецЕсли;
	
	// Составляем таблицу категорий.
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПеречислениеСсылка.ОтношениеНачисленийКДенежномуСодержанию"));
	Таблица.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(256)));
	
	ДоступныеЗначения = Перечисления.ОтношениеНачисленийКДенежномуСодержанию.ДоступныеЗначения();
	
	Для Каждого ЗначениеПеречисления Из ДоступныеЗначения Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Ссылка = Перечисления.ОтношениеНачисленийКДенежномуСодержанию[ЗначениеПеречисления.Имя];
		НоваяСтрока.Синоним = ЗначениеПеречисления.Синоним;
	КонецЦикла;
	
	// Отбор только по действующим категориям с учетом введенной строки.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("СтрокаПоиска", Строка(Параметры.СтрокаПоиска) + "%");
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;

КонецПроцедуры

Функция ТолькоВоеннаяСлужба() Экспорт
	
	ИспользоватьГосударственнуюМуниципальнуюСлужбу  = Константы.ИспользоватьГосударственнуюСлужбу.Получить()Или Константы.ИспользоватьМуниципальнуюСлужбу.Получить();
	ИспользоватьВоеннуюСлужбу  = Константы.ИспользоватьВоеннуюСлужбу.Получить();
	Возврат ИспользоватьВоеннуюСлужбу и НЕ ИспользоватьГосударственнуюМуниципальнуюСлужбу;
	
КонецФункции

#КонецОбласти 
