#Область ОписаниеПеременных

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолей;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИмяДокумента = Параметры.ИмяДокумента;
	
	АдресПараметров = Параметры.АдресПараметров;
	ПараметрыОткрытия = ПолучитьИзВременногоХранилища(АдресПараметров);
	Объект = Новый ФиксированнаяСтруктура();
	
	ОписаниеДокумента = Новый ФиксированнаяСтруктура(ПараметрыОткрытия.ОписаниеДокумента);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОткрытия,
		"Организация,Сотрудник,ПериодРасчета,ДатаНачалаСобытия,ЕжемесячныеДопВыплатыСохраняются");
		
	Заголовок = НСтр("ru='Расчет сохраняемого денежного довольствия на'") + " " + Формат(ДатаНачалаСобытия, "ДЛФ=DD");
	
	СохраняемоеДенежноеДовольствиеЗаголовок = НСтр("ru='Сохраняемое денежное довольствие'");
	
	Если Параметры.НазначениеРасчетаСтрока = "ЕжегодныйОтпуск" Тогда
		СохраняемоеДенежноеДовольствие = ПараметрыОткрытия.СохраняемоеДенежноеДовольствие;					
	Иначе
		
		СохраняемоеДенежноеДовольствие = ПараметрыОткрытия.СохраняемоеДенежноеДовольствие;
		
	КонецЕсли;
		
	Элементы.СохраняемоеДенежноеДовольствие.Заголовок = СохраняемоеДенежноеДовольствиеЗаголовок;	
	
	ОписаниеТаблицы = ОписаниеТаблицыСохраняемоеДенежноеДовольствие();
	РасчетЗарплатыРасширенныйФормы.ДокументыВыполненияНачисленийДополнитьФорму(ЭтаФорма, ОписаниеТаблицы, "Начисления");
	РасчетЗарплатыРасширенныйКлиентСервер.ДокументыВыполненияНачисленийУстановитьРежимОтображенияПодробно(ЭтаФорма, Ложь, ОписаниеТаблицы);
	
	СтрокиДД = ПараметрыОткрытия.ДенежноеДовольствие.НайтиСтроки(Новый Структура("Сотрудник",ПараметрыОткрытия.Сотрудник));
	ЗаполнитьТаблицуДенежноеДовольствие(ПараметрыОткрытия.ДенежноеДовольствие.Выгрузить(СтрокиДД));
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДенежноеДовольствие

&НаКлиенте
Процедура ДенежноеДовольствиеПриАктивизацииСтроки(Элемент)
	
	РасчетЗарплатыРасширенныйКлиент.ДокументыВыполненияНачисленийПриАктивацииСтроки(ЭтаФорма, "ДенежноеДовольствие", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеДовольствиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗарплатаКадрыРасширенныйКлиент.РедактированиеСоставаНачисленийВыбор(
		ЭтаФорма, Элемент, Поле, СтандартнаяОбработка, 1, Сотрудник, ДатаНачалаСобытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеДовольствиеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ТекущиеДанные.Сотрудник = Сотрудник;
		ТекущиеДанные.НомерСтроки = ДенежноеДовольствие.Количество();
	КонецЕсли; 
	
	РасчетЗарплатыКлиент.СтрокаРасчетаПриНачалеРедактирования(
		ЭтаФорма, "ДенежноеДовольствие", Элементы.ДенежноеДовольствие.ТекущиеДанные, НоваяСтрока, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеДовольствиеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЗарплатыКлиент.СтрокаРасчетаПриОкончанииРедактирования(
		ЭтаФорма, ОписаниеТаблицыСохраняемоеДенежноеДовольствие());
		
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеДовольствиеПослеУдаления(Элемент)
	
	РассчитатьСотрудникаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеДовольствиеНачислениеПриИзменении(Элемент)
	
	ОписаниеТаблицыВидовРасчета = ОписаниеТаблицыСохраняемоеДенежноеДовольствие();
	ЗарплатаКадрыРасширенныйКлиент.ВводНачисленийНачислениеПриИзменении(ЭтаФорма, ОписаниеТаблицыВидовРасчета, 2);
	РасчетЗарплатыРасширенныйКлиент.ДополнитьСтрокуРасчета(ЭтаФорма, ОписаниеТаблицыВидовРасчета, Ложь, Ложь);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	Если Модифицированность Тогда
		Результат = АдресРезультатаВХранилище(ВладелецФормы.УникальныйИдентификатор);
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеДовольствиеПодробно(Команда)
	
	РасчетЗарплатыРасширенныйКлиентСервер.ДокументыВыполненияНачисленийУстановитьРежимОтображенияПодробно(ЭтаФорма, Не Элементы.ДенежноеДовольствиеПодробно.Пометка, ОписаниеТаблицыСохраняемоеДенежноеДовольствие());
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДополнитьСтроку(ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей) Экспорт
	ДополнитьСтрокуНаСервере(ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей);
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтрокуНаСервере(ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей)
	
	ЭтаФорма.Объект  = ЗаполнитьОбъект();
	РасчетЗарплатыРасширенныйФормы.ДополнитьСтрокуРасчета(ЭтаФорма, ОписаниеДокумента, ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей);
	ЭтаФорма.Объект = Новый ФиксированнаяСтруктура();

КонецПроцедуры

&НаКлиенте   
Процедура РассчитатьСотрудника(Сотрудник, ОписаниеТаблицы) Экспорт
	
	РассчитатьСотрудникаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСотрудникаНаСервере();

	ДС = ТаблицаДенежноеДовольствие();
	
	ПараметрыРасчета = РасчетДенежногоСодержанияКлиентСервер.ОписаниеПараметровСохраняемоеДенежноеСодержание();
	
	ПараметрыРасчета.Организация 		= Организация;
	ПараметрыРасчета.ПериодРасчета 		= ПериодРасчета;
	ПараметрыРасчета.ДатаНачалаСобытия 	= ДатаНачалаСобытия;
	ПараметрыРасчета.ДанныеОНачислениях = ДС;
	ПараметрыРасчета.Сотрудник 			= Сотрудник;
	
	СохраняемоеДенежноеДовольствие = РасчетДенежногоДовольствия.РассчитатьСохраняемоеДенежноеДовольствие(ПараметрыРасчета)[Сотрудник];
	
	ЗаполнитьТаблицуДенежноеДовольствие(ДС);
	
КонецПроцедуры

&НаСервере
Функция ЗначениеПоказателяВСтроке(СтруктураСтроки, Показатель)
	
	ЗначениеПоказателя = Неопределено;
	
	СчетчикПоказателей = 1;
	Пока СтруктураСтроки.Свойство("Показатель" + СчетчикПоказателей) Цикл
		
		Если СтруктураСтроки["Показатель" + СчетчикПоказателей] = Показатель Тогда
			ЗначениеПоказателя = СтруктураСтроки["Значение" + СчетчикПоказателей];
			Прервать;
		КонецЕсли; 
		
		СчетчикПоказателей = СчетчикПоказателей + 1;
		
	КонецЦикла; 
	
	Возврат ЗначениеПоказателя;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуДенежноеДовольствие(ТаблицаДенежноеДовольствие)
	
	ДенежноеДовольствие.Загрузить(ТаблицаДенежноеДовольствие);
	
	НачислениеРайонныйКоэффициент = РасчетЗарплаты.НачислениеРайонныйКоэффициент();	
	НачислениеСевернаяНадбавка = РасчетЗарплаты.НачислениеСевернаяНадбавка();
	
	ИспользуетсяРайонныйКоэффициент = Ложь;
	ИспользуетсяСевернаяНадбавка = Ложь;
	
	Если ЗначениеЗаполнено(НачислениеРайонныйКоэффициент) ИЛИ ЗначениеЗаполнено(НачислениеСевернаяНадбавка) Тогда
		
		УдаляемыеСтроки = Новый Массив;
		Для каждого СтрокаДенежноеДовольствие Из ТаблицаДенежноеДовольствие Цикл
			
			Если ЗначениеЗаполнено(НачислениеРайонныйКоэффициент) И СтрокаДенежноеДовольствие.Начисление = НачислениеРайонныйКоэффициент Тогда
				
				ИспользуетсяРайонныйКоэффициент = Истина;
				УдаляемыеСтроки.Добавить(СтрокаДенежноеДовольствие);
				
				РезультатРайонныйКоэффициент = СтрокаДенежноеДовольствие.Результат;
				СтрокаРайонныйКоэффициент = Новый ФиксированнаяСтруктура(
					ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаДенежноеДовольствие));
				
				ЗначениеПоказателяРайонныйКоэффициент = ЗначениеПоказателяВСтроке(
					СтрокаРайонныйКоэффициент, Справочники.ПоказателиРасчетаЗарплаты.РайонныйКоэффициент);
					
				ЗаголовокНачисления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1 (%2)",
					НачислениеРайонныйКоэффициент,
					Формат(ЗначениеПоказателяРайонныйКоэффициент, "ЧДЦ=2")
				);
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"РазмерРайонныйКоэффициент",
					"Заголовок",
					ЗаголовокНачисления
				);
				
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(НачислениеСевернаяНадбавка) И СтрокаДенежноеДовольствие.Начисление = НачислениеСевернаяНадбавка Тогда
				
				ИспользуетсяСевернаяНадбавка = Истина;
				УдаляемыеСтроки.Добавить(СтрокаДенежноеДовольствие);
				
				РезультатСевернаяНадбавка = СтрокаДенежноеДовольствие.Результат;
				СтрокаСевернаяНадбавка = Новый ФиксированнаяСтруктура(
					ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаДенежноеДовольствие));
					
				ЗначениеПоказателяСевернаяНадбавка = ЗначениеПоказателяВСтроке(
					СтрокаСевернаяНадбавка, Справочники.ПоказателиРасчетаЗарплаты.СевернаяНадбавка);
				
				ЗаголовокНачисления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1 (%2%)",
					НачислениеСевернаяНадбавка,
					Формат(ЗначениеПоказателяСевернаяНадбавка, "ЧДЦ=2")
				);
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"РазмерСевернаяНадбавка",
					"Заголовок",
					ЗаголовокНачисления
				);
				
			КонецЕсли; 
			
			Если ИспользуетсяРайонныйКоэффициент И ИспользуетсяСевернаяНадбавка Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			
			НайденныеСтроки = ДенежноеДовольствие.НайтиСтроки(Новый Структура("Начисление", УдаляемаяСтрока.Начисление));
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ДенежноеДовольствие.Удалить(НайденнаяСтрока);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерРайонныйКоэффициент",
		"Видимость",
		ИспользуетсяРайонныйКоэффициент
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерСевернаяНадбавка",
		"Видимость",
		ИспользуетсяСевернаяНадбавка
	);
	
	Сч = 1;
	Для каждого СтрокаТЗ Из ДенежноеДовольствие Цикл
		СтрокаТЗ.НомерСтроки = Сч;
	    Сч = Сч+1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеТаблицыСохраняемоеДенежноеДовольствие()

	ОписаниеТаблицы = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета();
	
	ОписаниеТаблицы.ИмяРеквизитаДатаНачала 	= Неопределено;
	ОписаниеТаблицы.СодержитПолеСотрудник	= Истина;
	ОписаниеТаблицы.ИмяТаблицы				= "ДенежноеДовольствие";
	ОписаниеТаблицы.ПутьКДанным				= "ДенежноеДовольствие";
	ОписаниеТаблицы.ИмяРеквизитаСотрудник	= "Сотрудник";
	
	ОписаниеТаблицы.ИмяРеквизитаПериод = Неопределено;
	ОписаниеТаблицы.НомерТаблицы 			= 6.2;
	
	Возврат ОписаниеТаблицы;	

КонецФункции

&НаСервере
Функция ПолучитьКонтролируемыеПоля() Экспорт
	
	КонтролируемыеПоля = Новый Структура;
	
	// ДенежноеДовольствие
	ДенежноеДовольствиеРасчет = Новый Массив;
	ДенежноеДовольствиеРасчет.Добавить("Результат");
	
	ДенежноеДовольствиеПоля = Новый Структура;
	ДенежноеДовольствиеПоля.Вставить("ФиксРасчет", ДенежноеДовольствиеРасчет);
	ДенежноеДовольствиеПоля.Вставить("ФиксЗаполнение", Новый Массив);
	
	КонтролируемыеПоля.Вставить("ДенежноеДовольствие", ДенежноеДовольствиеПоля);
	
	Возврат КонтролируемыеПоля;
	
КонецФункции

&НаСервере
Функция ТаблицаДенежноеДовольствие()
	
	ТаблицаДенежногоДовольствия = ДенежноеДовольствие.Выгрузить();
	
	Если ИспользуетсяРайонныйКоэффициент Тогда
		
		СтрокаДенежноеДовольствие = ТаблицаДенежногоДовольствия.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДенежноеДовольствие, СтрокаРайонныйКоэффициент);
		СтрокаДенежноеДовольствие.Результат = РезультатРайонныйКоэффициент;
		
	КонецЕсли; 
	
	Если ИспользуетсяСевернаяНадбавка Тогда
		
		СтрокаДенежноеДовольствие = ТаблицаДенежногоДовольствия.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДенежноеДовольствие,СтрокаСевернаяНадбавка);
		СтрокаДенежноеДовольствие.Результат = РезультатСевернаяНадбавка;
		
	КонецЕсли; 
	
	Возврат ТаблицаДенежногоДовольствия;
	
КонецФункции

&НаСервере
Функция АдресРезультатаВХранилище(УникальныйИдентификаторВладельца)
	
	Результат = Новый Структура;
	Результат.Вставить("ДенежноеДовольствие", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаДенежноеДовольствие()));
	Результат.Вставить("СохраняемоеДенежноеДовольствие", СохраняемоеДенежноеДовольствие);

	
	Возврат ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификаторВладельца);
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтарыеЗначенияКонтролируемыхПолей() Экспорт
	Возврат СтарыеЗначенияКонтролируемыхПолей;
КонецФункции

&НаКлиенте
Процедура Подключаемый_ДенежноеДовольствиеОтменитьИсправление(Команда)
	РасчетЗарплатыКлиент.ОтменитьИсправление(ЭтаФорма, ОписаниеТаблицыСохраняемоеДенежноеДовольствие());	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьНачисленияСотрудника(Сотрудники, СохранятьИсправления = Истина) Экспорт

	ПерезаполнитьНачисленияСотрудникаНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьНачисленияСотрудникаНаСервере() Экспорт

	Объект = ЗаполнитьОбъект();
	
	РасчетДенежногоДовольствия.ОбновитьДанныеСохраняемогоДенежногоДовольствияДокумента(Объект);
	
	ПараметрыРасчета = РасчетДенежногоДовольствияКлиентСервер.ОписаниеПараметровСохраняемоеДенежноеДовольствие();
	ПараметрыРасчета.Сотрудник   = Сотрудник;
	ПараметрыРасчета.Организация = Организация;
	ПараметрыРасчета.ПериодРасчета = ПериодРасчета;
	ПараметрыРасчета.ДатаНачалаСобытия = ДатаНачалаСобытия;
	ПараметрыРасчета.ДанныеОНачислениях = Объект.ДенежноеДовольствие;
	
	СохраняемоеДенежноеДовольствие = РасчетДенежногоДовольствия.РассчитатьСохраняемоеДенежноеДовольствие(ПараметрыРасчета)[Сотрудник];
	
	ЗаполнитьТаблицуДенежноеДовольствие(Объект.ДенежноеДовольствие);
	ЗаполнитьВторичныеДанныеПоказателей();
	
	Объект = Новый ФиксированнаяСтруктура();

КонецПроцедуры

&НаСервере
Функция ЗаполнитьОбъект()

	ОбъектСтруктура = Новый Структура;
	ОбъектСтруктура.Вставить("ДенежноеДовольствие", ТаблицаДенежноеДовольствие());
	ОбъектСтруктура.Вставить("Сотрудник", Сотрудник);	
	ОбъектСтруктура.Вставить("Ссылка", Неопределено);	
	ОбъектСтруктура.Вставить("Организация", Организация);
	ОбъектСтруктура.Вставить(ОписаниеДокумента.МесяцНачисленияИмя, ПериодРасчета);
	ОбъектСтруктура.Вставить(ОписаниеДокумента.ДатаНачалаСобытияИмя, ДатаНачалаСобытия);
	
	Возврат ОбъектСтруктура;

КонецФункции

&НаСервере
Процедура ЗаполнитьВторичныеДанныеПоказателей() 
	
	Если ДенежноеДовольствие.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	МаксимальноеКоличествоПоказателей = ЗарплатаКадрыРасширенныйКлиентСервер.МаксимальноеКоличествоПоказателей(ЭтаФорма, "ДенежноеДовольствие");
	Для Каждого СтрокаНачислений Из ДенежноеДовольствие Цикл
		
		Для НомерПоказателя = 1 По МаксимальноеКоличествоПоказателей Цикл
			Показатель = СтрокаНачислений["Показатель" + НомерПоказателя];
			Если Не ЗначениеЗаполнено(Показатель) Тогда
				Продолжить;
			КонецЕсли;
			ПоказательИнфо = ЗарплатаКадрыРасширенный.СведенияОПоказателеРасчетаЗарплаты(СтрокаНачислений["Показатель" + НомерПоказателя]);
			СтрокаНачислений["ТочностьПоказателя" + НомерПоказателя] 		= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ЧДЦ=%1", ПоказательИнфо["Точность"]);
			СтрокаНачислений["ПредставлениеПоказателя" + НомерПоказателя] 	= ?(ЗначениеЗаполнено(ПоказательИнфо["КраткоеНаименование"]), ПоказательИнфо["КраткоеНаименование"], ПоказательИнфо["Наименование"]);
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры


#КонецОбласти

#Область Инициализация

СтарыеЗначенияКонтролируемыхПолей = Новый Соответствие;

#КонецОбласти
