#Область ОписаниеПеременных

&НаКлиенте
Перем СтарыеЗначенияКонтролируемыхПолей;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИмяДокумента = Параметры.ИмяДокумента;
	
	АдресПараметров = Параметры.АдресПараметров;
	ПараметрыОткрытия = ПолучитьИзВременногоХранилища(АдресПараметров);
	
	ОписаниеДокумента = Новый ФиксированнаяСтруктура(ПараметрыОткрытия.ОписаниеДокумента);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОткрытия,
		"Организация,Сотрудник,ПериодРасчета,ДатаНачалаСобытия,ПериодРасчетаСреднегоЗаработкаНачало,ПериодРасчетаСреднегоЗаработкаОкончание,ЕжемесячныеДопВыплатыСохраняются");
		
	Заголовок = НСтр("ru='Расчет сохраняемого денежного содержания на'") + " " + Формат(ДатаНачалаСобытия, "ДЛФ=DD");
	
	СохраняемоеДенежноеСодержаниеЗаголовок = НСтр("ru='Сохраняемое денежное содержание'");
	
	ДокументСсылка = Параметры.Объект.Ссылка;
	
	Если Параметры.НазначениеРасчетаСтрока = "ЕжегодныйОтпуск" Тогда
		НазначениеРасчета = Перечисления.НазначениеРасчетаСохраняемогоДенежногоСодержания.ЕжегодныйОтпуск;
		СохраняемоеДенежноеСодержание = ПараметрыОткрытия.СохраняемоеДенежноеСодержание;
	ИначеЕсли Параметры.НазначениеРасчетаСтрока = "ВыходноеПособие" Тогда
		НазначениеРасчета = Перечисления.НазначениеРасчетаСохраняемогоДенежногоСодержания.ВыходноеПособие;
		СохраняемоеДенежноеСодержание = ПараметрыОткрытия.МесячноеДенежноеСодержание;
		СохраняемоеДенежноеСодержаниеЗаголовок = НСтр("ru='Месячное денежное содержание'");
	Иначе
		НазначениеРасчета =  Перечисления.НазначениеРасчетаСохраняемогоДенежногоСодержания.СохраняемоеДенежноеСодержание;
		СохраняемоеДенежноеСодержание = ПараметрыОткрытия.СохраняемоеДенежноеСодержание;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СтраницаФактическиеВыплаты",
			"Видимость",
			Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Страницы",
			"ОтображениеСтраниц",
			ОтображениеСтраницФормы.Нет); 
	КонецЕсли;
		
	Элементы.СохраняемоеДенежноеСодержание.Заголовок = СохраняемоеДенежноеСодержаниеЗаголовок;	
	
	ОписаниеТаблицы = ОписаниеТаблицыСохраняемоеДенежноеСодержание();
	РасчетЗарплатыРасширенныйФормы.ДокументыВыполненияНачисленийДополнитьФорму(ЭтаФорма, ОписаниеТаблицы, "Начисления");
	РасчетЗарплатыРасширенныйКлиентСервер.ДокументыВыполненияНачисленийУстановитьРежимОтображенияПодробно(ЭтаФорма, Ложь, ОписаниеТаблицы);
	
	ОтборСтрок = Новый Структура("НазначениеРасчета", НазначениеРасчета);
	ЗаполнитьТаблицуДенежноеСодержание(ПараметрыОткрытия.ДенежноеСодержание.Выгрузить(ОтборСтрок));
	ЗаполнитьТаблицуДенежноеСодержаниеФактическиеНачисления(ПараметрыОткрытия.ДенежноеСодержаниеФактическиеНачисления.Выгрузить(ОтборСтрок));
	
	НазначенияРасчетаДенежногоСодержания = Новый ФиксированнаяСтруктура(Новый Структура("НазначениеРасчета", НазначениеРасчета));
	
	ЗаполнитьВторичныеДанныеПоказателей();
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(ДенежноеСодержаниеФактическиеНачисления, "Период", "ПериодСтрокой");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДенежноеСодержание

&НаКлиенте
Процедура ДенежноеСодержаниеПриАктивизацииСтроки(Элемент)
	
	РасчетЗарплатыРасширенныйКлиент.ДокументыВыполненияНачисленийПриАктивацииСтроки(ЭтаФорма, "ДенежноеСодержание", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗарплатаКадрыРасширенныйКлиент.РедактированиеСоставаНачисленийВыбор(
		ЭтаФорма, Элемент, Поле, СтандартнаяОбработка, 1, Сотрудник, ДатаНачалаСобытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ТекущиеДанные.Сотрудник 		= Сотрудник;
		ТекущиеДанные.НазначениеРасчета = НазначениеРасчета;
		ТекущиеДанные.НомерСтроки 		= ДенежноеСодержание.Количество();
		
	КонецЕсли; 
	
	РасчетЗарплатыКлиент.СтрокаРасчетаПриНачалеРедактирования(
		ЭтаФорма, "ДенежноеСодержание", Элементы.ДенежноеСодержание.ТекущиеДанные, НоваяСтрока, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЗарплатыКлиент.СтрокаРасчетаПриОкончанииРедактирования(ЭтаФорма, ОписаниеТаблицыСохраняемоеДенежноеСодержание());
		
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеПослеУдаления(Элемент)
	РассчитатьСотрудникаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеНачислениеПриИзменении(Элемент)
	
	ОписаниеТаблицыВидовРасчета = ОписаниеТаблицыСохраняемоеДенежноеСодержание();
	ЗарплатаКадрыРасширенныйКлиент.ВводНачисленийНачислениеПриИзменении(ЭтаФорма, ОписаниеТаблицыВидовРасчета, 2);
	РасчетЗарплатыРасширенныйКлиент.ДополнитьСтрокуРасчета(ЭтаФорма, ОписаниеТаблицыВидовРасчета, Ложь, Истина);
	РассчитатьСотрудникаНаСервере();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДенежноеСодержаниеФактическиеНачисления

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование И Элемент.ТекущиеДанные.Корректировка Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекущиеДанные.Период = ПериодРасчетаСреднегоЗаработкаНачало;
		ТекущиеДанные.ПериодСтрокой = ЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ТекущиеДанные.Период);
		ТекущиеДанные.Сотрудник = Сотрудник;
		ТекущиеДанные.НазначениеРасчета = НазначениеРасчета;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущийЭлемент.Имя = "ДенежноеСодержаниеФактическиеНачисленияПериодСтрокой" Тогда
			ДенежноеСодержаниеФактическиеНачисления.Сортировать("Период");
		ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ДенежноеСодержаниеФактическиеНачисленияНачисление" И Не ИспользуетсяРайонныйКоэффициент И Не ИспользуетсяСевернаяНадбавка Тогда
		Иначе	
			РассчитатьСотрудникаНаСервере();
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Корректировка Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПослеУдаления(Элемент)
	РассчитатьСотрудникаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные, "Период", "ПериодСтрокой", Модифицированность);
	ОграничитьВыбранныйПериод(Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПериодСтрокойВыборЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные, "Период", "ПериодСтрокой",,Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные.Период = ПериодРасчетаСреднегоЗаработкаНачало И Направление = -1
		Или Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные.Период = НачалоМесяца(ПериодРасчетаСреднегоЗаработкаОкончание) И Направление = 1 Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные, "Период", "ПериодСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеФактическиеНачисленияПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьВыбранныйПериод(ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекущиеДанные = Элементы.ДенежноеСодержаниеФактическиеНачисления.ТекущиеДанные;
	КонецЕсли;
	
	Если ТекущиеДанные.Период < ПериодРасчетаСреднегоЗаработкаНачало Тогда
		ТекущиеДанные.Период = ПериодРасчетаСреднегоЗаработкаНачало;
		ТекущиеДанные.ПериодСтрокой = ЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ТекущиеДанные.Период);
	ИначеЕсли ТекущиеДанные.Период > НачалоМесяца(ПериодРасчетаСреднегоЗаработкаОкончание) Тогда
		ТекущиеДанные.Период = НачалоМесяца(ПериодРасчетаСреднегоЗаработкаОкончание);
		ТекущиеДанные.ПериодСтрокой = ЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ТекущиеДанные.Период);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокойВыборЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	ОграничитьВыбранныйПериод(Неопределено);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	Если Модифицированность Тогда
		Результат = АдресРезультатаВХранилище(ВладелецФормы.УникальныйИдентификатор);
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежноеСодержаниеПодробно(Команда)
	
	РасчетЗарплатыРасширенныйКлиентСервер.ДокументыВыполненияНачисленийУстановитьРежимОтображенияПодробно(ЭтаФорма, Не Элементы.ДенежноеСодержаниеПодробно.Пометка, ОписаниеТаблицыСохраняемоеДенежноеСодержание());
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДополнитьСтроку(ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей) Экспорт
	ДополнитьСтрокуНаСервере(ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей);
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтрокуНаСервере(ИдентификаторСтроки, ОписаниеТаблицы, ЗаполнятьСведенияСотрудников, ЗаполнятьЗначенияПоказателей)
	
	ИдентификаторыСтрок = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторСтроки);
	
	ИмяТаблицы = ОписаниеТаблицы.ИмяТаблицы;
	ДанныеНачислений = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(ЭтаФорма, ОписаниеТаблицы.ПутьКДанным);
	
	Если ИдентификаторыСтрок = Неопределено Тогда
		СтрокиРасчета = ДанныеНачислений;
	Иначе
		СтрокиРасчета = Новый Массив;
		Для Каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
			СтрокаРасчета = ДанныеНачислений.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если СтрокаРасчета <> Неопределено Тогда
				СтрокиРасчета.Добавить(СтрокаРасчета);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Если СтрокиРасчета.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	МенеджерРасчета = РасчетЗарплатыРасширенный.СоздатьМенеджерРасчета(ПериодРасчета, Организация);
	ТаблицаРасчета = МенеджерРасчета.ТаблицаНачислений();
	
	СоответствиеСтрок = Новый Соответствие;
	Для Каждого СтрокаРасчета Из СтрокиРасчета Цикл
		НоваяСтрока = ТаблицаРасчета.Добавить();
		СоответствиеСтрок.Вставить(НоваяСтрока, СтрокаРасчета);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасчета);
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.ДатаНачала = НачалоМесяца(ПериодРасчета);
		НоваяСтрока.ДатаОкончания = КонецМесяца(ПериодРасчета);
	КонецЦикла;
	
	Если ЗаполнятьСведенияСотрудников Тогда
		МенеджерРасчета.ЗаполнитьСведенияНачисленийДляРасчета(ТаблицаРасчета);
	КонецЕсли;
	
	Если ЗаполнятьЗначенияПоказателей Тогда
		МенеджерРасчета.ЗаполнитьЗначенияПоказателейНачислений(ТаблицаРасчета);
	КонецЕсли;
	
	ВидыРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаРасчета, "Начисление");
	ВидыРасчетаИнфо = ЗарплатаКадрыРасширенный.ИнформацияОВидахРасчета(ВидыРасчета);
	Для Каждого КлючИЗначение Из СоответствиеСтрок Цикл
		СтрокаПриемник = КлючИЗначение.Значение;
		СтрокаИсточник = КлючИЗначение.Ключ;
		СтрокаРезультатаРасчетаВДанныеФормы(СтрокаПриемник, СтрокаИсточник, ВидыРасчетаИнфо);
		СтрокаПриемник.НазначениеРасчета = НазначениеРасчета;
		СтрокаПриемник.ИдентификаторСтрокиВидаРасчета = СтрокаИсточник.ИдентификаторСтроки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СтрокаРезультатаРасчетаВДанныеФормы(СтрокаПриемник, СтрокаИсточник, ВидыРасчетаИнфо)

	ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник);
	ЗначенияРеквизитов = ВидыРасчетаИнфо.Получить(СтрокаИсточник.Начисление);
	Если ЗначенияРеквизитов <> Неопределено Тогда
		ЗначенияРеквизитов.Вставить("ДоступенВыборОснования", ЗначенияРеквизитов.ПоддерживаетНесколькоПлановыхНачислений);
		ЗаполнитьЗначенияСвойств(СтрокаПриемник, ЗначенияРеквизитов);
		ПоказателиСтроки = ОбщегоНазначения.ВыгрузитьКолонку(ЗначенияРеквизитов.Показатели, "Показатель");
		Если СтрокаИсточник.Показатели.Количество() > 0 Тогда
			Сч = 1;
			Для Каждого Показатель Из ПоказателиСтроки Цикл
				СтрокаПоказателя = СтрокаИсточник.Показатели.Найти(Показатель, "Показатель");
				Если СтрокаПоказателя <> Неопределено И Показатель.ОтображатьВДокументахНачисления Тогда
					СтрокаПриемник["Показатель" + Сч] = СтрокаПоказателя.Показатель;
					СтрокаПриемник["Значение" + Сч]   = СтрокаПоказателя.Значение;
					Сч = Сч + 1;
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте   
Процедура РассчитатьСотрудника(Сотрудник, ОписаниеТаблицы) Экспорт
	
	РассчитатьСотрудникаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСотрудникаНаСервере();

	ДС = ТаблицаДенежноеСодержание();
	ДСФН = ТаблицаДенежноеСодержаниеФактическиеНачисления();
	
	ПараметрыРасчета = РасчетДенежногоСодержанияКлиентСервер.ОписаниеПараметровСохраняемоеДенежноеСодержание();
	
	ПараметрыРасчета.Сотрудник   = Сотрудник;
	ПараметрыРасчета.Организация = Организация;
	ПараметрыРасчета.ПериодРасчета = ПериодРасчета;
	ПараметрыРасчета.НазначениеРасчета = НазначениеРасчета;
	ПараметрыРасчета.ДатаНачалаСобытия = ДатаНачалаСобытия;
	ПараметрыРасчета.ДанныеОНачислениях = ДС;
	ПараметрыРасчета.ДанныеОФактическихНачислениях = ДСФН;
	
	СохраняемоеДенежноеСодержание = РасчетДенежногоСодержания.РассчитатьСохраняемоеДенежноеСодержание(ПараметрыРасчета);
	
	ЗаполнитьТаблицуДенежноеСодержание(ДС);
	ЗаполнитьТаблицуДенежноеСодержаниеФактическиеНачисления(ДСФН);
	ЗаполнитьВторичныеДанныеПоказателей();
	
КонецПроцедуры

&НаСервере
Функция ЗначениеПоказателяВСтроке(СтруктураСтроки, Показатель)
	
	ЗначениеПоказателя = Неопределено;
	
	СчетчикПоказателей = 1;
	Пока СтруктураСтроки.Свойство("Показатель" + СчетчикПоказателей) Цикл
		
		Если СтруктураСтроки["Показатель" + СчетчикПоказателей] = Показатель Тогда
			ЗначениеПоказателя = СтруктураСтроки["Значение" + СчетчикПоказателей];
			Прервать;
		КонецЕсли; 
		
		СчетчикПоказателей = СчетчикПоказателей + 1;
		
	КонецЦикла; 
	
	Возврат ЗначениеПоказателя;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуДенежноеСодержание(ТаблицаДенежноеСодержание)
	
	ДенежноеСодержание.Загрузить(ТаблицаДенежноеСодержание);
	
	НачислениеРайонныйКоэффициент = РасчетЗарплаты.НачислениеРайонныйКоэффициент();	
	НачислениеСевернаяНадбавка = РасчетЗарплаты.НачислениеСевернаяНадбавка();
	
	ИспользуетсяРайонныйКоэффициент = Ложь;
	ИспользуетсяСевернаяНадбавка = Ложь;
	
	Если ЗначениеЗаполнено(НачислениеРайонныйКоэффициент) ИЛИ ЗначениеЗаполнено(НачислениеСевернаяНадбавка) Тогда
		
		УдаляемыеСтроки = Новый Массив;
		Для каждого СтрокаДенежноеСодержание Из ТаблицаДенежноеСодержание Цикл
			
			Если ЗначениеЗаполнено(НачислениеРайонныйКоэффициент) И СтрокаДенежноеСодержание.Начисление = НачислениеРайонныйКоэффициент Тогда
				
				ИспользуетсяРайонныйКоэффициент = Истина;
				УдаляемыеСтроки.Добавить(СтрокаДенежноеСодержание);
				
				РезультатРайонныйКоэффициент = СтрокаДенежноеСодержание.Результат;
				СтрокаРайонныйКоэффициент = Новый ФиксированнаяСтруктура(
					ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаДенежноеСодержание));
				
				ЗначениеПоказателяРайонныйКоэффициент = ЗначениеПоказателяВСтроке(
					СтрокаРайонныйКоэффициент, Справочники.ПоказателиРасчетаЗарплаты.РайонныйКоэффициент);
					
				ЗаголовокНачисления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1 (%2)",
					НачислениеРайонныйКоэффициент,
					Формат(ЗначениеПоказателяРайонныйКоэффициент, "ЧДЦ=2")
				);
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"РазмерРайонныйКоэффициент",
					"Заголовок",
					ЗаголовокНачисления
				);
				
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(НачислениеСевернаяНадбавка) И СтрокаДенежноеСодержание.Начисление = НачислениеСевернаяНадбавка Тогда
				
				ИспользуетсяСевернаяНадбавка = Истина;
				УдаляемыеСтроки.Добавить(СтрокаДенежноеСодержание);
				
				РезультатСевернаяНадбавка = СтрокаДенежноеСодержание.Результат;
				СтрокаСевернаяНадбавка = Новый ФиксированнаяСтруктура(
					ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаДенежноеСодержание));
					
				ЗначениеПоказателяСевернаяНадбавка = ЗначениеПоказателяВСтроке(
					СтрокаСевернаяНадбавка, Справочники.ПоказателиРасчетаЗарплаты.СевернаяНадбавка);
				
				ЗаголовокНачисления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"%1 (%2%)",
					НачислениеСевернаяНадбавка,
					Формат(ЗначениеПоказателяСевернаяНадбавка, "ЧДЦ=2")
				);
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"РазмерСевернаяНадбавка",
					"Заголовок",
					ЗаголовокНачисления
				);
				
			КонецЕсли; 
			
			Если ИспользуетсяРайонныйКоэффициент И ИспользуетсяСевернаяНадбавка Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			
			НайденныеСтроки = ДенежноеСодержание.НайтиСтроки(Новый Структура("Начисление", УдаляемаяСтрока.Начисление));
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ДенежноеСодержание.Удалить(НайденнаяСтрока);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерРайонныйКоэффициент",
		"Видимость",
		ИспользуетсяРайонныйКоэффициент
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерСевернаяНадбавка",
		"Видимость",
		ИспользуетсяСевернаяНадбавка
	);
	
	Сч = 1;
	Для каждого СтрокаТЗ Из ДенежноеСодержание Цикл
		СтрокаТЗ.НомерСтроки = Сч;
	    Сч = Сч+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДенежноеСодержаниеФактическиеНачисления(ТаблицаДенежноеСодержаниеФактическиеНачисления)
	
	ДенежноеСодержаниеФактическиеНачисления.Загрузить(ТаблицаДенежноеСодержаниеФактическиеНачисления);
	
	Отбор = Новый Структура("Корректировка", Истина);
	СтрокиКорректировки = ДенежноеСодержаниеФактическиеНачисления.Выгрузить(Отбор);
	Если СтрокиКорректировки.Количество() > 0 Тогда
		
		СтрокиКорректировки.Свернуть("Начисление");
		ВидыРасчета = СтрокиКорректировки.ВыгрузитьКолонку("Начисление");
		НаименованияВидовРасчета = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВидыРасчета, "Наименование");
		
		Постфикс = " ("+НСтр("ru='данные прошлой версии'")+")";
		НайденныеСтроки = ДенежноеСодержаниеФактическиеНачисления.НайтиСтроки(Отбор);
		Для каждого СтрокаТЗ Из НайденныеСтроки Цикл
			Если ЗначениеЗаполнено(СтрокаТЗ.Начисление) Тогда
				СтрокаТЗ.НачислениеСтрокой = НаименованияВидовРасчета[СтрокаТЗ.Начисление].Наименование + Постфикс;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеТаблицыСохраняемоеДенежноеСодержание()

	ОписаниеТаблицы = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета();
	
	ОписаниеТаблицы.ИмяРеквизитаДатаНачала 	= Неопределено;
	ОписаниеТаблицы.СодержитПолеСотрудник	= Истина;
	ОписаниеТаблицы.ИмяТаблицы				= "ДенежноеСодержание";
	ОписаниеТаблицы.ПутьКДанным				= "ДенежноеСодержание";
	ОписаниеТаблицы.ИмяРеквизитаСотрудник	= "Сотрудник";
	
	ОписаниеТаблицы.ИмяРеквизитаПериод = Неопределено;
	ОписаниеТаблицы.НомерТаблицы 			= 6.1;
	
	Возврат ОписаниеТаблицы;	

КонецФункции

&НаСервере
Функция ПолучитьКонтролируемыеПоля() Экспорт
	
	КонтролируемыеПоля = Новый Структура;
	
	// ДенежноеСодержание
	ДенежноеСодержаниеРасчет = Новый Массив;
	ДенежноеСодержаниеРасчет.Добавить("Результат");
	
	ДенежноеСодержаниеПоля = Новый Структура;
	ДенежноеСодержаниеПоля.Вставить("ФиксРасчет", ДенежноеСодержаниеРасчет);
	ДенежноеСодержаниеПоля.Вставить("ФиксЗаполнение", Новый Массив);
	
	КонтролируемыеПоля.Вставить("ДенежноеСодержание", ДенежноеСодержаниеПоля);
	
	Возврат КонтролируемыеПоля;
	
КонецФункции

&НаСервере
Функция ТаблицаДенежноеСодержание()
	
	ТаблицаДенежногоСодержания = ДенежноеСодержание.Выгрузить();
	
	Если ИспользуетсяРайонныйКоэффициент Тогда
		
		СтрокаДенежноеСодержание = ТаблицаДенежногоСодержания.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДенежноеСодержание, СтрокаРайонныйКоэффициент);
		СтрокаДенежноеСодержание.Результат = РезультатРайонныйКоэффициент;
		
	КонецЕсли; 
	
	Если ИспользуетсяСевернаяНадбавка Тогда
		
		СтрокаДенежноеСодержание = ТаблицаДенежногоСодержания.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДенежноеСодержание,СтрокаСевернаяНадбавка);
		СтрокаДенежноеСодержание.Результат = РезультатСевернаяНадбавка;
		
	КонецЕсли; 
	
	Возврат ТаблицаДенежногоСодержания;
	
КонецФункции

&НаСервере
Функция ТаблицаДенежноеСодержаниеФактическиеНачисления()
	
	ТаблицаДенежногоСодержанияФактическиеНачисления = ДенежноеСодержаниеФактическиеНачисления.Выгрузить();
	Возврат ТаблицаДенежногоСодержанияФактическиеНачисления;
	
КонецФункции

&НаСервере
Функция АдресРезультатаВХранилище(УникальныйИдентификаторВладельца)
	
	Результат = Новый Структура;
	Результат.Вставить("ДенежноеСодержание", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаДенежноеСодержание()));
	Результат.Вставить("ДенежноеСодержаниеФактическиеНачисления", ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаДенежноеСодержаниеФактическиеНачисления()));
	Результат.Вставить("СохраняемоеДенежноеСодержание", СохраняемоеДенежноеСодержание);
	Результат.Вставить("НазначениеРасчета", НазначениеРасчета);
	
	Возврат ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификаторВладельца);
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтарыеЗначенияКонтролируемыхПолей() Экспорт
	Возврат СтарыеЗначенияКонтролируемыхПолей;
КонецФункции

&НаКлиенте
Процедура Подключаемый_ДенежноеСодержаниеОтменитьИсправление(Команда)
	РасчетЗарплатыКлиент.ОтменитьИсправление(ЭтаФорма, ОписаниеТаблицыСохраняемоеДенежноеСодержание());	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьНачисленияСотрудника(Сотрудники, СохранятьИсправления = Истина) Экспорт

	ПерезаполнитьНачисленияСотрудникаНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьНачисленияСотрудникаНаСервере() Экспорт

	Объект = ЗаполнитьОбъект();
	
	РасчетДенежногоСодержания.ОбновитьДанныеСохраняемогоДенежногоСодержанияДокумента(ЭтаФорма, ОписаниеДокумента, Истина, Ложь);
	
	ПараметрыРасчета = РасчетДенежногоСодержанияКлиентСервер.ОписаниеПараметровСохраняемоеДенежноеСодержание();
	ПараметрыРасчета.Сотрудник   = Сотрудник;
	ПараметрыРасчета.Организация = Организация;
	ПараметрыРасчета.ПериодРасчета = ПериодРасчета;
	ПараметрыРасчета.НазначениеРасчета = НазначениеРасчета;
	ПараметрыРасчета.ДатаНачалаСобытия = ДатаНачалаСобытия;
	ПараметрыРасчета.ДанныеОНачислениях = Объект.ДенежноеСодержание;
	ПараметрыРасчета.ДанныеОФактическихНачислениях = Объект.ДенежноеСодержаниеФактическиеНачисления;
	
	СохраняемоеДенежноеСодержание = РасчетДенежногоСодержания.РассчитатьСохраняемоеДенежноеСодержание(ПараметрыРасчета);
	
	ЗаполнитьТаблицуДенежноеСодержание(Объект.ДенежноеСодержание);
	ЗаполнитьТаблицуДенежноеСодержаниеФактическиеНачисления(Объект.ДенежноеСодержаниеФактическиеНачисления);
	ЗаполнитьВторичныеДанныеПоказателей();
	
	Объект = Новый ФиксированнаяСтруктура();

КонецПроцедуры

&НаСервере
Функция ЗаполнитьОбъект()

	ОбъектСтруктура = Новый Структура;
	ОбъектСтруктура.Вставить("ДенежноеСодержание", ТаблицаДенежноеСодержание());
	ОбъектСтруктура.Вставить("ДенежноеСодержаниеФактическиеНачисления", ТаблицаДенежноеСодержаниеФактическиеНачисления());
	ОбъектСтруктура.Вставить("ПериодРасчетаСреднегоЗаработкаНачало", ПериодРасчетаСреднегоЗаработкаНачало);	
	ОбъектСтруктура.Вставить("ПериодРасчетаСреднегоЗаработкаОкончание", ПериодРасчетаСреднегоЗаработкаОкончание);
	ОбъектСтруктура.Вставить("Сотрудник", Сотрудник);	
	ОбъектСтруктура.Вставить("Ссылка", ДокументСсылка);	
	ОбъектСтруктура.Вставить("НазначенияРасчетаДенежногоСодержания", НазначенияРасчетаДенежногоСодержания);
	ОбъектСтруктура.Вставить("Организация", Организация);
	ОбъектСтруктура.Вставить(ОписаниеДокумента.МесяцНачисленияИмя, ПериодРасчета);
	ОбъектСтруктура.Вставить(ОписаниеДокумента.ДатаНачалаСобытияИмя, ДатаНачалаСобытия);
	ОбъектСтруктура.Вставить("ДолжностьЗамещаласьМенее12Месяцев", Не ЕжемесячныеДопВыплатыСохраняются);
	
	Возврат ОбъектСтруктура;

КонецФункции


&НаСервере
Процедура ЗаполнитьВторичныеДанныеПоказателей() 
	
	Если ДенежноеСодержание.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	МаксимальноеКоличествоПоказателей = ЗарплатаКадрыРасширенныйКлиентСервер.МаксимальноеКоличествоПоказателей(ЭтаФорма, "ДенежноеСодержание");
	Для Каждого СтрокаНачислений Из ДенежноеСодержание Цикл
		
		Для НомерПоказателя = 1 По МаксимальноеКоличествоПоказателей Цикл
			Показатель = СтрокаНачислений["Показатель" + НомерПоказателя];
			Если Не ЗначениеЗаполнено(Показатель) Тогда
				Продолжить;
			КонецЕсли;
			ПоказательИнфо = ЗарплатаКадрыРасширенный.СведенияОПоказателеРасчетаЗарплаты(СтрокаНачислений["Показатель" + НомерПоказателя]);
			СтрокаНачислений["ТочностьПоказателя" + НомерПоказателя] 		= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ЧДЦ=%1", ПоказательИнфо["Точность"]);
			СтрокаНачислений["ПредставлениеПоказателя" + НомерПоказателя] 	= ?(ЗначениеЗаполнено(ПоказательИнфо["КраткоеНаименование"]), ПоказательИнфо["КраткоеНаименование"], ПоказательИнфо["Наименование"]);
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры


#КонецОбласти

#Область Инициализация

СтарыеЗначенияКонтролируемыхПолей = Новый Соответствие;

#КонецОбласти
